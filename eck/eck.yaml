

apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch
  namespace: eck
spec:
  version: 8.12.1
  nodeSets:
    - name: default
      count: 1
      config: 
        node.store.allow_mmap: false
      podTemplate:
        metadata:
          annotations:
            traffic.sidecar.istio.io/includeInboundPorts: "*"
            traffic.sidecar.istio.io/excludeOutboundPorts: "9300,443" 
            traffic.sidecar.istio.io/excludeInboundPorts: "9300"
        spec:
          automountServiceAccountToken: true
          containers:
            - name: elasticsearch
              resources: {}
                # requests:
                #   memory: 4Gi
                #   cpu: 2
                # limits:
                #   memory: 4Gi
          initContainers:
          - name: install-plugins
            command:
              - sh
              - -c
              - |
                bin/elasticsearch-plugin remove --purge analysis-icu
                bin/elasticsearch-plugin install --batch analysis-icu
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi
  http:
    service:
      spec:
        ports:
          - name: https
            port: 9200
            protocol: TCP
            targetPort: 9200

---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: kibana
  namespace: eck
spec:
  version: 8.12.1
  count: 1
  elasticsearchRef:
    name: elasticsearch
    namespace: eck
  config:
    server.publicBaseUrl: "https://kibana.stack.fredgentech.net"
    server.host: "0.0.0.0"
  http:
    tls:
      selfSignedCertificate:
        disabled: true
    service:
      spec:
        ports:
          - name: http
            port: 5601
            protocol: TCP
            targetPort: 5601
  podTemplate:
    spec:
      automountServiceAccountToken: true
      containers:
      - name: kibana
        env:
          - name: SERVER_BASEPATH
            value: "" 
        
# ---
# apiVersion: apm.k8s.elastic.co/v1
# kind: ApmServer
# metadata:
#   name: apm-server
#   namespace: eck
# spec:
#   version: 8.12.1
#   count: 1
#   elasticsearchRef:
#     name: elasticsearch
#   http:
#     tls: 
#       selfSignedCertificate:
#         disabled: true
#   podTemplate:
#     metadata:
#       annotations:
#         sidecar.istio.io/rewriteAppHTTPProbers: "true" 
#     spec:
#       automountServiceAccountToken: true 

---

apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: kibana-vs
  namespace: eck
spec:
  gateways:
    - istio-system/general-gateway 
  hosts:
    - kibana.stack.fredgentech.net
  http:
    - match:
        - uri:
            prefix: /
      route:
        - destination:
            host: kibana
            port:
              number: 5601
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: elastic-vs
  namespace: eck
spec:
  gateways:
    - istio-system/general-gateway 
  hosts:
    - elastic.stack.fredgentech.net
  http:
    - match:
        - uri:
            prefix: /
      route:
        - destination:
            host: elasticsearch-es-http 
            port:
              number: 9200
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: '2024-01-22T22:08:58Z'
  labels:
    common.k8s.elastic.co/type: kibana
    kibana.k8s.elastic.co/name: kibana
  name: kibana
  namespace: eck
spec:
  ports:
    - name: http
      port: 5601
      protocol: TCP
      targetPort: 5601
  selector:
    common.k8s.elastic.co/type: kibana
    kibana.k8s.elastic.co/name: kibana
  type: ClusterIP

---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: elastic-destination-rule
  namespace: eck
spec:
  host: "elasticsearch-es-http.eck.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: SIMPLE