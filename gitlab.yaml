---
# Source: gitlab/charts/gitlab/charts/gitaly/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: gitlab-gitaly
  namespace: default
  labels:
    app: gitaly
    chart: gitaly-7.1.2
    release: gitlab
    heritage: Helm
    
spec:
  maxUnavailable:  1
  selector:
    matchLabels:
      app: gitaly
      release: gitlab
---
# Source: gitlab/charts/gitlab/charts/gitlab-shell/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: gitlab-gitlab-shell
  namespace: default
  labels:
    app: gitlab-shell
    chart: gitlab-shell-7.1.2
    release: gitlab
    heritage: Helm
    
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: gitlab-shell
      release: gitlab
---
# Source: gitlab/charts/gitlab/charts/sidekiq/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: gitlab-sidekiq-all-in-1-v1
  namespace: default
  labels:
    app: sidekiq
    chart: sidekiq-7.1.2
    release: gitlab
    heritage: Helm
    
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: sidekiq
      release: gitlab
      
      queue-pod-name: all-in-1
---
# Source: gitlab/charts/gitlab/charts/webservice/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: gitlab-webservice-default
  namespace: default
  labels:
    app: webservice
    chart: webservice-7.1.2
    release: gitlab
    heritage: Helm
    gitlab.com/webservice-name: default
    
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: webservice
      release: gitlab
      
      
      gitlab.com/webservice-name: default
---
# Source: gitlab/charts/minio/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: gitlab-minio-v1
  namespace: default
  labels:
    app: minio
    chart: minio-0.4.3
    release: gitlab
    heritage: Helm
    
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: minio
      release: gitlab
      component: app
---
# Source: gitlab/charts/registry/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: gitlab-registry-v1
  namespace: default
  labels:
    app: registry
    chart: registry-0.7.0
    release: gitlab
    heritage: Helm
    
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: registry
      release: gitlab
---
# Source: gitlab/charts/redis/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: gitlab-redis
  namespace: "default"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-16.13.2
    app.kubernetes.io/instance: gitlab
    app.kubernetes.io/managed-by: Helm
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-australian-defence-organisation-cross-cert-chain
  namespace: default
data:
  0-US_DoD_CCEB_Interoperability_Root_CA_2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVDVENDQXZHZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREIwTVFzd0NRWURWUVFHRXdKVlV6RVkKTUJZR0ExVUVDaE1QVlM1VExpQkhiM1psY201dFpXNTBNUXd3Q2dZRFZRUUxFd05FYjBReEREQUtCZ05WQkFzVApBMUJMU1RFdk1DMEdBMVVFQXhNbVZWTWdSRzlFSUVORFJVSWdTVzUwWlhKdmNHVnlZV0pwYkdsMGVTQlNiMjkwCklFTkJJREl3SGhjTk1UWXdPREl6TVRNMU56RXdXaGNOTXpBeE1qTXdNVE0xTnpFd1dqQjBNUXN3Q1FZRFZRUUcKRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUTGlCSGIzWmxjbTV0Wlc1ME1Rd3dDZ1lEVlFRTEV3TkViMFF4RERBSwpCZ05WQkFzVEExQkxTVEV2TUMwR0ExVUVBeE1tVlZNZ1JHOUVJRU5EUlVJZ1NXNTBaWEp2Y0dWeVlXSnBiR2wwCmVTQlNiMjkwSUVOQklESXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFERUJBa2MKZXRoTUZXL1lPMlZCdG9oNk4vUFV3SGdTWGc3OUFjUUpoaFBUbWRNRDRydGVBNHhWWGM3NkNYS1U0dkVKbXJ2Qgo3Z3hCS05rTGo5Mk5EWXVvT0JlaVppTDREemV5cUJGbjM0SUxGVVVhWUZoK3IrdGF2L1VCQjJscUJ6YTJRTzQvCkdTeVgrZWpRcTFlL0Y0MjBxbHBFaU9pUzNwKzF3ZG9TNURxUXpYRXc3b3l4RVZpU0VNZDNqOTRZQnBnNm9Qd1cKejBNV2U3bXJxVUJsaG1jT05yYTZrcERDSUVHcG00aTZUQnZub3B4Q1hUR25ZVTRXMXZ0eUQvdDFxa0hjMXJmcgpjUXhEN2E5MnZvTEdUczJjQlRTT3IzK00rWGMyMXJSL3Zyd01ZUWJGTkM5WkZ0S2x6QW1qUWhZalQrT2lhUUFBCjdRbHl1elExYzkyejFOR2JBZ01CQUFHamdhVXdnYUl3SFFZRFZSME9CQllFRkJZcmtkcmlGd3lXcTF4OTNuMUkKOGwyb0FLem5NQTRHQTFVZER3RUIvd1FFQXdJQkJqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01HQUdDQ3NHQVFVRgpCd0VMQkZRd1VqQlFCZ2dyQmdFRkJRY3dCWVpFYUhSMGNEb3ZMMk55YkM1a2FYTmhMbTFwYkM5cGMzTjFaV1JpCmVTOVZVMFJQUkVORFJVSkpUbFJGVWs5UVJWSkJRa2xNU1ZSWlVrOVBWRU5CTWw5SlFpNXdOMk13RFFZSktvWkkKaHZjTkFRRUxCUUFEZ2dFQkFENm11KzgycFdtMVRkNmd0R1R5VjJOYTFVaDFsUGpjMXoxQysvcVVGblo3RFNWZApBRzBqKzRjQW1acE5sTEpHWEVqbjhYcDM0V3R2K1Z4amV6Ujk5WENLWk5UQTU2aUczTUx6cjgvVEJlR3ZudVlMCkt0akt0SHpMZCtNUVlra1lFLzg2OVZLK0pUcXR4SklqcGkvcHlNVkxBRS9HQlRIVEN4QXpEcG5RZE9PYjJQdGgKMkZQUFFjM2tuRnJzRjFkdWcrdkVUZWNQN25oc3N0VzNlOGhzeVVFbXdPSlVMWXFFcHdSUnM2VXplTzdhUkMxZQorbTQxZjVvUEluUTRxdUlWZVp4UWg2V1U2RUI3SmgyMXlmZWhuM0NmS3d5SXhzdTRmdS9IbHlqaEFEY1lCaDkrCnBPTjg3d2VWMHNCL1FzdkZIb09TcVFZcldBcDRGN2xpMFk3aGpWZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  1-DoD_CCEB_IRCA_2-to-ADO_Interoperability_CA.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZWRENDQkR5Z0F3SUJBZ0lDQktBd0RRWUpLb1pJaHZjTkFRRUxCUUF3ZERFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3Q2dZRFZRUUwNCkV3TlFTMGt4THpBdEJnTlZCQU1USmxWVElFUnZSQ0JEUTBWQ0lFbHVkR1Z5YjNCbGNtRmlhV3hwZEhrZ1VtOXYNCmRDQkRRU0F5TUI0WERUSXhNRGN3TmpFME16TXdNMW9YRFRJME1EY3dOVEUwTXpNd00xb3dkakVMTUFrR0ExVUUNCkJoTUNRVlV4RERBS0JnTlZCQW9UQTBkUFZqRU1NQW9HQTFVRUN4TURSRzlFTVF3d0NnWURWUVFMRXdOUVMwa3gNCkREQUtCZ05WQkFzVEEwTkJjekV2TUMwR0ExVUVBeE1tUVhWemRISmhiR2xoYmlCRVpXWmxibU5sSUVsdWRHVnkNCmIzQmxjbUZpYVd4cGRIa2dRMEV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFoNCnlFZlVUSnBqOHQ4S2g3dGRIWGFQUXQ4ZG54RUdCK2FOS1ZIYysycFJQZ1RhZVNEU2tTRkJIanNOUVZNWURvcUsNCmdvalFrVFcvSkpwSWpaeGk2K01EWmJkZWdlRU5SWDlJelMxQ1lvakZMbGZLeFhDd1NrUGh3dm1nVXRRZ0prcVMNCjRMMmM3Z1VlWjliWnppNHI0U1lxbmtFMVBGVDJLanFRNUVLckQ2QnE0WWY3M2paQmszWlBxRWo5R2xlYjVhTW8NCmg2MTd2TkNvUFpWKy9GMGZZVnprbS9mN2xyQ3dWMFd1UVVSeTRRbFV4QjY1T09aL0xtUit4b21EN0hTRWlWTjcNCjZjQVE2WTJscnNZN1VhVW1OTWttL3R0bWhrdW9hbFU5dW5IVk82S0V1REl3V2ZlajZ4YUQ2T0pmaEJjTE92b2gNCjNkeW1WN0VTa3VndURoTDFGd3I1QWdNQkFBR2pnZ0hzTUlJQjZEQWZCZ05WSFNNRUdEQVdnQlFXSzVIYTRoY00NCmxxdGNmZDU5U1BKZHFBQ3M1ekFkQmdOVkhRNEVGZ1FVWmx1ZVc5dG1haWRaemRsOXY0cjJuYzZMek1zd0RnWUQNClZSMFBBUUgvQkFRREFnRUdNREFHQTFVZElBUXBNQ2N3Q3dZSllJWklBV1VDQVFza01Bc0dDV0NHU0FGbEFnRUwNCkp6QUxCZ2xnaGtnQlpRSUJDeW93VVFZRFZSMGhCRW93U0RBV0JnbGdoa2dCWlFJQkN5UUdDU29rQVlKT0FRSUMNCkFqQVdCZ2xnaGtnQlpRSUJDeWNHQ1Nva0FZSk9BUUlCQWpBV0JnbGdoa2dCWlFJQkN5b0dDU29rQVlKT0FRSUINCkF6QVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUJNRndHQTFVZEhnRUIvd1JTTUZDZ1RqQXRwQ3N3S1RFTE1Ba0cNCkExVUVCaE1DUVZVeEREQUtCZ05WQkFvVEEwZFBWakVNTUFvR0ExVUVDeE1EUkc5RU1BaUNCbWR2ZGk1aGRUQUkNCmdRWm5iM1l1WVhVd0NZRUhMbWR2ZGk1aGRUQVNCZ05WSFNRQkFmOEVDREFHZ0FFQWdRRUFNRTBHQTFVZEh3UkcNCk1FUXdRcUJBb0Q2R1BHaDBkSEE2THk5amNtd3VaR2x6WVM1dGFXd3ZZM0pzTDFWVFJFOUVRME5GUWtsT1ZFVlMNClQxQkZVa0ZDU1V4SlZGbFNUMDlVUTBFeUxtTnliREF3QmdnckJnRUZCUWNCQVFRa01DSXdJQVlJS3dZQkJRVUgNCk1BR0dGR2gwZEhBNkx5OXZZM053TG1ScGMyRXViV2xzTUFvR0ExVWROZ1FEQWdFQU1BMEdDU3FHU0liM0RRRUINCkN3VUFBNElCQVFBd0Z3b2JrcjdmV0t3UStvOFNhTFNXTkdZeHp1bmpYaWtOZk9uYlh6MnhuT25td0xiTjdCTmINCmp3SDY2T09TR3pyV3JrZmNaa3kyaWJkVGF4dnZmYTJVbmM5RGhoclpOM1VhYXNPMncwNm1uSG1Vdzc4TVhid1cNCktrZDJ3d2FvNjFNWTVDR2ptajFiTUFtU09sd1BuMndoRnBrWm55WXhTOHI1dnJVWGpYUy9rc0IzZldyWTBlc3UNCmpmbFNOamk0SGFWRmt2VFk3TlpWaEFCYjFNQ3A5KzR4cTFIOHliaDZxOWRKM3VzK1Q4eFQxbDhCT0szRDVTNVkNCjhVVERVeTFDVGV0NTc2NmtERWxlUHRvKzdCaFZLditFQlJ4VFpXcFprZHYvQWxzRHBoc1NhakZtQzVFaEZsalQNCkNSejFqYVk3emVGZW9YNTNISm9zMmxsTEJNenBaVHNJDQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  2-ADO_Interoperability_CA-to-Australian_Defence_Public_Device_CA.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHZ1RDQ0JXbWdBd0lCQWdJVUdKTUVPcWxaRCtHMlM1dnR2bDFrdmNzbkdXTXdEUVlKS29aSWh2Y05BUUVMDQpCUUF3ZGpFTE1Ba0dBMVVFQmhNQ1FWVXhEREFLQmdOVkJBb1RBMGRQVmpFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3DQpDZ1lEVlFRTEV3TlFTMGt4RERBS0JnTlZCQXNUQTBOQmN6RXZNQzBHQTFVRUF4TW1RWFZ6ZEhKaGJHbGhiaUJFDQpaV1psYm1ObElFbHVkR1Z5YjNCbGNtRmlhV3hwZEhrZ1EwRXdIaGNOTWpBd09ERXhNRFUxTURJMFdoY05Nak13DQpPREV4TURVMU1ESTBXakJ6TVFzd0NRWURWUVFHRXdKQlZURU1NQW9HQTFVRUNoTURSMDlXTVF3d0NnWURWUVFMDQpFd05FYjBReEREQUtCZ05WQkFzVEExQkxTVEVNTUFvR0ExVUVDeE1EUTBGek1Td3dLZ1lEVlFRREV5TkJkWE4wDQpjbUZzYVdGdUlFUmxabVZ1WTJVZ1VIVmliR2xqSUVSbGRtbGpaU0JEUVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCDQpCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFPZTZZQUdvZEsxMjgyTEdiR0xCQmJQMFpCR01rNjRXSHUvbDRCQVkvazc4DQpTWXJvM1kvQnJINTduZG8rYll2SFFDN2g0MHFQWGpZNjBQeVlzazJqQ2VPQTNkUnQxQWM3emZnV1dFSmtJQ29XDQpGRm16V0s3dHEveVpVcDMzWHdFZFl2QXpxM3c2WjVXQ3NNZGhuWXRtL0M1VExjWUJ3LzBvTlcyWkN1UmllVERoDQpuVDJjd3g1MDRJR2k5c3llNEs3cjdIZWhGSlRvb2NLeWpoV3JRcDVEZ3lqaGllTzEwM2tLVDhNZE5saVNxMHBaDQozakJpQzAwa3NkaEt2L0hNa3JzZ2E5MXlPZ21vUGNnNHErYU5rZVZjV0psSFc5aWlYWEJVT2ZZcDUrSFVvcC9iDQpTaXNQYWtld1IzWTFzazVWR1JwOG9vNEZ3ZFNocmxMak5rNVNwV3NmL3A4Q0F3RUFBYU9DQXdnd2dnTUVNQThHDQpBMVVkRXdFQi93UUZNQU1CQWY4d2dnRWpCZ2dyQmdFRkJRY0JBUVNDQVJVd2dnRVJNQ1lHQ0NzR0FRVUZCekFCDQpoaHBvZEhSd09pOHZiMk56Y0M1a1pXWmxibU5sTG1kdmRpNWhkVEE5QmdnckJnRUZCUWN3QW9ZeGFIUjBjRG92DQpMMk55YkM1a1pXWmxibU5sTG1kdmRpNWhkUzl3YTJrdlkyVnlkR2xtYVdOaGRHVnpMMEZFU1U5RFFUQ0Jwd1lJDQpLd1lCQlFVSE1BS0dnWnBzWkdGd09pOHZaR2x5TG1SbFptVnVZMlV1WjI5MkxtRjFMMk51UFVGMWMzUnlZV3hwDQpZVzRsTWpCRVpXWmxibU5sSlRJd1NXNTBaWEp2Y0dWeVlXSnBiR2wwZVNVeU1FTkJMRzkxUFVOQmN5eHZkVDFRDQpTMGtzYjNVOVJHOUVMRzg5UjA5V0xHTTlRVlUvWTBGRFpYSjBhV1pwWTJGMFpUdGlhVzVoY25rc1kzSnZjM05EDQpaWEowYVdacFkyRjBaVkJoYVhJN1ltbHVZWEo1TUlHb0JnTlZIU0FFZ2FBd2daMHdPQVlKS2lRQmdrNEJBUUVEDQpNQ3N3S1FZSUt3WUJCUVVIQWdFV0hXaDBkSEE2THk5amNtd3VaR1ZtWlc1alpTNW5iM1l1WVhVdmNHdHBNQXNHDQpDU29rQVlKT0FRSUJBVEFMQmdrcUpBR0NUZ0VDQVFJd0N3WUpLaVFCZ2s0QkFnRURNQXNHQ1Nva0FZSk9BUUlCDQpCREFMQmdrcUpBR0NUZ0VDQWdFd0N3WUpLaVFCZ2s0QkFnSUNNQXNHQ1Nva0FZSk9BUUlDQXpBR0JnUlZIU0FBDQpNQTRHQTFVZER3RUIvd1FFQXdJQnhqQWZCZ05WSFNNRUdEQVdnQlJtVzU1YjIyWnFKMW5OMlgyL2l2YWR6b3ZNDQp5ekNCemdZRFZSMGZCSUhHTUlIRE1ES2dNS0F1aGl4b2RIUndPaTh2WTNKc0xtUmxabVZ1WTJVdVoyOTJMbUYxDQpMM0JyYVM5amNtd3ZRVVJKVDBOQkxtTnliRENCaktDQmlhQ0Job2FCZzJ4a1lYQTZMeTlrYVhJdVpHVm1aVzVqDQpaUzVuYjNZdVlYVXZZMjQ5UVhWemRISmhiR2xoYmlVeU1FUmxabVZ1WTJVbE1qQkpiblJsY205d1pYSmhZbWxzDQphWFI1SlRJd1EwRXNiM1U5UTBGekxHOTFQVkJMU1N4dmRUMUViMFFzYnoxSFQxWXNZejFCVlQ5alpYSjBhV1pwDQpZMkYwWlZKbGRtOWpZWFJwYjI1TWFYTjBNQjBHQTFVZERnUVdCQlRMUGxxckFnVHVOcHFQNVdlZnBiM2xLZkZ1DQpBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZUM3TXAvUFRBSm85aTlCbG1tL0JzS0hYVDNQYi9Wb2g2aTZDDQo1NmVIK21MK0dmcDZ4TUNNT0kyN2hQdHE0K00rUlN4eDY3b2NqK2pWWGFEZGFUa08xM1FrWDFlMUNhK2pFTXRnDQp6N2o3MnJLNnUvUXRocjFRNm1qcysrVDBFQnF5U2VGVXB6bHRuMWxCSGFwTXRaZEMzZDFucUxCdytJTWNMa1Z4DQp1SVdKczJ2MnYrTGx5b3pYM0lJbDVlNU4vVWlRV2U4RUNzb3hIUDlRZjJ0UHhLVUxFdkN1VklKcENLYkR0alFlDQpKWnBqU0xxVGwvVDRXalVYcURqdlZlRm5LY2pIYU1TTTg0cFpBdjcwSWVKQ2VZRzgydUlCMnpYdk9oaGhtdW13DQpsVWorWWNyeHhGTW5qN0V6VW9pUnJhUHFzWWZDU01SLzZCUlpxem4xMkVOYTFES05sQT09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
  2-ADO_Interoperability_CA-to-Australian_Defence_Public_Identity_CA.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHZ3pDQ0JXdWdBd0lCQWdJVVhJVTNKTHd3L3N6dVVtWktEaEVObkFzWnpsSXdEUVlKS29aSWh2Y05BUUVMDQpCUUF3ZGpFTE1Ba0dBMVVFQmhNQ1FWVXhEREFLQmdOVkJBb1RBMGRQVmpFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3DQpDZ1lEVlFRTEV3TlFTMGt4RERBS0JnTlZCQXNUQTBOQmN6RXZNQzBHQTFVRUF4TW1RWFZ6ZEhKaGJHbGhiaUJFDQpaV1psYm1ObElFbHVkR1Z5YjNCbGNtRmlhV3hwZEhrZ1EwRXdIaGNOTWpBd09ERXhNRFV5TnpVNFdoY05Nak13DQpPREV4TURVeU56VTRXakIxTVFzd0NRWURWUVFHRXdKQlZURU1NQW9HQTFVRUNoTURSMDlXTVF3d0NnWURWUVFMDQpFd05FYjBReEREQUtCZ05WQkFzVEExQkxTVEVNTUFvR0ExVUVDeE1EUTBGek1TNHdMQVlEVlFRREV5VkJkWE4wDQpjbUZzYVdGdUlFUmxabVZ1WTJVZ1VIVmliR2xqSUVsa1pXNTBhWFI1SUVOQk1JSUJJakFOQmdrcWhraUc5dzBCDQpBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwMUZDdVdWYjRIcUdqeUtnVUNHbjBHREcwaDAvQ2dGY3RQMnBTMldBDQpVTjF4akNDYjJBWWFhcE5FMm54OE9nTWlHeGVNTS9SejVzUFpHeEZRdCtWL09zamhMbEhKMkt1TDdWa0FQNHpVDQprbXZ2NnRveDk5VDBpZGQ5bWhwNTIyVEVlT01GWGg4OWJFSmQ5WTAraU5wZ1ZrNG9oOGx3VDQ3QkJncW5ja3dtDQpnY2JpTTY2d25TL1hZZi8vYytZMnppdWZOZ0I1VGY0cUprZ2RTVHZENnVnSHhUS2x6MUFGUTN4NTZ4L3ZGRHU5DQpuRkFaRzRrTElwQzMwK045ZzMzN09nc1N4akYyWWtYNld5QmJXZnkzWVZnU1g3OFA3aS9PQmxESUN0WUdJeW5mDQpmQTZCdlM1aXlUL2xBR2lIc2p4UWJIVEdoWWlzMGU0QVR2NDhUWU9OOGtldlp3SURBUUFCbzRJRENEQ0NBd1F3DQpEd1lEVlIwVEFRSC9CQVV3QXdFQi96Q0NBU01HQ0NzR0FRVUZCd0VCQklJQkZUQ0NBUkV3SmdZSUt3WUJCUVVIDQpNQUdHR21oMGRIQTZMeTl2WTNOd0xtUmxabVZ1WTJVdVoyOTJMbUYxTUQwR0NDc0dBUVVGQnpBQ2hqRm9kSFJ3DQpPaTh2WTNKc0xtUmxabVZ1WTJVdVoyOTJMbUYxTDNCcmFTOWpaWEowYVdacFkyRjBaWE12UVVSSlQwTkJNSUduDQpCZ2dyQmdFRkJRY3dBb2FCbW14a1lYQTZMeTlrYVhJdVpHVm1aVzVqWlM1bmIzWXVZWFV2WTI0OVFYVnpkSEpoDQpiR2xoYmlVeU1FUmxabVZ1WTJVbE1qQkpiblJsY205d1pYSmhZbWxzYVhSNUpUSXdRMEVzYjNVOVEwRnpMRzkxDQpQVkJMU1N4dmRUMUViMFFzYnoxSFQxWXNZejFCVlQ5alFVTmxjblJwWm1sallYUmxPMkpwYm1GeWVTeGpjbTl6DQpjME5sY25ScFptbGpZWFJsVUdGcGNqdGlhVzVoY25rd2dhZ0dBMVVkSUFTQm9EQ0JuVEE0QmdrcUpBR0NUZ0VCDQpBUU13S3pBcEJnZ3JCZ0VGQlFjQ0FSWWRhSFIwY0RvdkwyTnliQzVrWldabGJtTmxMbWR2ZGk1aGRTOXdhMmt3DQpDd1lKS2lRQmdrNEJBZ0VCTUFzR0NTb2tBWUpPQVFJQkFqQUxCZ2txSkFHQ1RnRUNBUU13Q3dZSktpUUJnazRCDQpBZ0VFTUFzR0NTb2tBWUpPQVFJQ0FUQUxCZ2txSkFHQ1RnRUNBZ0l3Q3dZSktpUUJnazRCQWdJRE1BWUdCRlVkDQpJQUF3RGdZRFZSMFBBUUgvQkFRREFnSEdNQjhHQTFVZEl3UVlNQmFBRkdaYm5sdmJabW9uV2MzWmZiK0s5cDNPDQppOHpMTUlIT0JnTlZIUjhFZ2NZd2djTXdNcUF3b0M2R0xHaDBkSEE2THk5amNtd3VaR1ZtWlc1alpTNW5iM1l1DQpZWFV2Y0d0cEwyTnliQzlCUkVsUFEwRXVZM0pzTUlHTW9JR0pvSUdHaG9HRGJHUmhjRG92TDJScGNpNWtaV1psDQpibU5sTG1kdmRpNWhkUzlqYmoxQmRYTjBjbUZzYVdGdUpUSXdSR1ZtWlc1alpTVXlNRWx1ZEdWeWIzQmxjbUZpDQphV3hwZEhrbE1qQkRRU3h2ZFQxRFFYTXNiM1U5VUV0SkxHOTFQVVJ2UkN4dlBVZFBWaXhqUFVGVlAyTmxjblJwDQpabWxqWVhSbFVtVjJiMk5oZEdsdmJreHBjM1F3SFFZRFZSME9CQllFRkhTcVlBL1EwM0VPQzdXenNMV1NEVTBxDQozSUNvTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBTHFUMUQrK2J5d3JiSHNUL3FvTDA5dGV6YittV1BkUXp0DQo1NFkvUnRsaSsrVU8vc3hyRzhBVEFjWjdmQlRXUzhmR2d1MG1KNFhhajlYQmt0Rm4vS0d0alY1YXdpd0lGMlhWDQpLWXJiajZ3S3hQNkxsSHB4NStWaFo4QmZRejZQUmdTQjdlVm0ySGhqRzVZWjQ4Vmp2S1VqeTNEaGpNd1o0U1lPDQpZTWplU09CSjR1QWhuNndBcEF0ZlM5VG9keVA0N29Scy9zRjNNN3U0b0ZtY1RLT3NqSnVpUnFreXBxUE9mdkpQDQo4WXZzQnJYUnpNOFc5UXpHTXJza2hIcUg4K09hUVpaa0hRMm81aE9RR0gxM0xvUTlJY3hwQjhXRk5MZVB0WXVDDQprc0tHV21MUVg5RTJjWDBoNWVGMzhoZjQyck5sWFF5M25Md2NUTWlDL1drWjFTY1RoZWlEDQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
  2-ADO_Interoperability_CA-to-Australian_Defence_Public_Identity_CA_AutoEnrol_G2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHa1RDQ0JYbWdBd0lCQWdJVVhTeHE5K2ZCbmFtcmJLeEtQMHJZOUxxeEVCb3dEUVlKS29aSWh2Y05BUUVMDQpCUUF3ZGpFTE1Ba0dBMVVFQmhNQ1FWVXhEREFLQmdOVkJBb1RBMGRQVmpFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3DQpDZ1lEVlFRTEV3TlFTMGt4RERBS0JnTlZCQXNUQTBOQmN6RXZNQzBHQTFVRUF4TW1RWFZ6ZEhKaGJHbGhiaUJFDQpaV1psYm1ObElFbHVkR1Z5YjNCbGNtRmlhV3hwZEhrZ1EwRXdIaGNOTWpFd09EQTFNREUwTmpRM1doY05NalF3DQpPREExTURFME5qUTNXakNCZ2pFTE1Ba0dBMVVFQmhNQ1FWVXhEREFLQmdOVkJBb1RBMGRQVmpFTU1Bb0dBMVVFDQpDeE1EUkc5RU1Rd3dDZ1lEVlFRTEV3TlFTMGt4RERBS0JnTlZCQXNUQTBOQmN6RTdNRGtHQTFVRUF4TXlRWFZ6DQpkSEpoYkdsaGJpQkVaV1psYm1ObElGQjFZbXhwWXlCSlpHVnVkR2wwZVNCRFFTQkJkWFJ2Ulc1eWIyd2dSekl3DQpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDLzd3TlBmUEtkc3BWa29nc2s4ZkUzDQo2M3NHS2RlL1ZjVnNnZ1ZSRlRvKytUTWErRW43b09WTzJMbDVOa2xSSjhTbERiTmNPNzc0VUJXK2oyWHJuV1FnDQp4REc1WFdUWTVHWXZDeW5oUjZMbEpQRXp1czdSSmF4bkY1YlB4OXMyZXM2Unl5NjJMRTVLbmI3bG9STHZYZ1AvDQpUODVyRXA4ME5Sb3JmNStlbFcxRTBNc2hPcGZuR25KQ1R1SmNFeVVHQVNleWJBcmRKUkkwb0hrT2F4OC96dlhkDQpCRnFBaHlTTFBjZ2tJMnJ3QXcrSVdnd0t5VkovWlUvK016WjZmRE43dDlOTnZ5K1NWMkowL1BBUDN5TUg5bHVEDQp2by9lT0hOVmhySG93K3A2b3Fta2tEbmlYNmhwMWI5SHlZYnpHSThjYWZ5ZWFiQmZQNG1rQUJIaVRpcVdtbm90DQpBZ01CQUFHamdnTUlNSUlEQkRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUlJQkl3WUlLd1lCQlFVSEFRRUVnZ0VWDQpNSUlCRVRBbUJnZ3JCZ0VGQlFjd0FZWWFhSFIwY0RvdkwyOWpjM0F1WkdWbVpXNWpaUzVuYjNZdVlYVXdQUVlJDQpLd1lCQlFVSE1BS0dNV2gwZEhBNkx5OWpjbXd1WkdWbVpXNWpaUzVuYjNZdVlYVXZjR3RwTDJObGNuUnBabWxqDQpZWFJsY3k5QlJFbFBRMEV3Z2FjR0NDc0dBUVVGQnpBQ2hvR2FiR1JoY0RvdkwyUnBjaTVrWldabGJtTmxMbWR2DQpkaTVoZFM5amJqMUJkWE4wY21Gc2FXRnVKVEl3UkdWbVpXNWpaU1V5TUVsdWRHVnliM0JsY21GaWFXeHBkSGtsDQpNakJEUVN4dmRUMURRWE1zYjNVOVVFdEpMRzkxUFVSdlJDeHZQVWRQVml4alBVRlZQMk5CUTJWeWRHbG1hV05oDQpkR1U3WW1sdVlYSjVMR055YjNOelEyVnlkR2xtYVdOaGRHVlFZV2x5TzJKcGJtRnllVENCcUFZRFZSMGdCSUdnDQpNSUdkTURnR0NTb2tBWUpPQVFFQkF6QXJNQ2tHQ0NzR0FRVUZCd0lCRmgxb2RIUndPaTh2WTNKc0xtUmxabVZ1DQpZMlV1WjI5MkxtRjFMM0JyYVRBTEJna3FKQUdDVGdFQ0FRRXdDd1lKS2lRQmdrNEJBZ0VDTUFzR0NTb2tBWUpPDQpBUUlCQXpBTEJna3FKQUdDVGdFQ0FRUXdDd1lKS2lRQmdrNEJBZ0lCTUFzR0NTb2tBWUpPQVFJQ0FqQUxCZ2txDQpKQUdDVGdFQ0FnTXdCZ1lFVlIwZ0FEQU9CZ05WSFE4QkFmOEVCQU1DQWNZd0h3WURWUjBqQkJnd0ZvQVVabHVlDQpXOXRtYWlkWnpkbDl2NHIybmM2THpNc3dnYzRHQTFVZEh3U0J4akNCd3pBeW9EQ2dMb1lzYUhSMGNEb3ZMMk55DQpiQzVrWldabGJtTmxMbWR2ZGk1aGRTOXdhMmt2WTNKc0wwRkVTVTlEUVM1amNtd3dnWXlnZ1ltZ2dZYUdnWU5zDQpaR0Z3T2k4dlpHbHlMbVJsWm1WdVkyVXVaMjkyTG1GMUwyTnVQVUYxYzNSeVlXeHBZVzRsTWpCRVpXWmxibU5sDQpKVEl3U1c1MFpYSnZjR1Z5WVdKcGJHbDBlU1V5TUVOQkxHOTFQVU5CY3l4dmRUMVFTMGtzYjNVOVJHOUVMRzg5DQpSMDlXTEdNOVFWVS9ZMlZ5ZEdsbWFXTmhkR1ZTWlhadlkyRjBhVzl1VEdsemREQWRCZ05WSFE0RUZnUVV3TzljDQo1TGRsYlp0L0VKNDBxaG1Yb3o4MitTTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRHBVdlRBUm9kVVZzSTRxDQpRajRrZjV5U3JHTnlTTGNXeWhrc1hnSnUyaGwvb0s5S2s1NFIwUTNNQ1dxMC9FeGU0N3ZTQU5rRnBRNnJKckJCDQpadEdjMzhLYTVlOXUxMnJqSE9sNW1HSUwzSzJFZDQzMm9pbEdYWEpMUXJqdlIrNkRwcWd6Sjk3R2J5VlY4eXRIDQpUTVY4YXNhR2l5TEZnWHFRNFhoZjN2aEwxTDVwamFFaVBIOGNZTC9yYVRaeG5aZmhJWlJEa1A4WXVwUUJkVHRRDQp1T3NLQmUyeVIveklKaytwV3FYeVZwNDNIMmZva2g4SUNqUklsclA3aVFjdjVGNHdRdldXUURXWFh1cWFlWnA2DQpMa2RRRkZxbFpYQWhzZEVHL0M5QmlTa3g5OWp2TXpSSHVOSUwra1FFalVqeVl0RmM1SHA5QTlKV2NnM2czbFl1DQpyMGJhM1QwPQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
  2-ADO_Interoperability_CA-to-Australian_Defence_Public_Identity_CA_G2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHaGpDQ0JXNmdBd0lCQWdJVU9xcTJVMHBDZExTaVptMUphcWcwT2RPT1F1VXdEUVlKS29aSWh2Y05BUUVMDQpCUUF3ZGpFTE1Ba0dBMVVFQmhNQ1FWVXhEREFLQmdOVkJBb1RBMGRQVmpFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3DQpDZ1lEVlFRTEV3TlFTMGt4RERBS0JnTlZCQXNUQTBOQmN6RXZNQzBHQTFVRUF4TW1RWFZ6ZEhKaGJHbGhiaUJFDQpaV1psYm1ObElFbHVkR1Z5YjNCbGNtRmlhV3hwZEhrZ1EwRXdIaGNOTWpFd09EQTFNREV5TnpRMldoY05NalF3DQpPREExTURFeU56UTJXakI0TVFzd0NRWURWUVFHRXdKQlZURU1NQW9HQTFVRUNoTURSMDlXTVF3d0NnWURWUVFMDQpFd05FYjBReEREQUtCZ05WQkFzVEExQkxTVEVNTUFvR0ExVUVDeE1EUTBGek1URXdMd1lEVlFRREV5aEJkWE4wDQpjbUZzYVdGdUlFUmxabVZ1WTJVZ1VIVmliR2xqSUVsa1pXNTBhWFI1SUVOQklFY3lNSUlCSWpBTkJna3Foa2lHDQo5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBc2hFOXcvQkJaOHdWY2FHMytiMG54T0ZBTzl2UHgzODhvSmwxDQpkLzd5M1EvZW8xQm9KK0I4MElYTEszRjFrMnJQaERqbGpsM0RQS3FCaVhWYXphYk5CbXNmeVR3bXhHbnAxM2MyDQpOUitVeDI2ZE1pOHJjUGRTNU9QSmdiUStzb0NWT2o4Sm50ZjN4UjIwcUdjbjFJWklDNDk0QnJCWXNQc1I3cS8vDQpaRjVZV2lCbVJOb1Z1SmhhbzRoeGl0VkUxUXp0Tjl4elNUY3BjQ1lYMVpPWXNrUlRrNEpJSitDWlE3OHpwZlcrDQpUWDZvUmhkRjRkbzV0YWJZK1FpTGU1c24zR0pIeGduZ2NhOGE1aUxBTkRhUVZWbWZwWjZZa3J4NklrNVNSWitaDQpNTzVENHg0SEZCQ2NhTmhHVVlGeC81aHJhRWxScFJFZm8rRloxM2Y0WDU3ZW5qVzhXd0lEQVFBQm80SURDRENDDQpBd1F3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekNDQVNNR0NDc0dBUVVGQndFQkJJSUJGVENDQVJFd0pnWUlLd1lCDQpCUVVITUFHR0dtaDBkSEE2THk5dlkzTndMbVJsWm1WdVkyVXVaMjkyTG1GMU1EMEdDQ3NHQVFVRkJ6QUNoakZvDQpkSFJ3T2k4dlkzSnNMbVJsWm1WdVkyVXVaMjkyTG1GMUwzQnJhUzlqWlhKMGFXWnBZMkYwWlhNdlFVUkpUME5CDQpNSUduQmdnckJnRUZCUWN3QW9hQm1teGtZWEE2THk5a2FYSXVaR1ZtWlc1alpTNW5iM1l1WVhVdlkyNDlRWFZ6DQpkSEpoYkdsaGJpVXlNRVJsWm1WdVkyVWxNakJKYm5SbGNtOXdaWEpoWW1sc2FYUjVKVEl3UTBFc2IzVTlRMEZ6DQpMRzkxUFZCTFNTeHZkVDFFYjBRc2J6MUhUMVlzWXoxQlZUOWpRVU5sY25ScFptbGpZWFJsTzJKcGJtRnllU3hqDQpjbTl6YzBObGNuUnBabWxqWVhSbFVHRnBjanRpYVc1aGNua3dnYWdHQTFVZElBU0JvRENCblRBNEJna3FKQUdDDQpUZ0VCQVFNd0t6QXBCZ2dyQmdFRkJRY0NBUllkYUhSMGNEb3ZMMk55YkM1a1pXWmxibU5sTG1kdmRpNWhkUzl3DQphMmt3Q3dZSktpUUJnazRCQWdFQk1Bc0dDU29rQVlKT0FRSUJBakFMQmdrcUpBR0NUZ0VDQVFNd0N3WUpLaVFCDQpnazRCQWdFRU1Bc0dDU29rQVlKT0FRSUNBVEFMQmdrcUpBR0NUZ0VDQWdJd0N3WUpLaVFCZ2s0QkFnSURNQVlHDQpCRlVkSUFBd0RnWURWUjBQQVFIL0JBUURBZ0hHTUI4R0ExVWRJd1FZTUJhQUZHWmJubHZiWm1vbldjM1pmYitLDQo5cDNPaTh6TE1JSE9CZ05WSFI4RWdjWXdnY013TXFBd29DNkdMR2gwZEhBNkx5OWpjbXd1WkdWbVpXNWpaUzVuDQpiM1l1WVhVdmNHdHBMMk55YkM5QlJFbFBRMEV1WTNKc01JR01vSUdKb0lHR2hvR0RiR1JoY0RvdkwyUnBjaTVrDQpaV1psYm1ObExtZHZkaTVoZFM5amJqMUJkWE4wY21Gc2FXRnVKVEl3UkdWbVpXNWpaU1V5TUVsdWRHVnliM0JsDQpjbUZpYVd4cGRIa2xNakJEUVN4dmRUMURRWE1zYjNVOVVFdEpMRzkxUFVSdlJDeHZQVWRQVml4alBVRlZQMk5sDQpjblJwWm1sallYUmxVbVYyYjJOaGRHbHZia3hwYzNRd0hRWURWUjBPQkJZRUZFU21wWU1KT0s3Y0xjaXlxL2FtDQpWMFZYaG9IaU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2lDdVpIWG56eWMrdmNnQUJ1MldpM254MXJuYW1tDQpRN1VNSHBtOVVCRmtxdERNN01ST0dKRWtLbjE2bVpEK2tuQ3BPaTNVdU5VMzBQWkpXOVI1b003NmY3NFBUa293DQo0b0lDSGtqdjRLcksxTVF5UXRodFBkWCtOYVJSTzE4c2NxcGxocVVpTWxSMXNxU3hnK21FUElISjFxRS9oeU4wDQozdkhrN1BGS2dqZzNEK0Mzb3FKZExsdThmc2lIN2o1MURDd25WYThYN0s2SzlGVXBKU1NHMGgzN1U4cVVOY1FCDQpwdGJGZG9sNFFULzdpeU1tY2dzU2RxTUVxV1Rvejd4YUhsZ0Q1eWg1Q2tGMy9MYVZ4R3JvTjJydzJ3MG9oOENtDQpuYkNsMGFlMDQwbUFKQUFQMkZnS3E5cm5Ed2p2RVJEYyt0SnhiQjc5RFowbzdtTFFDYnk4ODFnVw0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-australian-defence-organisation-direct-trust-chain
  namespace: default
data:
  0-Australian_Defence_Public_Root_CA.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlFSWpDQ0F3cWdBd0lCQWdJVUtldVNNMFpQTWtIL2d4a0FxYTNFMmZqajRuOHdEUVlKS29aSWh2Y05BUUVMDQpCUUF3Y1RFTE1Ba0dBMVVFQmhNQ1FWVXhEREFLQmdOVkJBb1RBMGRQVmpFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3DQpDZ1lEVlFRTEV3TlFTMGt4RERBS0JnTlZCQXNUQTBOQmN6RXFNQ2dHQTFVRUF4TWhRWFZ6ZEhKaGJHbGhiaUJFDQpaV1psYm1ObElGQjFZbXhwWXlCU2IyOTBJRU5CTUI0WERURTJNVEV5T0RJeU1qVXlPRm9YRFRNMk1URXlPREl5DQpNVE0wT0Zvd2NURUxNQWtHQTFVRUJoTUNRVlV4RERBS0JnTlZCQW9UQTBkUFZqRU1NQW9HQTFVRUN4TURSRzlFDQpNUXd3Q2dZRFZRUUxFd05RUzBreEREQUtCZ05WQkFzVEEwTkJjekVxTUNnR0ExVUVBeE1oUVhWemRISmhiR2xoDQpiaUJFWldabGJtTmxJRkIxWW14cFl5QlNiMjkwSUVOQk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBDQpNSUlCQ2dLQ0FRRUEwMDVVQkJ2UTlKdWR1Q09INENESG5waXhjWG9Ha0M3aXJVaitrd1ZzN0lhL0tFQ0ZzMHg1DQo3MGRUbUJBZVZPNTllTGdZRXd4RVV2M1FnYXFUQ0NNNXZsOFBhOTBsbC9NQlF0L1VnUURFVUw1NmlTMFpyM05LDQpQOHc2d0wraXFNVVY5ejU4UVhTQ2F5NTNadUpxcFpHSWJnWXhwNjhMNWxyZ3JuMWFyeTlIMFBMN2hIT2NScUVlDQpoRVJSeEY4dTJwQUNYNEhmRVE3Uys3czZGM09qOG8xanFrLy9jbnBsWW9OYUtqenl6U3dqamMvcklSKy8xQU5YDQo5VGNXREY3bFZ4SENxUHIvYkRueVBWTG10WG5BVytLeTZtTWdEQTZsS2w0UzRlYXZYNHQ4b0swNU5UV1lYL0d2DQpPTkFtMDAyOVluZDFQYTlyRklaN1d2WWhqOWJxNHFjT3JRSURBUUFCbzRHeE1JR3VNQThHQTFVZEV3RUIvd1FGDQpNQU1CQWY4d1N3WURWUjBnQkVRd1FqQUdCZ1JWSFNBQU1EZ0dDU29rQVlKT0FRRUJCekFyTUNrR0NDc0dBUVVGDQpCd0lCRmgxb2RIUndPaTh2WTNKc0xtUmxabVZ1WTJVdVoyOTJMbUYxTDNCcmFUQU9CZ05WSFE4QkFmOEVCQU1DDQpBY1l3SHdZRFZSMGpCQmd3Rm9BVXJKbmhBaS9vWEV0QnR6UzRIdW1iZ3pZTmxMUXdIUVlEVlIwT0JCWUVGS3laDQo0UUl2NkZ4TFFiYzB1QjdwbTRNMkRaUzBNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUI0dklGSzJEcFh1NzBtDQp2K29xS1BDSWl2SlFUSkJuMmt2MXVCUUl1dHQvY3FpYVdienhISW1vOURvREVGUVRlbDNHMnJvK0Q0alZhdE1iDQpseTFpWVRwditRQ3ZjZ1p6N0JEQVlSN01YRThaTWtZNHdkMC8wamNhcFk2R29QQUp6RFhXR1FKOHpUbjg5L2tmDQo1NVI1VGoyMytKZE9PMFJxelpTd3VmZCs0dVA1bVgvRjA2WlF0RW43Rm41T1FTelBQc2Q1UUxxQkdDWUkrY1dkDQo0OWp4Ynh4b1AycGJkeGRTb3diZUdjSkxicUtWL05VSXZ5eTFhVFZSNCtQZlR4b3BiWU40UFRna3lnSS9WQkRoDQpzMlRoMVpyZTh6ZjJNeEMxZHJPcjE4a2ZVenF0VlVFY1NNazJub2YvZGR4cDBLL1plbGZHeXJGRC9EbUIvTng2DQpvNXFsbUZCVQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
  1-Australian_Defence_Public_Device_CA.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHWERDQ0JVU2dBd0lCQWdJVWFvSzdESm9LVFJlSENKbFlDYTlqMHA1cjQ1MHdEUVlKS29aSWh2Y05BUUVMDQpCUUF3Y1RFTE1Ba0dBMVVFQmhNQ1FWVXhEREFLQmdOVkJBb1RBMGRQVmpFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3DQpDZ1lEVlFRTEV3TlFTMGt4RERBS0JnTlZCQXNUQTBOQmN6RXFNQ2dHQTFVRUF4TWhRWFZ6ZEhKaGJHbGhiaUJFDQpaV1psYm1ObElGQjFZbXhwWXlCU2IyOTBJRU5CTUI0WERURTJNVEV5T0RJek16STBObG9YRFRJMk1URXlPREl6DQpNekkwTmxvd2N6RUxNQWtHQTFVRUJoTUNRVlV4RERBS0JnTlZCQW9UQTBkUFZqRU1NQW9HQTFVRUN4TURSRzlFDQpNUXd3Q2dZRFZRUUxFd05RUzBreEREQUtCZ05WQkFzVEEwTkJjekVzTUNvR0ExVUVBeE1qUVhWemRISmhiR2xoDQpiaUJFWldabGJtTmxJRkIxWW14cFl5QkVaWFpwWTJVZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCDQpEd0F3Z2dFS0FvSUJBUURudW1BQnFIU3Rkdk5peG14aXdRV3o5R1FSakpPdUZoN3Y1ZUFRR1A1Ty9FbUs2TjJQDQp3YXgrZTUzYVBtMkx4MEF1NGVOS2oxNDJPdEQ4bUxKTm93bmpnTjNVYmRRSE84MzRGbGhDWkNBcUZoUlpzMWl1DQo3YXY4bVZLZDkxOEJIV0x3TTZ0OE9tZVZnckRIWVoyTFp2d3VVeTNHQWNQOUtEVnRtUXJrWW5rdzRaMDluTU1lDQpkT0NCb3ZiTW51Q3U2K3gzb1JTVTZLSENzbzRWcTBLZVE0TW80WW5qdGRONUNrL0RIVFpZa3F0S1dkNHdZZ3RODQpKTEhZU3IveHpKSzdJR3ZkY2pvSnFEM0lPS3ZtalpIbFhGaVpSMXZZb2wxd1ZEbjJLZWZoMUtLZjIwb3JEMnBIDQpzRWQyTmJKT1ZSa2FmS0tPQmNIVW9hNVM0elpPVXFWckgvNmZBZ01CQUFHamdnTG9NSUlDNURBU0JnTlZIUk1CDQpBZjhFQ0RBR0FRSC9BZ0VBTUlHb0JnTlZIU0FFZ2FBd2daMHdPQVlKS2lRQmdrNEJBUUVJTUNzd0tRWUlLd1lCDQpCUVVIQWdFV0hXaDBkSEE2THk5amNtd3VaR1ZtWlc1alpTNW5iM1l1WVhVdmNHdHBNQVlHQkZVZElBQXdDd1lKDQpLaVFCZ2s0QkFnRUJNQXNHQ1Nva0FZSk9BUUlCQWpBTEJna3FKQUdDVGdFQ0FRTXdDd1lKS2lRQmdrNEJBZ0VFDQpNQXNHQ1Nva0FZSk9BUUlDQVRBTEJna3FKQUdDVGdFQ0FnSXdDd1lKS2lRQmdrNEJBZ0lETUlINEJnZ3JCZ0VGDQpCUWNCQVFTQjZ6Q0I2REFtQmdnckJnRUZCUWN3QVlZYWFIUjBjRG92TDI5amMzQXVaR1ZtWlc1alpTNW5iM1l1DQpZWFV3UFFZSUt3WUJCUVVITUFLR01XaDBkSEE2THk5amNtd3VaR1ZtWlc1alpTNW5iM1l1WVhVdmNHdHBMMk5sDQpjblJwWm1sallYUmxjeTlCUkZCU1EwRXdmd1lJS3dZQkJRVUhNQUtHYzJ4a1lYQTZMeTlrYVhJdVpHVm1aVzVqDQpaUzVuYjNZdVlYVXZZMjQ5UVhWemRISmhiR2xoYmlCRVpXWmxibU5sSUZCMVlteHBZeUJTYjI5MElFTkJMRzkxDQpQVU5CY3l4dmRUMVFTMGtzYjNVOVJHOUVMRzg5UjA5V0xHTTlRVlUvWTBGRFpYSjBhV1pwWTJGMFpUdGlhVzVoDQpjbmt3RGdZRFZSMFBBUUgvQkFRREFnSEdNQjhHQTFVZEl3UVlNQmFBRkt5WjRRSXY2RnhMUWJjMHVCN3BtNE0yDQpEWlMwTUlIWEJnTlZIUjhFZ2M4d2djd3dNcUF3b0M2R0xHaDBkSEE2THk5amNtd3VaR1ZtWlc1alpTNW5iM1l1DQpZWFV2Y0d0cEwyTnliQzlCUkZCU1EwRXVZM0pzTUlHVm9JR1NvSUdQaG9HTWJHUmhjRG92TDJScGNpNWtaV1psDQpibU5sTG1kdmRpNWhkUzlqYmlVelpFRjFjM1J5WVd4cFlXNGxNakJFWldabGJtTmxKVEl3VUhWaWJHbGpKVEl3DQpVbTl2ZENVeU1FTkJMRzkxSlROa1EwRnpMRzkxSlROa1VFdEpMRzkxSlROa1JHOUVMRzhsTTJSSFQxWXNZeVV6DQpaRUZWUDJObGNuUnBabWxqWVhSbFVtVjJiMk5oZEdsdmJreHBjM1F3SFFZRFZSME9CQllFRk1zK1dxc0NCTzQyDQptby9sWjUrbHZlVXA4VzRBTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFESTJHUWZMa1BWYUh6Ymp1M3kyZDhMDQpnb1NWRlFuZWV0VlJTR3MrTXIvRUZJc1VuR1VtOGNWTmVkZXNpbFFCZEZuNXFYNHI0dFlHMHdRTnA5TS9heExsDQpWY0c2UCsrNE85V2E3NHBuYWtwQWU5Z0M2TDFiWkc5amg0ZU5JOVpscEVCYVBqU1pPSEh2Wm5jemJFU0F5Y290DQp2UmRwQURsYkJwakphWTJGSGt2c1BxY0RVN3dMNjhvQ0NIUTRoSTFpWnAzQlBLSi8vL3RRUzZFbEl3a3FIaUtrDQpnRmVJY1ZnV2M1MmcxMzNtUURyaVhuY1lqSXprQXVJZWRadWJrb3NOcEtEQjFsbjlBckdhSkZ4VHA3YVliT01kDQphMkxxZ2xVa2tuUDBJMkZkU0lad2diTDEvYXMyMzFLUk1YMXFXRmZZSldtYVJlSUNpK0NCNkJveE52Tml4OFIzDQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
  1-Australian_Defence_Public_Identity_CA.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHWGpDQ0JVYWdBd0lCQWdJVVJsNUkrTlhpN0RtUGxqYnZCU2d3S0NadUhyOHdEUVlKS29aSWh2Y05BUUVMDQpCUUF3Y1RFTE1Ba0dBMVVFQmhNQ1FWVXhEREFLQmdOVkJBb1RBMGRQVmpFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3DQpDZ1lEVlFRTEV3TlFTMGt4RERBS0JnTlZCQXNUQTBOQmN6RXFNQ2dHQTFVRUF4TWhRWFZ6ZEhKaGJHbGhiaUJFDQpaV1psYm1ObElGQjFZbXhwWXlCU2IyOTBJRU5CTUI0WERURTJNVEV5T0RJek1UQXpNVm9YRFRJMk1URXlPREl6DQpNVEF6TVZvd2RURUxNQWtHQTFVRUJoTUNRVlV4RERBS0JnTlZCQW9UQTBkUFZqRU1NQW9HQTFVRUN4TURSRzlFDQpNUXd3Q2dZRFZRUUxFd05RUzBreEREQUtCZ05WQkFzVEEwTkJjekV1TUN3R0ExVUVBeE1sUVhWemRISmhiR2xoDQpiaUJFWldabGJtTmxJRkIxWW14cFl5QkpaR1Z1ZEdsMGVTQkRRVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEDQpnZ0VQQURDQ0FRb0NnZ0VCQU5OUlFybGxXK0I2aG84aW9GQWhwOUJneHRJZFB3b0JYTFQ5cVV0bGdGRGRjWXdnDQptOWdHR21xVFJOcDhmRG9ESWhzWGpEUDBjK2JEMlJzUlVMZmxmenJJNFM1UnlkaXJpKzFaQUQrTTFKSnI3K3JhDQpNZmZVOUluWGZab2FlZHRreEhqakJWNGZQV3hDWGZXTlBvamFZRlpPS0lmSmNFK093UVlLcDNKTUpvSEc0ak91DQpzSjB2MTJILy8zUG1OczRybnpZQWVVMytLaVpJSFVrN3crcm9COFV5cGM5UUJVTjhlZXNmN3hRN3ZaeFFHUnVKDQpDeUtRdDlQamZZTjkrem9MRXNZeGRtSkYrbHNnVzFuOHQyRllFbCsvRCs0dnpnWlF5QXJXQmlNcDMzd09nYjB1DQpZc2svNVFCb2g3SThVR3gweG9XSXJOSHVBRTcrUEUyRGpmSkhyMmNDQXdFQUFhT0NBdWd3Z2dMa01CSUdBMVVkDQpFd0VCL3dRSU1BWUJBZjhDQVFBd2dhZ0dBMVVkSUFTQm9EQ0JuVEE0QmdrcUpBR0NUZ0VCQVFnd0t6QXBCZ2dyDQpCZ0VGQlFjQ0FSWWRhSFIwY0RvdkwyTnliQzVrWldabGJtTmxMbWR2ZGk1aGRTOXdhMmt3QmdZRVZSMGdBREFMDQpCZ2txSkFHQ1RnRUNBUUV3Q3dZSktpUUJnazRCQWdFQ01Bc0dDU29rQVlKT0FRSUJBekFMQmdrcUpBR0NUZ0VDDQpBUVF3Q3dZSktpUUJnazRCQWdJQk1Bc0dDU29rQVlKT0FRSUNBakFMQmdrcUpBR0NUZ0VDQWdNd2dmZ0dDQ3NHDQpBUVVGQndFQkJJSHJNSUhvTUNZR0NDc0dBUVVGQnpBQmhocG9kSFJ3T2k4dmIyTnpjQzVrWldabGJtTmxMbWR2DQpkaTVoZFRBOUJnZ3JCZ0VGQlFjd0FvWXhhSFIwY0RvdkwyTnliQzVrWldabGJtTmxMbWR2ZGk1aGRTOXdhMmt2DQpZMlZ5ZEdsbWFXTmhkR1Z6TDBGRVVGSkRRVEIvQmdnckJnRUZCUWN3QW9aemJHUmhjRG92TDJScGNpNWtaV1psDQpibU5sTG1kdmRpNWhkUzlqYmoxQmRYTjBjbUZzYVdGdUlFUmxabVZ1WTJVZ1VIVmliR2xqSUZKdmIzUWdRMEVzDQpiM1U5UTBGekxHOTFQVkJMU1N4dmRUMUViMFFzYnoxSFQxWXNZejFCVlQ5alFVTmxjblJwWm1sallYUmxPMkpwDQpibUZ5ZVRBT0JnTlZIUThCQWY4RUJBTUNBY1l3SHdZRFZSMGpCQmd3Rm9BVXJKbmhBaS9vWEV0QnR6UzRIdW1iDQpnellObExRd2dkY0dBMVVkSHdTQnp6Q0J6REF5b0RDZ0xvWXNhSFIwY0RvdkwyTnliQzVrWldabGJtTmxMbWR2DQpkaTVoZFM5d2Eya3ZZM0pzTDBGRVVGSkRRUzVqY213d2daV2dnWktnZ1krR2dZeHNaR0Z3T2k4dlpHbHlMbVJsDQpabVZ1WTJVdVoyOTJMbUYxTDJOdUpUTmtRWFZ6ZEhKaGJHbGhiaVV5TUVSbFptVnVZMlVsTWpCUWRXSnNhV01sDQpNakJTYjI5MEpUSXdRMEVzYjNVbE0yUkRRWE1zYjNVbE0yUlFTMGtzYjNVbE0yUkViMFFzYnlVelpFZFBWaXhqDQpKVE5rUVZVL1kyVnlkR2xtYVdOaGRHVlNaWFp2WTJGMGFXOXVUR2x6ZERBZEJnTlZIUTRFRmdRVWRLcGdEOURUDQpjUTRMdGJPd3RaSU5UU3JjZ0tnd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJU2tsTGJ6NXBHQVZhUzdSSzlLDQoraWZhUHRMbWswY0I2MFlXNmIrUDUyeDhFVHRLR1o1Q2drL2drdERsam1rdER1SjZGQkNGbEYrSDR0bFNLWE5XDQpLOVF4OWtSb2dzeFVJcmtRbXMyS0g4NHpEUDNxSnhoQlB0c3daaU9MRGJJT0I0UHpjdkRBY1Z2SGRDMC9vSUZCDQpuUDBSWXMrQ3NybXZCSW81UEhDM29wMzVic1FhSDI5NGVMVzZ5OG51WC9Rb3JGNkRnd2k5VFRLY2xLemZVSHZ6DQpxUjNDWGtYNEZXTHlvMVBrcEgvM3lnSldUSlpPYlgyckRUWWc0TFpnSXE4ZkFJL3FmY1pHY0VFT25uSm1vLzY2DQpybXdDZDlkWUdHYzQ2MUI4YW4rS3FEM3gxTjJjOFFUV25OR0tjS0ZZclFDb3Zrd3Voa0tGckl3MS8zR1NUdlpWDQprczA9DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
  1-Australian_Defence_Public_Identity_CA_AutoEnrol_G2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHYWpDQ0JWS2dBd0lCQWdJVVVpZE00a3hqVnhwUzBuaVBoRVNVRmg0aHlGUXdEUVlKS29aSWh2Y05BUUVMDQpCUUF3Y1RFTE1Ba0dBMVVFQmhNQ1FWVXhEREFLQmdOVkJBb1RBMGRQVmpFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3DQpDZ1lEVlFRTEV3TlFTMGt4RERBS0JnTlZCQXNUQTBOQmN6RXFNQ2dHQTFVRUF4TWhRWFZ6ZEhKaGJHbGhiaUJFDQpaV1psYm1ObElGQjFZbXhwWXlCU2IyOTBJRU5CTUI0WERUSXhNRFV3TmpBMU1UUXdPRm9YRFRNeE1EVXdOakExDQpNVE0xTUZvd2dZSXhDekFKQmdOVkJBWVRBa0ZWTVF3d0NnWURWUVFLRXdOSFQxWXhEREFLQmdOVkJBc1RBMFJ2DQpSREVNTUFvR0ExVUVDeE1EVUV0Sk1Rd3dDZ1lEVlFRTEV3TkRRWE14T3pBNUJnTlZCQU1UTWtGMWMzUnlZV3hwDQpZVzRnUkdWbVpXNWpaU0JRZFdKc2FXTWdTV1JsYm5ScGRIa2dRMEVnUVhWMGIwVnVjbTlzSUVjeU1JSUJJakFODQpCZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2KzhEVDN6eW5iS1ZaS0lMSlBIeE4rdDdCaW5YDQp2MVhGYklJRlVSVTZQdmt6R3ZoSis2RGxUdGk1ZVRaSlVTZkVwUTJ6WER1KytGQVZ2bzlsNjUxa0lNUXh1VjFrDQoyT1JtTHdzcDRVZWk1U1R4TTdyTzBTV3NaeGVXejhmYk5uck9rY3N1dGl4T1NwMis1YUVTNzE0RC8wL09heEtmDQpORFVhSzMrZm5wVnRSTkRMSVRxWDV4cHlRazdpWEJNbEJnRW5zbXdLM1NVU05LQjVEbXNmUDg3MTNRUmFnSWNrDQppejNJSkNOcThBTVBpRm9NQ3NsU2YyVlAvak0yZW53emU3ZlRUYjh2a2xkaWRQendEOThqQi9aYmc3NlAzamh6DQpWWWF4Nk1QcWVxS3BwSkE1NGwrb2FkVy9SOG1HOHhpUEhHbjhubW13WHorSnBBQVI0azRxbHBwNkxRSURBUUFCDQpvNElDNWpDQ0F1SXdFZ1lEVlIwVEFRSC9CQWd3QmdFQi93SUJBRENCcUFZRFZSMGdCSUdnTUlHZE1EZ0dDU29rDQpBWUpPQVFFQkNEQXJNQ2tHQ0NzR0FRVUZCd0lCRmgxb2RIUndPaTh2WTNKc0xtUmxabVZ1WTJVdVoyOTJMbUYxDQpMM0JyYVRBR0JnUlZIU0FBTUFzR0NTb2tBWUpPQVFJQkFUQUxCZ2txSkFHQ1RnRUNBUUl3Q3dZSktpUUJnazRCDQpBZ0VETUFzR0NTb2tBWUpPQVFJQkJEQUxCZ2txSkFHQ1RnRUNBZ0V3Q3dZSktpUUJnazRCQWdJQ01Bc0dDU29rDQpBWUpPQVFJQ0F6Q0NBUUVHQ0NzR0FRVUZCd0VCQklIME1JSHhNQ1lHQ0NzR0FRVUZCekFCaGhwb2RIUndPaTh2DQpiMk56Y0M1a1pXWmxibU5sTG1kdmRpNWhkVEE5QmdnckJnRUZCUWN3QW9ZeGFIUjBjRG92TDJOeWJDNWtaV1psDQpibU5sTG1kdmRpNWhkUzl3YTJrdlkyVnlkR2xtYVdOaGRHVnpMMEZFVUZKRFFUQ0Jod1lJS3dZQkJRVUhNQUtHDQplMnhrWVhBNkx5OWthWEl1WkdWbVpXNWpaUzVuYjNZdVlYVXZZMjQ5UVhWemRISmhiR2xoYmlVeU1FUmxabVZ1DQpZMlVsTWpCUWRXSnNhV01sTWpCU2IyOTBKVEl3UTBFc2IzVTlRMEZ6TEc5MVBWQkxTU3h2ZFQxRWIwUXNiejFIDQpUMVlzWXoxQlZUOWpRVU5sY25ScFptbGpZWFJsTzJKcGJtRnllVEFPQmdOVkhROEJBZjhFQkFNQ0FjWXdId1lEDQpWUjBqQkJnd0ZvQVVySm5oQWkvb1hFdEJ0elM0SHVtYmd6WU5sTFF3Z2NzR0ExVWRId1NCd3pDQndEQXlvRENnDQpMb1lzYUhSMGNEb3ZMMk55YkM1a1pXWmxibU5sTG1kdmRpNWhkUzl3YTJrdlkzSnNMMEZFVUZKRFFTNWpjbXd3DQpnWW1nZ1lhZ2dZT0dnWUJzWkdGd09pOHZaR2x5TG1SbFptVnVZMlV1WjI5MkxtRjFMMk51UFVGMWMzUnlZV3hwDQpZVzRsTWpCRVpXWmxibU5sSlRJd1VIVmliR2xqSlRJd1VtOXZkQ1V5TUVOQkxHOTFQVU5CY3l4dmRUMVFTMGtzDQpiM1U5Ukc5RUxHODlSMDlXTEdNOVFWVS9ZMlZ5ZEdsbWFXTmhkR1ZTWlhadlkyRjBhVzl1VEdsemREQWRCZ05WDQpIUTRFRmdRVXdPOWM1TGRsYlp0L0VKNDBxaG1Yb3o4MitTTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSW1hDQpsK0ZHQ09Jajk5QVpiWEZiSEpxQVVNTWhkUlNDSlBDRUh1dG9nNUVvMU0rbzE4WjNlbjdHK2VXMk5FR1d4ajB3DQorN0dTdkxFdjZxeWNXSG9vcXhkUlNQZFdWTFpxVE1wWFdsNENqWTJnbm93cW12YnRYNW53ZElwOFE5T21uTWhlDQpYc0Z0cHF5NFUzSWFMWWlRNkN4ME9kSEFObEIzTmpmZnZyeUtDWWxvRi93NUtuSmNFMGNRVWdzUFhKL0l6ODU4DQpLbDBteFdON3JVbXVhUm5DQk9Qb2JlWTk5NG91MDNHY1diVXpNcWYzR3BOK0JYTXF0RU5Vdm9sM3BEQUI0QjM0DQpPbG1tanhQL0pwT0tDNUJVb3FVbEVGYzJqNE4rVVlPTTJKQXpGYXhod0o0NnQ3bWtITERIYVpEOThEZERzOXgrDQp5UFd5ekx0Wm1QNGhqcHBld2djPQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
  1-Australian_Defence_Public_Identity_CA_G2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHWHpDQ0JVZWdBd0lCQWdJVVZpcGtXYlJGV3ZSdmMxMHJoZFlvamVMYmRWa3dEUVlKS29aSWh2Y05BUUVMDQpCUUF3Y1RFTE1Ba0dBMVVFQmhNQ1FWVXhEREFLQmdOVkJBb1RBMGRQVmpFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3DQpDZ1lEVlFRTEV3TlFTMGt4RERBS0JnTlZCQXNUQTBOQmN6RXFNQ2dHQTFVRUF4TWhRWFZ6ZEhKaGJHbGhiaUJFDQpaV1psYm1ObElGQjFZbXhwWXlCU2IyOTBJRU5CTUI0WERUSXhNRFV3TmpBMU1EQTBOMW9YRFRNeE1EVXdOakEwDQpOVGt3T0Zvd2VERUxNQWtHQTFVRUJoTUNRVlV4RERBS0JnTlZCQW9UQTBkUFZqRU1NQW9HQTFVRUN4TURSRzlFDQpNUXd3Q2dZRFZRUUxFd05RUzBreEREQUtCZ05WQkFzVEEwTkJjekV4TUM4R0ExVUVBeE1vUVhWemRISmhiR2xoDQpiaUJFWldabGJtTmxJRkIxWW14cFl5QkpaR1Z1ZEdsMGVTQkRRU0JITWpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCDQpCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMSVJQY1B3UVdmTUZYR2h0L205SjhUaFFEdmJ6OGQvUEtDWmRYZis4dDBQDQozcU5RYUNmZ2ZOQ0Z5eXR4ZFpOcXo0UTQ1WTVkd3p5cWdZbDFXczJtelFackg4azhKc1JwNmRkM05qVWZsTWR1DQpuVEl2SzNEM1V1VGp5WUcwUHJLQWxUby9DWjdYOThVZHRLaG5KOVNHU0F1UGVBYXdXTEQ3RWU2di8yUmVXRm9nDQpaa1RhRmJpWVdxT0ljWXJWUk5VTTdUZmNjMGszS1hBbUY5V1RtTEpFVTVPQ1NDZmdtVU8vTTZYMXZrMStxRVlYDQpSZUhhT2JXbTJQa0lpM3ViSjl4aVI4WUo0SEd2R3VZaXdEUTJrRlZabjZXZW1KSzhlaUpPVWtXZm1URHVRK01lDQpCeFFRbkdqWVJsR0JjZitZYTJoSlVhVVJINlBoV2RkMytGK2UzcDQxdkZzQ0F3RUFBYU9DQXVZd2dnTGlNQklHDQpBMVVkRXdFQi93UUlNQVlCQWY4Q0FRQXdnYWdHQTFVZElBU0JvRENCblRBNEJna3FKQUdDVGdFQkFRZ3dLekFwDQpCZ2dyQmdFRkJRY0NBUllkYUhSMGNEb3ZMMk55YkM1a1pXWmxibU5sTG1kdmRpNWhkUzl3YTJrd0JnWUVWUjBnDQpBREFMQmdrcUpBR0NUZ0VDQVFFd0N3WUpLaVFCZ2s0QkFnRUNNQXNHQ1Nva0FZSk9BUUlCQXpBTEJna3FKQUdDDQpUZ0VDQVFRd0N3WUpLaVFCZ2s0QkFnSUJNQXNHQ1Nva0FZSk9BUUlDQWpBTEJna3FKQUdDVGdFQ0FnTXdnZ0VCDQpCZ2dyQmdFRkJRY0JBUVNCOURDQjhUQW1CZ2dyQmdFRkJRY3dBWVlhYUhSMGNEb3ZMMjlqYzNBdVpHVm1aVzVqDQpaUzVuYjNZdVlYVXdQUVlJS3dZQkJRVUhNQUtHTVdoMGRIQTZMeTlqY213dVpHVm1aVzVqWlM1bmIzWXVZWFV2DQpjR3RwTDJObGNuUnBabWxqWVhSbGN5OUJSRkJTUTBFd2dZY0dDQ3NHQVFVRkJ6QUNobnRzWkdGd09pOHZaR2x5DQpMbVJsWm1WdVkyVXVaMjkyTG1GMUwyTnVQVUYxYzNSeVlXeHBZVzRsTWpCRVpXWmxibU5sSlRJd1VIVmliR2xqDQpKVEl3VW05dmRDVXlNRU5CTEc5MVBVTkJjeXh2ZFQxUVMwa3NiM1U5Ukc5RUxHODlSMDlXTEdNOVFWVS9ZMEZEDQpaWEowYVdacFkyRjBaVHRpYVc1aGNua3dEZ1lEVlIwUEFRSC9CQVFEQWdIR01COEdBMVVkSXdRWU1CYUFGS3laDQo0UUl2NkZ4TFFiYzB1QjdwbTRNMkRaUzBNSUhMQmdOVkhSOEVnY013Z2NBd01xQXdvQzZHTEdoMGRIQTZMeTlqDQpjbXd1WkdWbVpXNWpaUzVuYjNZdVlYVXZjR3RwTDJOeWJDOUJSRkJTUTBFdVkzSnNNSUdKb0lHR29JR0Rob0dBDQpiR1JoY0RvdkwyUnBjaTVrWldabGJtTmxMbWR2ZGk1aGRTOWpiajFCZFhOMGNtRnNhV0Z1SlRJd1JHVm1aVzVqDQpaU1V5TUZCMVlteHBZeVV5TUZKdmIzUWxNakJEUVN4dmRUMURRWE1zYjNVOVVFdEpMRzkxUFVSdlJDeHZQVWRQDQpWaXhqUFVGVlAyTmxjblJwWm1sallYUmxVbVYyYjJOaGRHbHZia3hwYzNRd0hRWURWUjBPQkJZRUZFU21wWU1KDQpPSzdjTGNpeXEvYW1WMFZYaG9IaU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRREtJTWtHQmJpUFhmYkY5QjY5DQowVkFCQXBqdDdsRitIbS9VRVgydTh4czA1TW51a3p3a2ZETGJxU1hhb0R0KytabGllcXBmK2dxemZrZHE1MVJPDQp4RnVKOUJ3OTc3eExkL2RnT0JKZUR2OFJkbmd5WHR2RFdSYnF3OGQ0b1RieTdrN0FCdWJVVE9aVHBtT3hTT2htDQp2QVlTS0VWZlB0MXVtV2k1dWF2Zk5OeG1kaDNZZ2c3eVl2NHJzcm90aWFPL0lZSkRETDRBU1JkNmpXVloxVG8wDQp1UkFneWRFMFEyc3lGaTd1RG1TQU9zOEtmUDlLNXNLMVZzeGM2cmtZTVVjSk9lSVNyRi85QWRNZ1Z3M2F6N29FDQpFcGlCT0ppaFpkVHNvT0RESmEwVk5NOWI4eUhJandGYlBIS0xUUGdaK3ppNHI0R2s1N1ZUTjA5SVlhS3pXTnFpDQpDNHlQDQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-boeing
  namespace: default
data:
  0-Boeing_PCA_G3.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlEZGpDQ0FsNmdBd0lCQWdJUVEyOTZuVXdMcGJwS3UzVitxeERLQ2pBTkJna3Foa2lHOXcwQkFRc0ZBREJNDQpNUXN3Q1FZRFZRUUdFd0pWVXpFUE1BMEdBMVVFQ2hNR1FtOWxhVzVuTVJRd0VnWURWUVFMRXd0alpYSjBjMlZ5DQpkbVZ5Y3pFV01CUUdBMVVFQXhNTlFtOWxhVzVuSUZCRFFTQkhNekFlRncweE16QXpNamt4TnpFek5UaGFGdzB6DQpNREV4TWpreE56SXdNREZhTUV3eEN6QUpCZ05WQkFZVEFsVlRNUTh3RFFZRFZRUUtFd1pDYjJWcGJtY3hGREFTDQpCZ05WQkFzVEMyTmxjblJ6WlhKMlpYSnpNUll3RkFZRFZRUURFdzFDYjJWcGJtY2dVRU5CSUVjek1JSUJJakFODQpCZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFySnRRc3J4OTNqMzZwNStOY1dKdy8yaXRTek9UDQpJajQ4clJVeWVhQjd3bnJ0WFhCYzdzcG5vRkwvbm1IVEU5Z283TzQzWFNLVnFEODNQRlQzSlZlbStidkxTdlh3DQpZSlJsQVVIc2pSdzkrckp2SGJ6YXlKQUtjdkZyVjZyNzlTS3ZJYmE5NFMyYkQyQW8zUXJuSVZxWFhTT3lZQTRpDQovUm9xUEVORCtwTXZtaXp5MlBaOVlKeHZ5c0VJb0ZvalBGYXYwbHU0OWZraUFHVHRvVFFVMTUxeXpuQnA4Z2EwDQoxVjJmRk1LbEhFdU1sNVdocGE4K3lnU29mYVFIRWl0N3ZiT3l4b3lhS3hoVDcyalB2dGxYa3Y4NzlPUUlnYnN1DQo5MkZqQ0syL2NpL0tMK0tPclZ5U3ZEQkZ5VVhwU3FSSUplVTU5cFZocnVnT1V3ZW1Xd2pReWt3ZGF3SURBUUFCDQpvMVF3VWpBT0JnTlZIUThCQWY4RUJBTUNBY1l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVDQpOR3NPQlBpeXIyVWxzKy9MWEVRNUtreUVpRDh3RUFZSkt3WUJCQUdDTnhVQkJBTUNBUUF3RFFZSktvWklodmNODQpBUUVMQlFBRGdnRUJBS01YL3VyRDNFTUYwbUM4OElRa2xhKy82TDVTdE5MRThCMnhVblJpRkUvbnR2WWc4Lyt4DQpBR2lZUkc1SjFEY2h1Y0NXU1RNUU1tbXloeUhXK3NFVHJpeVJKNENRSnRiWTNiYnBhMFJyNm4zMjhtNEZEOGZYDQpXbk1tY1M0NWtWc0NWcEJDa1NqVXFlQU1tMGhWR0g4R1NWOWF4UUg3UW94Nk1WYURjbnRZUGtESUkzR1hmNXJUDQp1ckttdVZZZzNxanZZcUtVUHR2WWNOVWpobHBsTnZ4TlUyRmRncDdtTWFOUFFRVFB1RnhOZndLc1RoYnZWbnhMDQpyOWZrL2RZWng3aWxLVHlvV0FGQ09ORUIzWEYzSzF5V05rRDBnbUlyOHA4TERyUFllaHJwbHlDNks4eElybjdqDQpnSWdXSEQyMkloVjFyNTdqWU5DUmxQQ203NUhYVWxUU0xWWT0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
  1-Boeing_Medium_Assurance_Hardware_Issuing_CA_G3.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGaERDQ0JHeWdBd0lCQWdJS1lkcFZaQUFBQUFBQUR6QU5CZ2txaGtpRzl3MEJBUXNGQURCTU1Rc3dDUVlEDQpWUVFHRXdKVlV6RVBNQTBHQTFVRUNoTUdRbTlsYVc1bk1SUXdFZ1lEVlFRTEV3dGpaWEowYzJWeWRtVnljekVXDQpNQlFHQTFVRUF4TU5RbTlsYVc1bklGQkRRU0JITXpBZUZ3MHhOekE0TWprd01UVTFOVGRhRncweU56QTRNamt3DQpNakExTlRkYU1HMHhDekFKQmdOVkJBWVRBbFZUTVE4d0RRWURWUVFLRXdaQ2IyVnBibWN4RkRBU0JnTlZCQXNUDQpDME5sY25SVFpYSjJaWEp6TVRjd05RWURWUVFERXk1Q2IyVnBibWNnVFdWa2FYVnRJRUZ6YzNWeVlXNWpaU0JJDQpZWEprZDJGeVpTQkpjM04xYVc1bklFTkJJRWN6TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCDQpDZ0tDQVFFQXV1cDBhR1pxVlQ0Z1JwV1RHNXZtRHl0b2YyQ0NMUG9jaHdGN3RBYzZEWnBOMDQ4MjZVK3gwQTArDQp2SlJwWGgyMlFRTGdtcFYzdXJtRkF6aWZiS1N0VWhubVppMi9iS3JOVjZ3blFpRXV1L0pWWW9RZWs4OExjckhaDQpQcFRUWkNBQ3FJVldEbGVaSEZWcXZWWDlDbHhYbTRuS0NrOWMveU8zQ3U3K084ZnFkOUtRL2luVDZqMSthcGxYDQpiVmxTaVUzNkh1eFk5Vm8vMWoxSG1na1MzTzU0dGhpcndKbDVxREd3VWdLZEplYi9hYXkzUzZmZDdDclg2NWdsDQo2TnZBOUowRXd6SStkUCtTaTQwaUU4ZmxtSmFsWGkveXBBK1BTcVFPSGdMNCtXMzFLeVNjL1lLWkpIeWhZSTFJDQpIc0g0ekhNYmxwa3ltSHN1UFFJamR5ZU9pMDVla3dJREFRQUJvNElDUlRDQ0FrRXdEZ1lEVlIwUEFRSC9CQVFEDQpBZ0hHTUJBR0NTc0dBUVFCZ2pjVkFRUURBZ0VBTUIwR0ExVWREZ1FXQkJTenBqQXZFQm16Z2RCWGtVeFlCM0RIDQpiSnM5QnpBekJnTlZIU0FFTERBcU1Bd0dDaXNHQVFRQlNROERBUXN3REFZS0t3WUJCQUZKRHdNQkREQU1CZ29yDQpCZ0VFQVVrUEF3RVBNQmtHQ1NzR0FRUUJnamNVQWdRTUhnb0FVd0IxQUdJQVF3QkJNQklHQTFVZEV3RUIvd1FJDQpNQVlCQWY4Q0FRQXdId1lEVlIwakJCZ3dGb0FVTkdzT0JQaXlyMlVscysvTFhFUTVLa3lFaUQ4d2diWUdBMVVkDQpId1NCcmpDQnF6Q0JxS0NCcGFDQm9vWXZhSFIwY0RvdkwyTnliQzVpYjJWcGJtY3VZMjl0TDJOeWJDOUNiMlZwDQpibWNsTWpCUVEwRWxNakJITXk1amNteUdiMnhrWVhBNkx5OWthWEl1WW05bGFXNW5MbU52YlM5RFRqMUNiMlZwDQpibWNsTWpCUVEwRWxNakJITXl4dmRUMXdhMmtzYjNVOVkyVnlkSE5sY25abGNuTXNiejFpYjJWcGJtY3NZejExDQpjejlqWlhKMGFXWnBZMkYwWlZKbGRtOWpZWFJwYjI1TWFYTjBPMkpwYm1GeWVUQ0J2d1lJS3dZQkJRVUhBUUVFDQpnYkl3Z2E4d05RWUlLd1lCQlFVSE1BS0dLV2gwZEhBNkx5OWpjbXd1WW05bGFXNW5MbU52YlM5amNtd3ZRbTlsDQphVzVuVUVOQlJ6TXVjRGRqTUhZR0NDc0dBUVVGQnpBQ2htcHNaR0Z3T2k4dlpHbHlMbUp2WldsdVp5NWpiMjB2DQpRMDQ5UW05bGFXNW5KVEl3VUVOQkpUSXdSek1zYjNVOWNHdHBMRzkxUFdObGNuUnpaWEoyWlhKekxHODlZbTlsDQphVzVuTEdNOWRYTS9ZM0p2YzNORFpYSjBhV1pwWTJGMFpWQmhhWEk3WW1sdVlYSjVNQTBHQ1NxR1NJYjNEUUVCDQpDd1VBQTRJQkFRQktSMUJ0TnBKUWt3VlRmZUp0ck9aRHB1UHBuWEpKUlgrdUFiL3k2aHVNSFpZdDdEdjRkb3R6DQplcTkyZlFQWHNmZlgxNmwvbW1EVEZjT2JSalR3dDdvWUpkM3NLYkVFbjFGVU0yYmV0UmczYnU0NHFobCtKNmpYDQpIU296cUdocDVSTldncUJMajJuN1F1MDlOVE5HSHZSSTF3OXQvMmhPUjdUaTF6dTQyRE9aM0p5QjFyWkYzVDRiDQptVUM4RmNvY1BjTzNlZFAxeHRzdnlSdlRXTjJ1eTdkc2tpRHN4dUZBTEtONjJBdGthZTI1RGlkMC8xOTBzT0lQDQpxNkMxaEpweEk3ZEhhRjVSTnZIU0IrMHNYRmtydnFBTTVTMDFzVGkxNW80ZEwrclp1VCt1dWJ3cFJvUGJKSTV0DQp6WTI5R1BvcnQzN1hqYkd0eWNqOW9BUHNvS2RzdlhTWA0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-carillon-federal-services-trust-chain-1
  namespace: default
data:
  0-Carillon_Federal_Services_NFI_Root_CA1.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGMmpDQ0E4S2dBd0lCQWdJR0FVTWx0cUIwTUEwR0NTcUdTSWIzRFFFQkN3VUFNSUdMTVFzd0NRWURWUVFHDQpFd0pWVXpFbk1DVUdBMVVFQ2hNZVEyRnlhV3hzYjI0Z1JtVmtaWEpoYkNCVFpYSjJhV05sY3lCSmJtTXVNU0l3DQpJQVlEVlFRTEV4bERaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwYVdWek1TOHdMUVlEVlFRREV5WkRZWEpwDQpiR3h2YmlCR1pXUmxjbUZzSUZObGNuWnBZMlZ6SUU1R1NTQlNiMjkwSUVOQk1UQWVGdzB4TlRBMk1USXhPRFEyDQpNekZhRncwek5UQTJNVEl4T0RRMk16RmFNSUdMTVFzd0NRWURWUVFHRXdKVlV6RW5NQ1VHQTFVRUNoTWVRMkZ5DQphV3hzYjI0Z1JtVmtaWEpoYkNCVFpYSjJhV05sY3lCSmJtTXVNU0l3SUFZRFZRUUxFeGxEWlhKMGFXWnBZMkYwDQphVzl1SUVGMWRHaHZjbWwwYVdWek1TOHdMUVlEVlFRREV5WkRZWEpwYkd4dmJpQkdaV1JsY21Gc0lGTmxjblpwDQpZMlZ6SUU1R1NTQlNiMjkwSUVOQk1UQ0NBaUl3RFFZSktvWklodmNOQVFFQkJRQURnZ0lQQURDQ0Fnb0NnZ0lCDQpBSzVYME5oMnRpRWc3RDY1b3ByckEyL3VoaU9Yc1lmSDh1RVlQUUdaS1FGcXpPazVoNnpjeTY4WmwzbFFxcTFRDQpVNXVkNUhta3JlaVhjQzQ4RHJQeHFpRkgzZU1QTVFNdE1KMjJRenlsWnEzRy9yakIxRjlyQWNTL2t1TXdJWWhrDQpVTE02N0c1aWpnRDdPVjJwMnliQXdKRGxFYVJhN1NrbytNU1RQVTNmUTVLRlM3eDdtZ0tiQUhzcjd6bVAwSGhuDQpCRmRTVDU5UEgvNVNobVhVN2M4OEMxMUhjR2xqL2IyRERnTUlpallUa3Fxdi9sWnprM1lzRnRzZDluK2V1bXY3DQpWWkdOQzVLU1RoL0JlTEh4QXFsYlFHQzZWZFdEdXRBRTdkbGlweGMwbE0vYlBUWWY2QUZIV1RuU2orOGorQlVaDQphQ1RNbVhkdTZvZkxuMVhjQUNlamxzRWxwVVRxcmkrSUVaT2xiVXZIbm12bGNrTGM2Zkc2VERacW5maVZSdm9YDQo1anVoNURLRG5acWRZZFpaclR1T3hNWTdhaTJTVDZQcnIrWFBDa0M0OGdORkFXQU1uVTk3cjNpeUFjbjJia0RUDQpqNFpUR3JTRFQ4SmNPZk5Md2FWeXhrY0xxV2NibGZEY0hGd1VTY2h0RHYwdWI2NG9uMjdVVVBPKzFnVXVBZ3RjDQpRZVZOM2RHL29qb29kRHZYVkI0S0NlZDJNbjFJd2I2TmxVcTlmWjRVNENqUTZ6WXp4Yk95VmwvMXBzRTJ2K2xTDQpEYklUTFp2UmpQUExLdnZIdlNaUUVmZjNqb2RlZm8zbE4xUGtpNkxjTlRyNkpaRGcrbzF0c1FNYVFYVWgxN2VEDQpvWDJjMzlHUmlxdjM4TWFmaTRpd09NQnAxc0l6RnR1bmpKaGJzdHlRcW9tNUFnTUJBQUdqUWpCQU1CMEdBMVVkDQpEZ1FXQkJUalJzTHJ2WXlORVpOcCszM3F0TU5aZnJTczdUQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkDQpEd0VCL3dRRUF3SUJ4akFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBWGxTMkUxYVhLbjlFTWIrT2RDUjlmOTdsDQo3a3VGL1g3NUNmU1dGb0RQR0puSDVVVTdCMy9EdCt5WjErbnF3UlhlbTV1UC9oZnYxaU9ENFV4cmY2blc2THFJDQoxYUZvbXNGRGk5Tko1d1RCNEJ0Q2FKT2FpbmtOSkVsNW9uU1ZxL0FZUXM2dXJ6TTA1dGhZTGJ2dkR5QmlMZU1lDQpKdnlzbHhtZjFzdmp5VVJqdExSUHJJdUhJeDgyVG9JUXl1RnhRRjU4Smppd0l1cUtkcW1vYnRBeStNY1JVL2JJDQorR3YrTFVRVjVsSnptL0dRVEU3WWV6YzFVaTJ6Z0ZzVUcrVEwrTlBEM3ZvUVJyTEhuTmgrSzhvL3pseTRTakp5DQpLZVZPUHlpNVNCbndPbGZQdHFhMFJSck45Rmk4YUpqOXBqL2s2REFMNVpmY2dHZnJuc1BjRDN5UTJ1MHdTTEpoDQp4OTNmVWJWM1pHUHJCQUJqbmVEajZoVVJrZUJSVEl6VGN5dXhXWVZQTGxUMTJiY284c2QyUUFHdVIzV2pJV1ZjDQpSRDlpREp6b2ozUTlEWXhYY08xMm1EMzhER053dWRBKzRRQzg0NmFsak90eWp3S0trWlBLSkt0ZHhycWtlQlFtDQpzZkNmQjJNcWMwVVg0THJ4RDNFQjdjSnRaczU1Z0J2Z1NpbnF5UThGYlZVc1RGRXlRbW93MnJwSERSbXR4dXMvDQowOGx1cW53Y3Fpbk9sUWFuZGRrd29RZU1rZzlvNjZGVnI1N3lGVUw2Sy8yRlFJdmpvQzdmTHZvTkFJK0wxRG5yDQoyQmpBa2tIYkxYOEljcFBxQ0ZiRlZKM2lZNjkrbGRSU1g1V3FHc1pQd3E2U0NsdEx6T1R4OWhSWEttNnVCbW8xDQpVWGhZc2haOUVoTUJOb3N6ZnA4PQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
  1-Carillon_Federal_Services_PIVI_CA1_0x0bb34dc334ff.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlKOGpDQ0I5cWdBd0lCQWdJR0M3Tk53elQvTUEwR0NTcUdTSWIzRFFFQkN3VUFNSUdMTVFzd0NRWURWUVFHDQpFd0pWVXpFbk1DVUdBMVVFQ2hNZVEyRnlhV3hzYjI0Z1JtVmtaWEpoYkNCVFpYSjJhV05sY3lCSmJtTXVNU0l3DQpJQVlEVlFRTEV4bERaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwYVdWek1TOHdMUVlEVlFRREV5WkRZWEpwDQpiR3h2YmlCR1pXUmxjbUZzSUZObGNuWnBZMlZ6SUU1R1NTQlNiMjkwSUVOQk1UQWVGdzB4TlRBMk1USXhPVEF4DQpNVE5hRncweU9EQTJNVEl4T1RBeE1UTmFNSUdJTVFzd0NRWURWUVFHRXdKVlV6RW5NQ1VHQTFVRUNoTWVRMkZ5DQphV3hzYjI0Z1JtVmtaWEpoYkNCVFpYSjJhV05sY3lCSmJtTXVNU0l3SUFZRFZRUUxFeGxEWlhKMGFXWnBZMkYwDQphVzl1SUVGMWRHaHZjbWwwYVdWek1Td3dLZ1lEVlFRREV5TkRZWEpwYkd4dmJpQkdaV1JsY21Gc0lGTmxjblpwDQpZMlZ6SUZCSlZpMUpJRU5CTVRDQ0FpSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnSVBBRENDQWdvQ2dnSUJBTnNNDQpMa3MxZm9SckQyNjdRODB2RHB1eDRSTFMzTGdOZ2szdGR1T1g2a1NmaTFlQitFcXc0S3VrMlRHWGxpeDNPbHhPDQpkS3lGZkV1aDU2RmNtaDk5Q25CZVpJTzBFVWd2K0FKTHVCcmRsVmlEcWVERXpQV05Qb1ZzeUg5TGpCdXdLcVBMDQpSaEl1VDA5YmliZUxObEl0ODlhTlpqVmZnRmt3Ny9oSXVUNTB4aHBJakdDM3N6c3gvUlVwVlZpVmIwMzRPcFpIDQpNZ3FMbXhUZ2NUa3drQm1KUTluUXh0amZtWkppbzhRRGFxRWh2U1RGL1NGbXlyNTltbllQcmZCZ2tSL20wdmF6DQpmcERjTTc0MHBPZGxSdFlQRHNYczVTa0wrTEllTW9FSmFoZ3BBd2tyTFAyY0RDRFE4aVpQNWJGR0c2TStVcnFlDQpnWjh3RUlSbDNJR292dzRjbnVBQ0tpQXNDaWI0K1lSTWNqQUo4cXBxWHYxTjhUT3dsU21XWmdoQzk0UEh6dStoDQo3WElGN2F6UWNkNUhFUUhkVmxLcE5mV0JET3BwQlQ0MGVWMFZzNHVrQktya0Q4K0xrYmM1TUx2ajBWZDRPUnE2DQpEdFQ3cFE1QVZUaXdQYWMzOGRSNGZENVFjWXJ4N0FJdmpkWW05bkZtcmM5ZHQ3c3F3bTQ4ZkdtL3FudlB6RTBpDQpXY0RlMUd2ZHdFcUE3NG1URXdZaTRraE8xaCtWSlVaRXVFU0hQd2RLYVJOd1pIb2xXdWJRckR5b0NPeldoVXpTDQo3VG5CTWgvMnZyVEkzNHdsKytkT1ZjTDAzUW1CSTQyS2xmZmoycFR0a09nQ2lOYU1nQ1Z0TmFnRjlCYWxvd1FJDQo3NTBmMXBzcEhvV1R2NUNrVUtkVlEzN0sreWh0S0xzMkI1cFIwcW5MQWdNQkFBR2pnZ1JiTUlJRVZ6QWRCZ05WDQpIUTRFRmdRVTZicG5RMEN0UVNLYS92b0pRNGp6WXJocnJ5b3dId1lEVlIwakJCZ3dGb0FVNDBiQzY3Mk1qUkdUDQphZnQ5NnJURFdYNjByTzB3RWdZRFZSMFRBUUgvQkFnd0JnRUIvd0lCQURBT0JnTlZIUThCQWY4RUJBTUNBY1l3DQpnZ05lQmdOVkhTQUVnZ05WTUlJRFVUQU5CZ3NyQmdFRUFZTGtKZ01CQXpBTkJnc3JCZ0VFQVlMa0pnTUJCREFODQpCZ3NyQmdFRUFZTGtKZ01CQnpBTkJnc3JCZ0VFQVlMa0pnTUJDREFOQmdzckJnRUVBWUxrSmdNQkNUQU5CZ3NyDQpCZ0VFQVlMa0pnTUJDakFOQmdzckJnRUVBWUxrSmdNQkN6QU5CZ3NyQmdFRUFZTGtKZ01CRERDQjhBWUxLd1lCDQpCQUdDNUNZREFSUXdnZUF3UVFZSUt3WUJCUVVIQWdFV05XaDBkSEJ6T2k4dmNIVmlMbU5oY21sc2JHOXVabVZrDQpjMlZ5ZGk1amIyMHZRMlZ5ZEdsbWFXTmhkR1ZRYjJ4cFkza3VjR1JtTUlHYUJnZ3JCZ0VGQlFjQ0FqQ0JqUnFCDQppbFJvYVhNZ1kyVnlkR2xtYVdOaGRHVWdhR0Z6SUdKbFpXNGdhWE56ZFdWa0lHbHVJR0ZqWTI5eVpHRnVZMlVnDQpkMmwwYUNCMGFHVWdRMkZ5YVd4c2IyNGdSbVZrWlhKaGJDQlRaWEoyYVdObGN5QkpibU11SUVObGNuUnBabWxqDQpZWFJsSUZCdmJHbGplU0JoY3lCbWIzVnVaQ0JwYmlCMGFHVWdRMUJUY0c5cGJuUmxjaUJtYVdWc1pEQ0I4QVlMDQpLd1lCQkFHQzVDWURBUlV3Z2VBd1FRWUlLd1lCQlFVSEFnRVdOV2gwZEhCek9pOHZjSFZpTG1OaGNtbHNiRzl1DQpabVZrYzJWeWRpNWpiMjB2UTJWeWRHbG1hV05oZEdWUWIyeHBZM2t1Y0dSbU1JR2FCZ2dyQmdFRkJRY0NBakNCDQpqUnFCaWxSb2FYTWdZMlZ5ZEdsbWFXTmhkR1VnYUdGeklHSmxaVzRnYVhOemRXVmtJR2x1SUdGalkyOXlaR0Z1DQpZMlVnZDJsMGFDQjBhR1VnUTJGeWFXeHNiMjRnUm1Wa1pYSmhiQ0JUWlhKMmFXTmxjeUJKYm1NdUlFTmxjblJwDQpabWxqWVhSbElGQnZiR2xqZVNCaGN5Qm1iM1Z1WkNCcGJpQjBhR1VnUTFCVGNHOXBiblJsY2lCbWFXVnNaRENCDQo4QVlMS3dZQkJBR0M1Q1lEQVJZd2dlQXdRUVlJS3dZQkJRVUhBZ0VXTldoMGRIQnpPaTh2Y0hWaUxtTmhjbWxzDQpiRzl1Wm1Wa2MyVnlkaTVqYjIwdlEyVnlkR2xtYVdOaGRHVlFiMnhwWTNrdWNHUm1NSUdhQmdnckJnRUZCUWNDDQpBakNCalJxQmlsUm9hWE1nWTJWeWRHbG1hV05oZEdVZ2FHRnpJR0psWlc0Z2FYTnpkV1ZrSUdsdUlHRmpZMjl5DQpaR0Z1WTJVZ2QybDBhQ0IwYUdVZ1EyRnlhV3hzYjI0Z1JtVmtaWEpoYkNCVFpYSjJhV05sY3lCSmJtTXVJRU5sDQpjblJwWm1sallYUmxJRkJ2YkdsamVTQmhjeUJtYjNWdVpDQnBiaUIwYUdVZ1ExQlRjRzlwYm5SbGNpQm1hV1ZzDQpaREJPQmdnckJnRUZCUWNCQVFSQ01FQXdQZ1lJS3dZQkJRVUhNQUtHTW1oMGRIQTZMeTl3ZFdJdVkyRnlhV3hzDQpiMjVtWldSelpYSjJMbU52YlM5RFFXTmxjblJ6TDBOR1UxSkRRVEV1Y0Rkak1EOEdBMVVkSHdRNE1EWXdOS0F5DQpvRENHTG1oMGRIQTZMeTl3ZFdJdVkyRnlhV3hzYjI1bVpXUnpaWEoyTG1OdmJTOURVa3d2UTBaVFVrTkJNUzVqDQpjbXd3RFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUtqSUplUGtVLytEWm9BaTkwdEFoMVB3eDFPem5Ldit6dGNvDQpYc2g1R3hQVHZjZ2pncHZtWXdDL3drbzdEaE0yWHFlWUY0Z01lNkp4L004a0tJS2JBRFBGVmJ3alBzYWtCYmpCDQoyZS84aGkzNU83YVhnbEtGUktEeTV2aENYQlE3YnkzYWlaOGk3ODBmcW95T3pQL0xIRWRnTVIwbk9HK1RtWnBrDQpVSHlUNUNSVTA5UmVTcis4NUZhRGZMaWMrMVkreHRua1BGaFdoeld6V3g4STBSMUtQQUowbWw5SE5QOWt4MC91DQpOeHcxWTl4K2d2UUw2cW9ReGxWSFZoc050RWFGL2dQUUFIZDdBTzFjdG9YUkRmMFhtNnMzVnZkSEl1NmhCaEFBDQpuaXlmYXQyaWNsNWZrQ1pXL3VKZGdqelF5RmdoSERjTHIxdVdWR3h4TkYxMkN6YkwwajQzU0R6UTVZR0FDZjFrDQpZb2NVaW5YeTFHdEVjcndISzRIMlhVSjJKZ0VicjNhckZrTmNEVlJmRmZPZzIvK01YdFFPaEdSSlhUZ2g1d3BhDQpRQlBDcTNBRUs2WTNuWE4yam5Mem4rOWt2Z3oySnNYbjU5cSs2Vzh0Z0U3aTZ2TFhZTSttOGFHTElGQStPQkpNDQpPZXJUYVhsYVZXeERBYlRlWVppbWdmLyt3ZzlaK3RPVGplYXhrd3ZoOElSRDc5MWd1ayt1bk5kUEJMT0dvUmp1DQpBTHBJQ1NoU0d6ZkNMbUNnL0RDWW9HaEM1bWFaaWZGdVU4QjhlRkNRNXlqN1loc1Y4eXFndWdLUDdmNXBXazI5DQpTOE1KejV0cjdxcGlmM0w3V3NQcURmSUJWaXNnVWhCdVdUV2pzYlg1cjF3UTY1dGNOeG8zdlJpVGhHcGdzdGhWDQo4eHNJRUtGcg0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
  1-Carillon_Federal_Services_PIVI_CA1_0x7cfb6f1184c8.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUtEVENDQi9XZ0F3SUJBZ0lHZlB0dkVZVElNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1JR0xNUXN3Q1FZRFZRUUcKRXdKVlV6RW5NQ1VHQTFVRUNoTWVRMkZ5YVd4c2IyNGdSbVZrWlhKaGJDQlRaWEoyYVdObGN5QkpibU11TVNJdwpJQVlEVlFRTEV4bERaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwYVdWek1TOHdMUVlEVlFRREV5WkRZWEpwCmJHeHZiaUJHWldSbGNtRnNJRk5sY25acFkyVnpJRTVHU1NCU2IyOTBJRU5CTVRBZUZ3MHhPREEyTWpFeE9ETXkKTVRaYUZ3MHlPREEwTXpBeE9ETXlNVFphTUlHSU1Rc3dDUVlEVlFRR0V3SlZVekVuTUNVR0ExVUVDaE1lUTJGeQphV3hzYjI0Z1JtVmtaWEpoYkNCVFpYSjJhV05sY3lCSmJtTXVNU0l3SUFZRFZRUUxFeGxEWlhKMGFXWnBZMkYwCmFXOXVJRUYxZEdodmNtbDBhV1Z6TVN3d0tnWURWUVFERXlORFlYSnBiR3h2YmlCR1pXUmxjbUZzSUZObGNuWnAKWTJWeklGQkpWaTFKSUVOQk1UQ0NBaUl3RFFZSktvWklodmNOQVFFQkJRQURnZ0lQQURDQ0Fnb0NnZ0lCQU5zTQpMa3MxZm9SckQyNjdRODB2RHB1eDRSTFMzTGdOZ2szdGR1T1g2a1NmaTFlQitFcXc0S3VrMlRHWGxpeDNPbHhPCmRLeUZmRXVoNTZGY21oOTlDbkJlWklPMEVVZ3YrQUpMdUJyZGxWaURxZURFelBXTlBvVnN5SDlMakJ1d0txUEwKUmhJdVQwOWJpYmVMTmxJdDg5YU5aalZmZ0ZrdzcvaEl1VDUweGhwSWpHQzNzenN4L1JVcFZWaVZiMDM0T3BaSApNZ3FMbXhUZ2NUa3drQm1KUTluUXh0amZtWkppbzhRRGFxRWh2U1RGL1NGbXlyNTltbllQcmZCZ2tSL20wdmF6CmZwRGNNNzQwcE9kbFJ0WVBEc1hzNVNrTCtMSWVNb0VKYWhncEF3a3JMUDJjRENEUThpWlA1YkZHRzZNK1VycWUKZ1o4d0VJUmwzSUdvdnc0Y251QUNLaUFzQ2liNCtZUk1jakFKOHFwcVh2MU44VE93bFNtV1pnaEM5NFBIenUraAo3WElGN2F6UWNkNUhFUUhkVmxLcE5mV0JET3BwQlQ0MGVWMFZzNHVrQktya0Q4K0xrYmM1TUx2ajBWZDRPUnE2CkR0VDdwUTVBVlRpd1BhYzM4ZFI0ZkQ1UWNZcng3QUl2amRZbTluRm1yYzlkdDdzcXdtNDhmR20vcW52UHpFMGkKV2NEZTFHdmR3RXFBNzRtVEV3WWk0a2hPMWgrVkpVWkV1RVNIUHdkS2FSTndaSG9sV3ViUXJEeW9DT3pXaFV6Uwo3VG5CTWgvMnZyVEkzNHdsKytkT1ZjTDAzUW1CSTQyS2xmZmoycFR0a09nQ2lOYU1nQ1Z0TmFnRjlCYWxvd1FJCjc1MGYxcHNwSG9XVHY1Q2tVS2RWUTM3Syt5aHRLTHMyQjVwUjBxbkxBZ01CQUFHamdnUjJNSUlFY2pBZEJnTlYKSFE0RUZnUVU2YnBuUTBDdFFTS2Evdm9KUTRqellyaHJyeW93SHdZRFZSMGpCQmd3Rm9BVTQwYkM2NzJNalJHVAphZnQ5NnJURFdYNjByTzB3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFPQmdOVkhROEJBZjhFQkFNQ0FjWXdnZ044CkJnTlZIU0FFZ2dOek1JSURiekFOQmdzckJnRUVBWUxrSmdNQkF6QU5CZ3NyQmdFRUFZTGtKZ01CQkRBTkJnc3IKQmdFRUFZTGtKZ01CQnpBTkJnc3JCZ0VFQVlMa0pnTUJDREFOQmdzckJnRUVBWUxrSmdNQkNUQU5CZ3NyQmdFRQpBWUxrSmdNQkNqQU5CZ3NyQmdFRUFZTGtKZ01CQ3pBTkJnc3JCZ0VFQVlMa0pnTUJEREFOQmdzckJnRUVBWUxrCkpnTUJEVEFOQmdzckJnRUVBWUxrSmdNQkRqQ0I4QVlMS3dZQkJBR0M1Q1lEQVJRd2dlQXdRUVlJS3dZQkJRVUgKQWdFV05XaDBkSEJ6T2k4dmNIVmlMbU5oY21sc2JHOXVabVZrYzJWeWRpNWpiMjB2UTJWeWRHbG1hV05oZEdWUQpiMnhwWTNrdWNHUm1NSUdhQmdnckJnRUZCUWNDQWpDQmpScUJpbFJvYVhNZ1kyVnlkR2xtYVdOaGRHVWdhR0Z6CklHSmxaVzRnYVhOemRXVmtJR2x1SUdGalkyOXlaR0Z1WTJVZ2QybDBhQ0IwYUdVZ1EyRnlhV3hzYjI0Z1JtVmsKWlhKaGJDQlRaWEoyYVdObGN5QkpibU11SUVObGNuUnBabWxqWVhSbElGQnZiR2xqZVNCaGN5Qm1iM1Z1WkNCcApiaUIwYUdVZ1ExQlRjRzlwYm5SbGNpQm1hV1ZzWkRDQjhBWUxLd1lCQkFHQzVDWURBUlV3Z2VBd1FRWUlLd1lCCkJRVUhBZ0VXTldoMGRIQnpPaTh2Y0hWaUxtTmhjbWxzYkc5dVptVmtjMlZ5ZGk1amIyMHZRMlZ5ZEdsbWFXTmgKZEdWUWIyeHBZM2t1Y0dSbU1JR2FCZ2dyQmdFRkJRY0NBakNCalJxQmlsUm9hWE1nWTJWeWRHbG1hV05oZEdVZwphR0Z6SUdKbFpXNGdhWE56ZFdWa0lHbHVJR0ZqWTI5eVpHRnVZMlVnZDJsMGFDQjBhR1VnUTJGeWFXeHNiMjRnClJtVmtaWEpoYkNCVFpYSjJhV05sY3lCSmJtTXVJRU5sY25ScFptbGpZWFJsSUZCdmJHbGplU0JoY3lCbWIzVnUKWkNCcGJpQjBhR1VnUTFCVGNHOXBiblJsY2lCbWFXVnNaRENCOEFZTEt3WUJCQUdDNUNZREFSWXdnZUF3UVFZSQpLd1lCQlFVSEFnRVdOV2gwZEhCek9pOHZjSFZpTG1OaGNtbHNiRzl1Wm1Wa2MyVnlkaTVqYjIwdlEyVnlkR2xtCmFXTmhkR1ZRYjJ4cFkza3VjR1JtTUlHYUJnZ3JCZ0VGQlFjQ0FqQ0JqUnFCaWxSb2FYTWdZMlZ5ZEdsbWFXTmgKZEdVZ2FHRnpJR0psWlc0Z2FYTnpkV1ZrSUdsdUlHRmpZMjl5WkdGdVkyVWdkMmwwYUNCMGFHVWdRMkZ5YVd4cwpiMjRnUm1Wa1pYSmhiQ0JUWlhKMmFXTmxjeUJKYm1NdUlFTmxjblJwWm1sallYUmxJRkJ2YkdsamVTQmhjeUJtCmIzVnVaQ0JwYmlCMGFHVWdRMUJUY0c5cGJuUmxjaUJtYVdWc1pEQk9CZ2dyQmdFRkJRY0JBUVJDTUVBd1BnWUkKS3dZQkJRVUhNQUtHTW1oMGRIQTZMeTl3ZFdJdVkyRnlhV3hzYjI1bVpXUnpaWEoyTG1OdmJTOURRV05sY25SegpMME5HVTFKRFFURXVjRGRqTUQ4R0ExVWRId1E0TURZd05LQXlvRENHTG1oMGRIQTZMeTl3ZFdJdVkyRnlhV3hzCmIyNW1aV1J6WlhKMkxtTnZiUzlEVWt3dlEwWlRVa05CTVM1amNtd3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnSUIKQUlsd1dROEM4OEZpRC9lVVIwd1lkL240MHVGSXhqOGpGa29UbHdmMHhRQWdCUVdkMTVnOVRlSU1pRGxYa3pZSAoyOEt0RWNWNjl2Z2JrWDF4TER4OTVtR2FyZTgyWVFFOW1hMmdPWVVkSUpGaEEvZTBQbkdHRkpLWE56L1I5ZHowCitvcWZsWHNIRi9DRm1LdUFJZG1WZGRGSUJ6b0hJRkEzWFBwUzg0cGFoYnE3RGtCVW8yN1puTmtRakhlVEdSRVYKaXRZSElkNnIwZzlHd3dpR21wcnNuTlJEeFRCU1VNL2JiRlBkYldSRngzdzBsK3kvWUN0RFJEVlZnUzVOSXhjegpuMnp6YjZxOGJubnd6OHpTV0NFWndua0liSGtVWW1taWRzc2VGYytPS09NZ3U4TitlYVRicTFLSEtZVUIrZFhCClZ1WjNBVk0wQnJkWno5ZEl5UnRja1N0cUpLZDJPSE10NmQ0M3hQa2F0c3VEVU8wbXNsRTdQVVhFekQwTCtiYXAKaHFBa2hvMU01Y1I1bklFYTg2TFRYOGNaOGJLcU1sU1U4U3A5cEtYY2JKUDhDc2dxTUczUkNQZStKSEw0R25UZwpTSmswZ3NCUDI4b3pnRkhkM0tCTTV0aGVLK3E0WG5NV0o1NUpPRWZ3bktpT1U2Qk9tbERTeHVtVlpQUFVCWkd0CjAvUG5NcitWY0M0aGhKNjlBK0xxbUdNV2RBUkJjQms0Yy9JSUZMS3RHc2JRNytPWXlzUCt5Q2haZGFSc3d0cGUKcU4vRW5hYjFDZ3FTNWwreEFCYVUwa1BkVlFjY2xaNTRoT25zbU5YY2JGc3lrWDVhMklVQVFsTXF6UjYzL0FGdAppTlhyOGlIbTFqM1RPamVxSE1IQWtTMTdCN285dUxQWXV5ZnNVVCthR0prRgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  1-Carillon_Federal_Services_PIVI_CA2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUo3ekNDQjllZ0F3SUJBZ0lHQmtuV0ZEdXZNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1JR0xNUXN3Q1FZRFZRUUcKRXdKVlV6RW5NQ1VHQTFVRUNoTWVRMkZ5YVd4c2IyNGdSbVZrWlhKaGJDQlRaWEoyYVdObGN5QkpibU11TVNJdwpJQVlEVlFRTEV4bERaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwYVdWek1TOHdMUVlEVlFRREV5WkRZWEpwCmJHeHZiaUJHWldSbGNtRnNJRk5sY25acFkyVnpJRTVHU1NCU2IyOTBJRU5CTVRBZUZ3MHhOakEwTWpreE5EVTAKTXpOYUZ3MHlPREEwTXpBeE5EVTBNek5hTUlHSU1Rc3dDUVlEVlFRR0V3SlZVekVuTUNVR0ExVUVDaE1lUTJGeQphV3hzYjI0Z1JtVmtaWEpoYkNCVFpYSjJhV05sY3lCSmJtTXVNU0l3SUFZRFZRUUxFeGxEWlhKMGFXWnBZMkYwCmFXOXVJRUYxZEdodmNtbDBhV1Z6TVN3d0tnWURWUVFERXlORFlYSnBiR3h2YmlCR1pXUmxjbUZzSUZObGNuWnAKWTJWeklGQkpWaTFKSUVOQk1qQ0NBaUl3RFFZSktvWklodmNOQVFFQkJRQURnZ0lQQURDQ0Fnb0NnZ0lCQUtQWgpWeWtWNm1iWVZrOUM2UWJmVmdOemdVK1ozMTlIdE40TnZ6K2oxQWZBdFRTNWhGdFpWaC9ITHFTK0prVGN4THhpCmttc3ZkYmdlWUlLUDNqbDdSenJjSVpJdzhEWHFvZWxWYk5UTU91WmYwL3kwOWdGK3JvRzliUjdNT1pPNjhlNXUKVlQ5UFdZNE00YVJBZEtOazJtcUh6OWxaNGZpNkZhTnVyWTJFamJvQzZDbURSRTNmcVhZcTYvM0RoR2RxQWk5bApKSUpDbTQrVVVKRVNJRXAyOTJPb0lsZE5OSUdNaVVScEVISEZ1RjFwU1pCajlRdnMyREhXNnhVYTNCZlpabjR0CnZXVXZpZnZHUkFma3plM0JMY1JyNHlrem5Fa1ZnbGtlUnJFVDBzcXk3Q2tEb0NBYlJIS04zdjVLaEdIRUk0M0gKMDUzSmM0NUI2Z3dtb0dvZHhJUjRjanppTytFQ3hkN3g3N3IwejVWdU1jQ0dpNjRldzlSajZaU3JkeTNFZE9YRgprVjludlhjQzNxSHJWVGg2NEhwZTh3b2psa3lxVnBpZnBLWjdDamFHODViSjZLaE1nQ05McjhBK2I0SXhpd2VLCmVCTHFBWFYxa1h5VFR2OXZuQWVacTR2Z2l5aWNZWGN5dDRnV0xQM3liZUVkUjBSTmlHVURzcm9iN3JKK0xadzYKK0FYNkxTcUNwWGQrOE1zV25aanNTaDl3MDdTN1B4WVlmVGxTTlR1ZHU3YzErTkthZmV4citSdWIxQVdodEtidQpwSW50TUVZOXlDZU1OYXI4cVpGaGR1ekN0eG13RWJnVTFkS0lxWC9IUlFzWWhPSGFUdUxYaFoybmxnb1BtdlViClpQMVNIT1Y1Q3ZsR2IvbW5TTFgzNFloZ096cXpXRCtEZ3VNcUx4cFBBZ01CQUFHamdnUllNSUlFVkRBZEJnTlYKSFE0RUZnUVVDZVI0VmtFQ3BHc2cycFBvUmZZeDRVekV4UHd3SHdZRFZSMGpCQmd3Rm9BVTQwYkM2NzJNalJHVAphZnQ5NnJURFdYNjByTzB3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFPQmdOVkhROEJBZjhFQkFNQ0FjWXdnZ05lCkJnTlZIU0FFZ2dOVk1JSURVVEFOQmdzckJnRUVBWUxrSmdNQkF6QU5CZ3NyQmdFRUFZTGtKZ01CQkRBTkJnc3IKQmdFRUFZTGtKZ01CQnpBTkJnc3JCZ0VFQVlMa0pnTUJDREFOQmdzckJnRUVBWUxrSmdNQkNUQU5CZ3NyQmdFRQpBWUxrSmdNQkNqQU5CZ3NyQmdFRUFZTGtKZ01CQ3pBTkJnc3JCZ0VFQVlMa0pnTUJERENCOEFZTEt3WUJCQUdDCjVDWURBUlF3Z2VBd1FRWUlLd1lCQlFVSEFnRVdOV2gwZEhCek9pOHZjSFZpTG1OaGNtbHNiRzl1Wm1Wa2MyVnkKZGk1amIyMHZRMlZ5ZEdsbWFXTmhkR1ZRYjJ4cFkza3VjR1JtTUlHYUJnZ3JCZ0VGQlFjQ0FqQ0JqUnFCaWxSbwphWE1nWTJWeWRHbG1hV05oZEdVZ2FHRnpJR0psWlc0Z2FYTnpkV1ZrSUdsdUlHRmpZMjl5WkdGdVkyVWdkMmwwCmFDQjBhR1VnUTJGeWFXeHNiMjRnUm1Wa1pYSmhiQ0JUWlhKMmFXTmxjeUJKYm1NdUlFTmxjblJwWm1sallYUmwKSUZCdmJHbGplU0JoY3lCbWIzVnVaQ0JwYmlCMGFHVWdRMUJUY0c5cGJuUmxjaUJtYVdWc1pEQ0I4QVlMS3dZQgpCQUdDNUNZREFSVXdnZUF3UVFZSUt3WUJCUVVIQWdFV05XaDBkSEJ6T2k4dmNIVmlMbU5oY21sc2JHOXVabVZrCmMyVnlkaTVqYjIwdlEyVnlkR2xtYVdOaGRHVlFiMnhwWTNrdWNHUm1NSUdhQmdnckJnRUZCUWNDQWpDQmpScUIKaWxSb2FYTWdZMlZ5ZEdsbWFXTmhkR1VnYUdGeklHSmxaVzRnYVhOemRXVmtJR2x1SUdGalkyOXlaR0Z1WTJVZwpkMmwwYUNCMGFHVWdRMkZ5YVd4c2IyNGdSbVZrWlhKaGJDQlRaWEoyYVdObGN5QkpibU11SUVObGNuUnBabWxqCllYUmxJRkJ2YkdsamVTQmhjeUJtYjNWdVpDQnBiaUIwYUdVZ1ExQlRjRzlwYm5SbGNpQm1hV1ZzWkRDQjhBWUwKS3dZQkJBR0M1Q1lEQVJZd2dlQXdRUVlJS3dZQkJRVUhBZ0VXTldoMGRIQnpPaTh2Y0hWaUxtTmhjbWxzYkc5dQpabVZrYzJWeWRpNWpiMjB2UTJWeWRHbG1hV05oZEdWUWIyeHBZM2t1Y0dSbU1JR2FCZ2dyQmdFRkJRY0NBakNCCmpScUJpbFJvYVhNZ1kyVnlkR2xtYVdOaGRHVWdhR0Z6SUdKbFpXNGdhWE56ZFdWa0lHbHVJR0ZqWTI5eVpHRnUKWTJVZ2QybDBhQ0IwYUdVZ1EyRnlhV3hzYjI0Z1JtVmtaWEpoYkNCVFpYSjJhV05sY3lCSmJtTXVJRU5sY25ScApabWxqWVhSbElGQnZiR2xqZVNCaGN5Qm1iM1Z1WkNCcGJpQjBhR1VnUTFCVGNHOXBiblJsY2lCbWFXVnNaREJPCkJnZ3JCZ0VGQlFjQkFRUkNNRUF3UGdZSUt3WUJCUVVITUFLR01taDBkSEE2THk5d2RXSXVZMkZ5YVd4c2IyNW0KWldSelpYSjJMbU52YlM5RFFXTmxjblJ6TDBOR1UxSkRRVEV1Y0Rkak1EOEdBMVVkSHdRNE1EWXdOS0F5b0RDRwpMbWgwZEhBNkx5OXdkV0l1WTJGeWFXeHNiMjVtWldSelpYSjJMbU52YlM5RFVrd3ZRMFpUVWtOQk1TNWpjbXd3CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFHVzVsZ2NlT2hLbmZPeFRJclNheFA3MkpuRm9Uc2UxVTJ3NzN0ZFYKRVNGeXNZQTM0c3QwNDZ1UXhmbTZmdldhd1pDbEY3Q0lTMzVFWW11N2t4MnJrSjFqRmh2ZEpiQm5ZQXZEWDA2WAoyaWtEb1Z1ZEhBc1FxdUlPdDBNK2wzUDZ4cko5d1lXc3ZWbE9HNmw0VmQwWng4S1dmYlZ6STFSSWlQcytFOU83CjRsNnNDMnJxVnBUeTdLZ0RxYVVVSEZZTGI5NTU5R01oUzQyL2NwYzk0eDlsMnJaenhPZUhLSm8xNGJ0N2VmNmsKTW1QV1pTU3MrVjU0MDQzV29QU1ZpMGlGcXNPcTBRMFBDYmhKQlpGaDA0L0I1R0x1dHdrMkkxS3l5R3dyS1JURwpnWnRrbElYazV5U1NhdTExNG5CWXI1UzdraWxWaXFJbm5hUi93NGFEaUhmUFV5QTVVTGEwRDB1MzJOYXFTRjBmCkNrelpzVUIyYk1mT3l0bzVQQ29wK2tXdDRVTkUrejRwM2VHQndLYzl6VzRISllNYnVvNThmRjVXSG5PbHZ5YmkKMjl6eFl6c1BKVDhjeTR5RW92WTRJaG9ncEpoL1UyKzJTMGdYeE1HNlphNVpNVUkya0M5bjhmcDhoS3JpclVFYQp6aGZhdjRHNmtDUVZ2djhXd04vNDI4ZHYrUjdTd0t5bXVIQk1tZFQrdEVielRNeXVhc2RCSkczaEd1Sm5FRkFBCmtUOG1obHgzdDJtRnZGa0dHY0lNTGE2VVRseWE1cFAzckJqQ3dsN2tkV2VzWkpNbTRHamlKV0duYmZnbVlOaWwKT2dkVEplY2dvUHQ2WVJjV1ZSN3kraWMzTHdUTHJjaTdMaFJ1YXRHRys2NkxwWEZhb2pRQ2Vhc1ZXMVVkUnAyOQpuNWx5Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-carillon-federal-services-trust-chain-2
  namespace: default
data:
  0-Carillon_PKI_Services_G2_Root_CA_2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGMmpDQ0E4S2dBd0lCQWdJR1pMOHdKWkQzTUEwR0NTcUdTSWIzRFFFQkN3VUFNSUdMTVFzd0NRWURWUVFHDQpFd0pEUVRFck1Da0dBMVVFQ2hNaVEyRnlhV3hzYjI0Z1NXNW1iM0p0WVhScGIyNGdVMlZqZFhKcGRIa2dTVzVqDQpMakVpTUNBR0ExVUVDeE1aUTJWeWRHbG1hV05oZEdsdmJpQkJkWFJvYjNKcGRHbGxjekVyTUNrR0ExVUVBeE1pDQpRMkZ5YVd4c2IyNGdVRXRKSUZObGNuWnBZMlZ6SUVjeUlGSnZiM1FnUTBFZ01qQWVGdzB5TURBeE1qQXhPVFV3DQpOREphRncwME1EQXhNakF4T1RVd05ESmFNSUdMTVFzd0NRWURWUVFHRXdKRFFURXJNQ2tHQTFVRUNoTWlRMkZ5DQphV3hzYjI0Z1NXNW1iM0p0WVhScGIyNGdVMlZqZFhKcGRIa2dTVzVqTGpFaU1DQUdBMVVFQ3hNWlEyVnlkR2xtDQphV05oZEdsdmJpQkJkWFJvYjNKcGRHbGxjekVyTUNrR0ExVUVBeE1pUTJGeWFXeHNiMjRnVUV0SklGTmxjblpwDQpZMlZ6SUVjeUlGSnZiM1FnUTBFZ01qQ0NBaUl3RFFZSktvWklodmNOQVFFQkJRQURnZ0lQQURDQ0Fnb0NnZ0lCDQpBTExvMXF3TFVkaXZpcVJXZGtOYm54WVlITjhERzZ1aWZxTGRtRmtrN3oxbjkyc0hEWVFBVUZaVCtnYmRLUGNtDQpSUjRkKzhKRmU2SUZnSDF0OExJbi91bC9FZmV0Rjk0QXFvRW1vVEZJNlhMb24vVVh5aEt5dGpyN081UEZYYkNTDQpMUzFad0l3YzFQaEFXcER0TzgyOXllSHhRQWF2bVVJVzJZS0c3U0tHbFJvL0JsSFdsRVpXZGVXTldYUHlKRGlIDQpMWStPajdWMmp3UmRGL2pGbEVlUWdwNGpXRVptNmZsaWlzaktla0hCWG5iWGl3U3o4eVRaZ05OdlM4YW5EVVphDQppMTg2NjNpS0hRWHBNTUQrbFM3ajFZNXFTNUFCTExmeFBWY0I2Q1VHZDU3Y2c5U0xoMVlKOG9qNjF0UzFoSVBrDQp4ZG0zSWFjS21rQkhqOHJpQ3F1aFY5UlhsWXgwOW1GbXBUeGpmeWJLRGR1bXlWRjNsNHkxNXFjQ0RGb3E3VkRwDQpQL3NTaEE0b0I1RE43WW5jOTd6a2p3UTVaSTlWbHpBdWkvVUJBdlVpRTliNHY5SnltOURRZ3JTbFRVU1hhU1UxDQpqdkwreFBIRVpBcHlXM3gxRFlLUGRSem0vV0wyczFiN0M4S2JRa3VXYmJiNjJEcitGSlBpLy9uWXh5NDJEdE5GDQp3VzUrT0lBMXcyS3BNOU9LT3E0bUd3OVNrN2xieUVmdEJKYXplQWI5MTdCNDN2N2Rmd0VKc0QzMXBHK2NEQUtJDQpJNDZsNm1tM3QwRDhZZE5HZjVuVXcwbU1DWFowNUE3MHNzeHFOZGdTWHg4RDc0UTdOOVN1ay95UGhqS203VUh6DQpQcHY3a0RxWGlJVVhVbldRL3BScmZnS1NicnVGUnZmRmd1VnQzZUEvL0tYZEFnTUJBQUdqUWpCQU1CMEdBMVVkDQpEZ1FXQkJUK0FSZW1paTU2Q3R1WjdnOUxsSU1FaXR5UmtUQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkDQpEd0VCL3dRRUF3SUJ4akFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBUDFLQ2N5ZWpzZUVwaWpwWjJtSTAxdnpkDQpGMG9kT3ROSXpOdzB4eTV3ZGFXakZvclpYS2RZV21ubFBHY29Pb3FadjAvTENsQzZXTGc5MjB1TFlSSU02SXFkDQpWTlRMbjQrakNHdFNNb2hwc0FDQjFteC9vMEpYQ2dDaFMzM0dDeTVBQ1MvVENpWVlVMHczaHlDNjh4dE9jTWJHDQpqdE0yU0t5T2ZjYU1MZTRSdVYwSXFoV0RNdnU1Vm9lcHBGcDU0RXo2bVlRMWxPbGFrenVITldDVXBRYWp0dGFUDQptN1UyRzNadW1qdlYzcjZVQXBMUnNrWGRWUFUxU2tVT2dkM0hLbFY5bmQrZkUyQmJNTmRreW44WXlMNVNhWXllDQozektaM3gvY1kyY05mNGRqbFBxS3h3UmdkTmRLU2xkMm8zNVNxWkU0cWw2UTEyZ2UwZyttRVpkMXBweW5JWFNHDQpiSU1Ua2JoS25sYm9pcXJUb0t6R2l5c2haSWxHYzFOSEVraFVMeFdFN0wrSXNPNjdYeWpqT083ejBRbmJBa2hvDQp1di9sS0NWbmNwQmNJT0l0emhxVlFSZFN1by92VG43TVlQMnNCZlVReG11L1dJcGZLLzEyMTB6cDNhemZpT2FsDQpNWENjdzgrYWZjcm1pMVZuMVhENE8xaHJzb0J5MXA4NDdmTXNjTkEweW1hQWJqd1RNOHRTWit1cmxuaGdJK2p0DQpSaFdCdlZTa3dRbyttTlk3SlBlK3FqRU5qT2pGWEtEMVdtUHNrSzZTMzI0ZkFEbVh6K2RRa0l6ZlJJMVIvUnlEDQp2Y2w4UDY5cXFGK003ZEgyWDhVMTF6cnpEWnRmL2RTUWRrQnc0ZnU2Szdra2RjVzVqRDZ3ZGl5WDU2NXhFa3NSDQp5K29QQzJBS21VYnVwWnE5REJjPQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
  1-Carillon_PKI_Services_CA_2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUthekNDQ0ZPZ0F3SUJBZ0lHRFBZY0FOdTBNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1JR0xNUXN3Q1FZRFZRUUcKRXdKRFFURXJNQ2tHQTFVRUNoTWlRMkZ5YVd4c2IyNGdTVzVtYjNKdFlYUnBiMjRnVTJWamRYSnBkSGtnU1c1agpMakVpTUNBR0ExVUVDeE1aUTJWeWRHbG1hV05oZEdsdmJpQkJkWFJvYjNKcGRHbGxjekVyTUNrR0ExVUVBeE1pClEyRnlhV3hzYjI0Z1VFdEpJRk5sY25acFkyVnpJRWN5SUZKdmIzUWdRMEVnTWpBZUZ3MHlNVEEwTWpBeE5qQTUKTXpaYUZ3MHpNREF4TWpBeE5qQTVNelphTUlHRE1Rc3dDUVlEVlFRR0V3SkRRVEVyTUNrR0ExVUVDaE1pUTJGeQphV3hzYjI0Z1NXNW1iM0p0WVhScGIyNGdVMlZqZFhKcGRIa2dTVzVqTGpFaU1DQUdBMVVFQ3hNWlEyVnlkR2xtCmFXTmhkR2x2YmlCQmRYUm9iM0pwZEdsbGN6RWpNQ0VHQTFVRUF4TWFRMkZ5YVd4c2IyNGdVRXRKSUZObGNuWnAKWTJWeklFTkJJREl3Z2dJaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRQ2RjNGJZYzRubwpOWjVGSDRSZ3lGcnFTZHRzSTRUcWRrbXZ1aTR4Wjd3aVhOSmZRS2xENG4vVE1MY2ZEd0NudkZsRFFUdnpLV1ZJCmZ5WER0OSt2MFhrS3doUVg3ZzZTeThaWTg5eFRKWmNMZVE3aXdRWGhkZUJRMGpuQ2xiOWtzdEpxT2pGNUxLdkwKOHMzcHQrT3VzeUMvRllMVFU2ayt0OUw2bGpFbTBtWGR5RTU3ME4wekpyMlpvWGFDWTNGSWhWQU4ybStEem5NagpYRytYcElEL3haa3RRbnJncDBrakZCc0xhTUt0T1JzelhEZU9EbnBsNU45YXBlU2FYMjIwUVhBNHg4OFVBMFlGCkhVVFdTRGd2T25qS2FmWW9WSlJ2UmJqT3dJdEdnSmYzZGpiN21xcDFTZFF0Q0hYQTltcWZ4ZmdPNTJETGt3UWgKUUVzTEdud3dvZm1JY3c5dlZ1OE9DaHhHVFNPUDN6ZXRTOEoxUVN6eUdkVThXZ052Y3UzSFNyTktjWHBMVkdvcApjcXN5RENxSVU3a3pPK1QzbGhGdEpOMm1VaDdBU05XdlpxNGpXNHJ1aEZ1cVJEbWR4VUY0K2o1SHdvUlZQcHhUCmZtWDV3eS9GcjdCcTZjclZGNUR6enA1azFuOWM3M0NmYUxyQXVWRW1RUG5jWTVycGRYTHhPT2FHWCtnTXRrcFoKVTFrRnR1SnErV1ZIYklySjg0RHV3cGxjTEhFNFZCeXFwek83QmNzSTltcDIyeXlxMTZvdkM4aHdhVkFpdmtUNAoxSHUvMFdzUWI0TjF4ODBFeUY1ZkUzQ1Y5akNNUllKdHR0N1RERTdQOGZhMW5VVVVBK0RBQ1VoYVV6dUFzazE2CnlLY3lzU2lqQ0hFZDF0SlUybHpIdzZ1N25sVnJQcG90b1FJREFRQUJvNElFMlRDQ0JOVXdIUVlEVlIwT0JCWUUKRkowK3gyb0lLbEhBQzdXeS9WUTkrY0xlZDArVU1COEdBMVVkSXdRWU1CYUFGUDRCRjZhS0xub0syNW51RDB1VQpnd1NLM0pHUk1CSUdBMVVkRXdFQi93UUlNQVlCQWY4Q0FRQXdEZ1lEVlIwUEFRSC9CQVFEQWdIR01JSUQ2QVlEClZSMGdCSUlEM3pDQ0E5c3dEUVlMS3dZQkJBR0J3MTREQVFNd0RRWUxLd1lCQkFHQncxNERBUVF3RFFZTEt3WUIKQkFHQncxNERBUVV3RFFZTEt3WUJCQUdCdzE0REFRWXdEUVlMS3dZQkJBR0J3MTREQVFjd0RRWUxLd1lCQkFHQgp3MTREQVFnd0RRWUxLd1lCQkFHQncxNERBUkV3RFFZTEt3WUJCQUdCdzE0REFSSXdEUVlMS3dZQkJBR0J3MTRECkFRa3dEUVlMS3dZQkJBR0J3MTREQVFvd0RRWUxLd1lCQkFHQncxNERBUjR3RFFZTEt3WUJCQUdCdzE0REFRc3cKRFFZTEt3WUJCQUdCdzE0REFSOHdEUVlMS3dZQkJBR0J3MTREQVF3d0RRWUxLd1lCQkFHQncxNERBUTB3RFFZTApLd1lCQkFHQncxNERBUTR3RFFZTEt3WUJCQUdCdzE0REFROHdEUVlMS3dZQkJBR0J3MTREQVJBd2dld0dDeXNHCkFRUUJnY05lQXdFVU1JSGNNRGtHQ0NzR0FRVUZCd0lCRmkxb2RIUndjem92TDNCMVlpNWpZWEpwYkd4dmJpNWoKWVM5RFpYSjBhV1pwWTJGMFpWQnZiR2xqZVM1d1pHWXdnWjRHQ0NzR0FRVUZCd0lDTUlHUkdvR09WR2hwY3lCagpaWEowYVdacFkyRjBaU0JvWVhNZ1ltVmxiaUJwYzNOMVpXUWdhVzRnWVdOamIzSmtZVzVqWlNCM2FYUm9JSFJvClpTQkRZWEpwYkd4dmJpQkpibVp2Y20xaGRHbHZiaUJUWldOMWNtbDBlU0JKYm1NdUlFTmxjblJwWm1sallYUmwKSUZCdmJHbGplU0JoY3lCbWIzVnVaQ0JwYmlCMGFHVWdRMUJUY0c5cGJuUmxjaUJtYVdWc1pEQ0I3QVlMS3dZQgpCQUdCdzE0REFSVXdnZHd3T1FZSUt3WUJCUVVIQWdFV0xXaDBkSEJ6T2k4dmNIVmlMbU5oY21sc2JHOXVMbU5oCkwwTmxjblJwWm1sallYUmxVRzlzYVdONUxuQmtaakNCbmdZSUt3WUJCUVVIQWdJd2daRWFnWTVVYUdseklHTmwKY25ScFptbGpZWFJsSUdoaGN5QmlaV1Z1SUdsemMzVmxaQ0JwYmlCaFkyTnZjbVJoYm1ObElIZHBkR2dnZEdobApJRU5oY21sc2JHOXVJRWx1Wm05eWJXRjBhVzl1SUZObFkzVnlhWFI1SUVsdVl5NGdRMlZ5ZEdsbWFXTmhkR1VnClVHOXNhV041SUdGeklHWnZkVzVrSUdsdUlIUm9aU0JEVUZOd2IybHVkR1Z5SUdacFpXeGtNSUhzQmdzckJnRUUKQVlIRFhnTUJGakNCM0RBNUJnZ3JCZ0VGQlFjQ0FSWXRhSFIwY0hNNkx5OXdkV0l1WTJGeWFXeHNiMjR1WTJFdgpRMlZ5ZEdsbWFXTmhkR1ZRYjJ4cFkza3VjR1JtTUlHZUJnZ3JCZ0VGQlFjQ0FqQ0JrUnFCamxSb2FYTWdZMlZ5CmRHbG1hV05oZEdVZ2FHRnpJR0psWlc0Z2FYTnpkV1ZrSUdsdUlHRmpZMjl5WkdGdVkyVWdkMmwwYUNCMGFHVWcKUTJGeWFXeHNiMjRnU1c1bWIzSnRZWFJwYjI0Z1UyVmpkWEpwZEhrZ1NXNWpMaUJEWlhKMGFXWnBZMkYwWlNCUQpiMnhwWTNrZ1lYTWdabTkxYm1RZ2FXNGdkR2hsSUVOUVUzQnZhVzUwWlhJZ1ptbGxiR1F3U0FZSUt3WUJCUVVICkFRRUVQREE2TURnR0NDc0dBUVVGQnpBQ2hpeG9kSFJ3T2k4dmNIVmlMbU5oY21sc2JHOXVMbU5oTDBOQlkyVnkKZEhNdlEwbFRSekpTUTBFeUxuQTNZekE1QmdOVkhSOEVNakF3TUM2Z0xLQXFoaWhvZEhSd09pOHZjSFZpTG1OaApjbWxzYkc5dUxtTmhMME5TVEM5RFNWTkhNbEpEUVRJdVkzSnNNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUNaCnc0L211eWp2L0ZKbnNqVjg4ZXc0dXdWNEpSTFdtSFdwSzU1Zlc5b2JGbnJ2RTFVYWRYY3RsVTNQckYzQWNGRkMKVTZGcnc1TjN3UTk4b3UrRGRKUWg5VkFkZE9wSVBMQ1FFdFliQjUyOU9kclFIdmtXbW8wRjdHb3FNbVNhVFBJRwo4aDNYeUYrUE5pM0NlWFR5M1dBTC9CeStIUjlLMGpObWpIdXYxNWFTeHNJNnd5OW1OcGtFUE9CaWRBZkV6b1Z2Cml1SWUzSUplWDJ6MTZaY2dQQi93RThQRnpSVDJuS1FZSWp0M1hDWmlUU3dpZExWWDg2WG9ld0w0MGc4YTRiWWkKU2FaRy9xSU54b1M2Y1hNTTNpa0dUclFuaXEvL2ZjYU9nRzBnY1JobFhDbllQRzRvM0VaN3VYYjBpZEw2U3FDNgpHQkFjb1FSaDNxZjFiZHVwWWdPN29wMC9TSTlTZDNKQVFZRG9ZcVZiU3lGeVF5TTdBakF1VU90REhycVBma2tOCnhCalQyZlAvbW5xMld4YzcvWEVPQjFSUkZsNENRcEdGVklvbkhBakozaHZiUCthQjZGb2xsbWdZZTZ5QVFkSFEKeTZvNHhPcmJXNS91TFUvRDdEVTVETXlkZlA1clFSUWczL3lsMExaR0ZuQ1FPQzR1a09TZno2b3JGK3lONmZXbQpONGM3QTF2UG9VMVlLQVhLODNuR2xtMER2WUxQM0FUZDE1ZzVHcEhaTGo1WUNMTGlaYWZLRGorbDJHRHNzb3dlCmNRMTN5UWhxU3oxSHk2WXVaUmZmM1JUZUZvSmZHOU53THhUSkxLd0szRldRdlo0ZHp3RE5BTmJ1eDdwd3Vxb1AKVUhIMWsyZFphb2VPUDVDR2dIbE1UWDhUSzdBVEVRQzV6cHNxd1FMTmxBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-department-of-state-trust-chain-1
  namespace: default
data:
  0-Department_of_State_AD_Root_CA_Key-1.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlFRVRDQ0F2bWdBd0lCQWdJRVFObktBVEFOQmdrcWhraUc5dzBCQVFVRkFEQ0JzVEVUTUJFR0NnbVNKb21UDQo4aXhrQVJrV0EzTmlkVEVWTUJNR0NnbVNKb21UOGl4a0FSa1dCWE4wWVhSbE1SWXdGQVlEVlFRRERBMURiMjVtDQphV2QxY21GMGFXOXVNUkV3RHdZRFZRUUREQWhUWlhKMmFXTmxjekVjTUJvR0ExVUVBd3dUVUhWaWJHbGpJRXRsDQplU0JUWlhKMmFXTmxjekVNTUFvR0ExVUVBd3dEUVVsQk1Td3dLZ1lEVlFRRERDTlZMbE11SUVSbGNHRnlkRzFsDQpiblFnYjJZZ1UzUmhkR1VnUVVRZ1VtOXZkQ0JEUVRBZUZ3MHdOREEyTWpNeE56VXdOVFZhRncwek5EQTJNak14DQpPREl3TlRWYU1JR3hNUk13RVFZS0NaSW1pWlB5TEdRQkdSWURjMkoxTVJVd0V3WUtDWkltaVpQeUxHUUJHUllGDQpjM1JoZEdVeEZqQVVCZ05WQkFNTURVTnZibVpwWjNWeVlYUnBiMjR4RVRBUEJnTlZCQU1NQ0ZObGNuWnBZMlZ6DQpNUnd3R2dZRFZRUUREQk5RZFdKc2FXTWdTMlY1SUZObGNuWnBZMlZ6TVF3d0NnWURWUVFEREFOQlNVRXhMREFxDQpCZ05WQkFNTUkxVXVVeTRnUkdWd1lYSjBiV1Z1ZENCdlppQlRkR0YwWlNCQlJDQlNiMjkwSUVOQk1JSUJJakFODQpCZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1VFpmczdFRjJrcmlhOE9YZjBwY0VOa0tLYS9aDQpiNXBWcjZVWmJyVDBwZTErUTRPVmtzbE5sZEx2dmlSTkxxYXpvYlBtU1BWa3R1ekN2bXQ5anBqTTA0T2gxYzZUDQp0M0xxMFlqUDRlWHlhd0JBV0JYbDZMcTlLRkIyQmNGbkFvWXRaTkptWkRLMitGanZmbHFhVXhaU0wvVyt6RW9HDQpqcUIrVkUxRFJPUndEREE0RDFVQnB5TE1jcFg3UmU0cEFzcFhlT1RlK3VCd3kzWlg4OE5vOUVSNTlaN1JNTnF0DQpLYWVyeG13VGZmMFQ0ZmU2enFpYXlpSzk0bmhPQWM4TjIvb0FCZU1wbzNDam9vSmRwWW9mRHlSdVdhYmhwajhEDQpwbGw0ZnE1c0o4d0RPcVVKaDZmOFZ3eUQ2aWNlWWIwMzZEaXJDWVFZbmo0TUVEbk5HNVdJTEZ6TzV3SURBUUFCDQpveTh3TFRBZEJnTlZIUTRFRmdRVWI0UCtnbEJrWlhjKy9kOERtczRwMFM4d3pPd3dEQVlEVlIwVEJBVXdBd0VCDQovekFOQmdrcWhraUc5dzBCQVFVRkFBT0NBUUVBTEFoekFwbjRzWnBiMkdidnIzZ3hqZVpCMlk5UXRKY0VjQkt0DQpkUld2N2R4SnoybXYvQkZndW1HVHNCTzZ5bnozSWh6aVNCb3lFQnFDOUx1cVc1TDlLcTdlSmZIZENubVV2TktqDQpHVk4wNldhVkZpcXlVZndmbjBaL09HenhuQmlyYm00V2FGR3VwS3NxNlMzYjc4SkRid2tvamljMHJ6YVIyVm1WDQpWSnVnV0lEcTVGTXVDa055N1NrNlljQnBaL3B2Ri92V0dlQ1p6b2FOMVlnNk4waUZnQlB5ZkZKYVp2Z3NGSjdkDQpPekdIUEI4dUJWcUREVUdIL1B0aytpY2V1cTVsN25jOXRCREZNVVRibm1NRWdoR1M5TEF5RUZkc2pMbENucG91DQpYQVIwMGY0U29iTERQM0pHQWplZHdOY1JaNFFGVzBWT2cwUXc4RlBQV2lVNWdodFBKQT09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
  1-Department_of_State_PIV_CA2_Key-1.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlJZFRDQ0IxMmdBd0lCQWdJRVViQWtBakFOQmdrcWhraUc5dzBCQVFzRkFEQ0JzVEVUTUJFR0NnbVNKb21UDQo4aXhrQVJrV0EzTmlkVEVWTUJNR0NnbVNKb21UOGl4a0FSa1dCWE4wWVhSbE1SWXdGQVlEVlFRRERBMURiMjVtDQphV2QxY21GMGFXOXVNUkV3RHdZRFZRUUREQWhUWlhKMmFXTmxjekVjTUJvR0ExVUVBd3dUVUhWaWJHbGpJRXRsDQplU0JUWlhKMmFXTmxjekVNTUFvR0ExVUVBd3dEUVVsQk1Td3dLZ1lEVlFRRERDTlZMbE11SUVSbGNHRnlkRzFsDQpiblFnYjJZZ1UzUmhkR1VnUVVRZ1VtOXZkQ0JEUVRBZUZ3MHhOakE0TURNeE5qRXpNalZhRncweU5qQTRNRE14DQpOalF6TWpWYU1JR2lNUXN3Q1FZRFZRUUdFd0pWVXpFWU1CWUdBMVVFQ2hNUFZTNVRMaUJIYjNabGNtNXRaVzUwDQpNUnd3R2dZRFZRUUxFeE5FWlhCaGNuUnRaVzUwSUc5bUlGTjBZWFJsTVF3d0NnWURWUVFMRXdOUVNWWXhJakFnDQpCZ05WQkFzVEdVTmxjblJwWm1sallYUnBiMjRnUVhWMGFHOXlhWFJwWlhNeEtUQW5CZ05WQkFzVElGVXVVeTRnDQpSR1Z3WVhKMGJXVnVkQ0J2WmlCVGRHRjBaU0JRU1ZZZ1EwRXlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DDQpBUThBTUlJQkNnS0NBUUVBdFRaa0ZYV2E4RmdLY01jM0xFQ09nbVdTb0EvbHlVbnZXSEVJbXNNMGpUVmFOUk1tDQpmc3V1UnFsVUpLYzBucFB4dEZRWUdjZ1dObFZqRWhadkNiaUZzdVlnRGVwWGZBSjRRTnVGZlRLTlkrS0ZiRHdhDQpzb09CQUh1WmJyN2djSzVBUXhmbTdPMjVleGQ4RVpuQzFnZW5QeWNxSnNvUm9Ya2x4azdvY2FUMVJYZmF2OTJUDQpvWHdyR2R4UGlwNnR1MVJKbUtDWG1rYmwrYldXbFE4eTRZTU5KdmluU09uRUFDT0ljOWxUakpXcklZUGgwSDl1DQpoZ0JGMHRkN2VRMnZYblllakNCTzZMbzBkbkhRdGlIdTAzUTFrUGg0YWRHZlR1Wm1Lb056K3hsUzRMSENqK1dxDQpRSjE2eFFjZ0pFN3Z6VE9vandvK0w2UmErTjIrNWhnZVU4Sk1nd0lEQVFBQm80SUVvRENDQkp3d0RnWURWUjBQDQpBUUgvQkFRREFnRUdNSUhkQmdOVkhTQUVnZFV3Z2RJd0RBWUtZSVpJQVdVREFnRUdBVEFNQmdwZ2hrZ0JaUU1DDQpBUVlDTUF3R0NtQ0dTQUZsQXdJQkJnTXdEQVlLWUlaSUFXVURBZ0VHQkRBTUJncGdoa2dCWlFNQ0FRWU1NQXdHDQpDbUNHU0FGbEF3SUJBd1l3REFZS1lJWklBV1VEQWdFREJ6QU1CZ3BnaGtnQlpRTUNBUU1JTUF3R0NtQ0dTQUZsDQpBd0lCQXcwd0RBWUtZSVpJQVdVREFnRURFREFNQmdwZ2hrZ0JaUU1DQVFNUk1Bd0dDbUNHU0FGbEF3SUJBeVF3DQpEQVlLWUlaSUFXVURBZ0VESnpBTUJncGdoa2dCWlFNQ0FRTW9NQXdHQ21DR1NBRmxBd0lCQXlrd0VnWURWUjBUDQpBUUgvQkFnd0JnRUIvd0lCQURDQ0FYWUdDQ3NHQVFVRkJ3RUJCSUlCYURDQ0FXUXdnZHdHQ0NzR0FRVUZCekFDDQpob0hQYkdSaGNEb3ZMMk5sY25SeVpYQXVjR3RwTG5OMFlYUmxMbWR2ZGk5amJqMVZMbE11SlRJd1JHVndZWEowDQpiV1Z1ZENVeU1HOW1KVEl3VTNSaGRHVWxNakJCUkNVeU1GSnZiM1FsTWpCRFFTeGpiajFCU1VFc1kyNDlVSFZpDQpiR2xqSlRJd1MyVjVKVEl3VTJWeWRtbGpaWE1zWTI0OVUyVnlkbWxqWlhNc1kyNDlRMjl1Wm1sbmRYSmhkR2x2DQpiaXhrWXoxemRHRjBaU3hrWXoxelluVS9ZMEZEWlhKMGFXWnBZMkYwWlR0aWFXNWhjbmtzWTNKdmMzTkRaWEowDQphV1pwWTJGMFpWQmhhWEk3WW1sdVlYSjVNRVlHQ0NzR0FRVUZCekFDaGpwb2RIUndPaTh2WTNKc2N5NXdhMmt1DQpjM1JoZEdVdVoyOTJMMEZKUVM5RFpYSjBjMGx6YzNWbFpGUnZSRzlUUVVSU2IyOTBRMEV1Y0Rkak1Ec0dDQ3NHDQpBUVVGQnpBQmhpOW9kSFJ3T2k4dmIyTnpjQzV3YTJrdWMzUmhkR1V1WjI5MkwwOURVMUF2Ukc5VFQwTlRVRkpsDQpjM0J2Ym1SbGNqQ0NBZG9HQTFVZEh3U0NBZEV3Z2dITk1JSDdvSUg0b0lIMWhqRm9kSFJ3T2k4dlkzSnNjeTV3DQphMmt1YzNSaGRHVXVaMjkyTDJOeWJITXZSRzlUUVVSUVMwbFNiMjkwUTBFdVkzSnNob0cvYkdSaGNEb3ZMMk5sDQpjblJ5WlhBdWNHdHBMbk4wWVhSbExtZHZkaTlqYmoxVkxsTXVKVEl3UkdWd1lYSjBiV1Z1ZENVeU1HOW1KVEl3DQpVM1JoZEdVbE1qQkJSQ1V5TUZKdmIzUWxNakJEUVN4amJqMUJTVUVzWTI0OVVIVmliR2xqSlRJd1MyVjVKVEl3DQpVMlZ5ZG1salpYTXNZMjQ5VTJWeWRtbGpaWE1zWTI0OVEyOXVabWxuZFhKaGRHbHZiaXhrWXoxemRHRjBaU3hrDQpZejF6WW5VL1kyVnlkR2xtYVdOaGRHVlNaWFp2WTJGMGFXOXVUR2x6ZER0aWFXNWhjbmt3Z2N5Z2djbWdnY2FrDQpnY013Z2NBeEV6QVJCZ29Ka2lhSmsvSXNaQUVaRmdOelluVXhGVEFUQmdvSmtpYUprL0lzWkFFWkZnVnpkR0YwDQpaVEVXTUJRR0ExVUVBd3dOUTI5dVptbG5kWEpoZEdsdmJqRVJNQThHQTFVRUF3d0lVMlZ5ZG1salpYTXhIREFhDQpCZ05WQkFNTUUxQjFZbXhwWXlCTFpYa2dVMlZ5ZG1salpYTXhEREFLQmdOVkJBTU1BMEZKUVRFc01Db0dBMVVFDQpBd3dqVlM1VExpQkVaWEJoY25SdFpXNTBJRzltSUZOMFlYUmxJRUZFSUZKdmIzUWdRMEV4RFRBTEJnTlZCQU1NDQpCRU5TVERFd0h3WURWUjBqQkJnd0ZvQVViNFArZ2xCa1pYYysvZDhEbXM0cDBTOHd6T3d3SFFZRFZSME9CQllFDQpGSXJNYkVOV3cwV2xjOFg5cy9RY2FJTEo2MGtnTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCMHloSEc3YmZlDQpmNXZlaGpwTm1hWm10d2JNYzBJNW85QlJDY1FlZDFrYnNQYStOZ1hyL1M3RWlvR0s2SGhUTkxqR0lJTUo1ajhtDQpjQ0tkUDlUVEptV0d3QjMzTTdmN1EzUklDaStZU3VPMEpMUDVXTDJPcldvTmtwMVlnMkovMEpwMy9KeUloRnhrDQpBaEwxUkZCKzExbEp3ZDVtWjNuVzlnZWd4MEFMZVBxVDV5cXF2dk85T1dSOHd6UWVaSHQ2TC9BcUpxQTB5SFZoDQo4WlZPTExqZXNkWUpVaDcyeXQ0UzUzWnZ2RGJkOWxMUVg0bHNYa04rSmNQLzNRZ1ExT0hCeE8xbzN6aDJSRFFnDQpTZWtYcnZqa1JGYzdDTWNobklGM0FKNTc2ZWFPZFIxNXlpQUcxVXFad0lFMkxLM09KQjBJR3RISk9LY1RPNUR4DQprK3pCNjE2ajhESysNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-department-of-state-trust-chain-2
  namespace: default
data:
  0-Department_of_State_AD_Root_CA_Rekey-2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHZXpDQ0JHT2dBd0lCQWdJRVViQlM1ekFOQmdrcWhraUc5dzBCQVFzRkFEQ0JzVEVUTUJFR0NnbVNKb21UDQo4aXhrQVJrV0EzTmlkVEVWTUJNR0NnbVNKb21UOGl4a0FSa1dCWE4wWVhSbE1SWXdGQVlEVlFRRERBMURiMjVtDQphV2QxY21GMGFXOXVNUkV3RHdZRFZRUUREQWhUWlhKMmFXTmxjekVjTUJvR0ExVUVBd3dUVUhWaWJHbGpJRXRsDQplU0JUWlhKMmFXTmxjekVNTUFvR0ExVUVBd3dEUVVsQk1Td3dLZ1lEVlFRRERDTlZMbE11SUVSbGNHRnlkRzFsDQpiblFnYjJZZ1UzUmhkR1VnUVVRZ1VtOXZkQ0JEUVRBZUZ3MHhOekE0TXpBeE5EQXpNRGhhRncwek56RXlNekF4DQpORE16TURoYU1JR3hNUk13RVFZS0NaSW1pWlB5TEdRQkdSWURjMkoxTVJVd0V3WUtDWkltaVpQeUxHUUJHUllGDQpjM1JoZEdVeEZqQVVCZ05WQkFNTURVTnZibVpwWjNWeVlYUnBiMjR4RVRBUEJnTlZCQU1NQ0ZObGNuWnBZMlZ6DQpNUnd3R2dZRFZRUUREQk5RZFdKc2FXTWdTMlY1SUZObGNuWnBZMlZ6TVF3d0NnWURWUVFEREFOQlNVRXhMREFxDQpCZ05WQkFNTUkxVXVVeTRnUkdWd1lYSjBiV1Z1ZENCdlppQlRkR0YwWlNCQlJDQlNiMjkwSUVOQk1JSUNJakFODQpCZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUExV1Jkd21kaWEzMitwdEdqcThZWDJGMFphbWdqDQptR3lPaktjcnRoMTJuR3lsdkJyY0xONWJEc3djUTBiandQemVDV0hFY2d1SjhHRlBkV2hqZGYrM0dhM2JjZVo0DQpGOGhSMU0ybm9ESmtrcDF2OHlFdTI5bmRkeE9uN1ZwMUNjS053b0V1SjRLeWtkbnNRQVZEM1NLMEVLdk11ZDA4DQp4YmxGYjJvNUJYVUtuL0xZeHlRU2R1NFB5aFdKWTNETTBMaUFucGhueU5ZcHhvZVhFM3Q0MVRHK1Z1d1RLM2dYDQo4ZXliazhtejJSM1hNQ2l2ZkV4ZHYxOVl2WHBQUmphT044cldBSDNZaTYyWDltcERyRkY3TjFaOUhtMDUreU9qDQpYVWdUYXk0TmNjK3hCendHeW9rTUxlUW16eGxqdUdWVlBNZWlRVk4wRXoxUUJsYW5pdFJaektRN1hZQ2VQd2NQDQpnaDUrK0l3N1ovMDBtaTU2RmV5TXdwbVQ5TW5zdnN3UW1zMDFGY2ViN3JsWndXSld0SkgxV2Y5MnVhVTAzaU9tDQpoMmdNa0Z0VllVUDVxdGwxRGk1MGV4UVZBRnZiNHhTNUQ0SmFMTk1RQUpXVWRueURKbkFvZ2ZpbWhQSGZpcjcxDQpIQ0Ric1hkdWJLRThrV1hNbVhaUThJSi9pK2JZK2ZRTnB6Z1EzbmFZQ3M2QWlrZzhHaXpFRWNjUE1qYklWNHo2DQpjaTVNTzFlUU1MUWZTeEhNWUFXMVBrdkJ1TUJxT3V5Tmp5aXhmeER6aHJSVkxmMEZRZUtOYXRlVlEzcHl2NVJaDQozQ252K0hWRWU2dDdFSVRnejlleEF4T1ZnWDE4TGEzZDUzL202Zkg3UzNvZjc0OExraUpjOEZtZS8rVVVRc0JJDQplN0RLdXVES2lkSXRCcWtDQXdFQUFhT0JtRENCbFRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCDQovd1FFQXdJQkJqQlRCZ2dyQmdFRkJRY0JDd1JITUVVd1F3WUlLd1lCQlFVSE1BV0dOMmgwZEhBNkx5OWpjbXh6DQpMbkJyYVM1emRHRjBaUzVuYjNZdlUwbEJMME5sY25SelNYTnpkV1ZrUW5sQlJGSnZiM1JEUVM1d04yTXdIUVlEDQpWUjBPQkJZRUZNd0FhR0dtcFFPVEVBb2JZYmVIR01GRlZ0cUNNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUFvDQp6UStsVjdYWVIrK1VHY1lWR09zMm5HclROM21iY1VzWVdpdDJSMWEyNFYrN0poUXJPbUJlWForVDFOekNFVWMwDQpGZlNFWXI4WDJlUDFYQVYxaWR2enRxRGgwRUo2RWxEVjlVTElTaEFjRWU5c2dMTnhjTnJKZmo0KzZLeldKQ3NsDQpsSC9tQWZmMm1OL3NQb1FzaXhxdytQRUV6VzdQL2VtaEVkTWJHMDJtZzJEZzVMeG1hOE9BZ0pEb2E3OWtpUGFmDQp1QThkT2xFMlFhQWl3dys3RDMrZStaUXlvbElyZVJPdXp3dHZqWDZuVjYvQnZLWnRoeFgxbFU3WG1pSGRoeTNJDQpaeWJGVkR0dENNZDkxZzNHTXVNTUtTUmdhWjd2ZXQzbUdncDdWWDBGZnU4M1lMbFZEOEs0dUVHaFJNVTZtRVVJDQpBNkJlTy8rUVlpQ0trRlBFSmM0ZWYxTkFiNTdvUUtFSlBRVmxWQzVJakZsM2NqcnE1dmVVdjkzbXBPSkFxTWxNDQpVTnR2T1REeEFtRUlIUHkzN2hwTnlDSU13UWtNRytPOG5qVldqc28xRGduVjdYYWgxQ09DSGdFeFNjOVhwdDN2DQovNmp1T2xNRkRudU1sRndRSFZvTDBqUzNZV0FBbmo0VEJnUGowbWdQeFpXU0tzVGRENzRMdGVoZ0pwMGc5YkxUDQpYWXI4c2Rrb3k3c21WbElFRnRwUjE5WjNXK1hkR09JWGlhYjNZbUd2ODF0N3BueFBQeEhZb2JWV2hETlpRQ21pDQorOGNIWnFRazMxa0RlYTl1MHhpS3YyejFhSjhHWTFRSXFGcUdBNGxKWVd5dGhLUTMvNHRIU1pNS2RXS3EyVklTDQpOMEhLVVJJb0VXQURtemhaaXk3cGpTc29rWmRSUzcvcEhybHQ1NnZqcUE9PQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
  1-Department_of_State_AD_HA_CA_Rekey-3.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlLTlRDQ0NCMmdBd0lCQWdJRVViQnArakFOQmdrcWhraUc5dzBCQVFzRkFEQ0JzVEVUTUJFR0NnbVNKb21UDQo4aXhrQVJrV0EzTmlkVEVWTUJNR0NnbVNKb21UOGl4a0FSa1dCWE4wWVhSbE1SWXdGQVlEVlFRRERBMURiMjVtDQphV2QxY21GMGFXOXVNUkV3RHdZRFZRUUREQWhUWlhKMmFXTmxjekVjTUJvR0ExVUVBd3dUVUhWaWJHbGpJRXRsDQplU0JUWlhKMmFXTmxjekVNTUFvR0ExVUVBd3dEUVVsQk1Td3dLZ1lEVlFRRERDTlZMbE11SUVSbGNHRnlkRzFsDQpiblFnYjJZZ1UzUmhkR1VnUVVRZ1VtOXZkQ0JEUVRBZUZ3MHhPREF6TURZeU1USTBOVFJhRncweU9EQXpNRFl5DQpNVFUwTlRSYU1JRzdNUk13RVFZS0NaSW1pWlB5TEdRQkdSWURjMkoxTVJVd0V3WUtDWkltaVpQeUxHUUJHUllGDQpjM1JoZEdVeEZqQVVCZ05WQkFNTURVTnZibVpwWjNWeVlYUnBiMjR4RVRBUEJnTlZCQU1NQ0ZObGNuWnBZMlZ6DQpNUnd3R2dZRFZRUUREQk5RZFdKc2FXTWdTMlY1SUZObGNuWnBZMlZ6TVF3d0NnWURWUVFEREFOQlNVRXhOakEwDQpCZ05WQkFNTUxWVXVVeTRnUkdWd1lYSjBiV1Z1ZENCdlppQlRkR0YwWlNCQlJDQklhV2RvSUVGemMzVnlZVzVqDQpaU0JEUVRDQ0FpSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnSVBBRENDQWdvQ2dnSUJBTEF1V09sajdyZ0F5SFcyDQpkMWZPczRqL3g1VU13TzliRTZnNFd3Y0QrcWxJa0daZTJEWWtleTcxZGJaa0UyZ2NsYzkwMWxyMlRncDc2K2l1DQprcUplQVZucVErNG4zMmZBREw3MHJsK3pjakJnbW1wTzBoclFteVhJWWEzUTZPZytLeHBuRDhmKytJcUlFeExwDQpNT0pkMG9pS3ZPanVPTjJLaXdGNmZYMXdJVlYxTnhLSjFlUDBFM0xidkZYdStwWGFteEp6MzM5Mis3SUplZllMDQo5WTNVeXd1enZHenZoRjFmMmVVTlY5amZyKzgwZUtZVUMrL2dwWHRPZXJJRTN0enZFaXpVU05qTXZqSGREcFRWDQpiM2p2NTFZRlJJOUNUVmVMelVJb2dkQnFocFhkOTlNblpMZkNUd01MR2lublpwUksxd25oWGYrTlhkaFJXd3ZWDQpNN0duenZZODB1aGdHQ0poN2JLeSswUTdhelRodExLaXRpT0RSS2tGRk1wYjEzWGYrK3NWU1Zhb21RaXdnOThsDQpkL3F4dDQ4dzREa0dqMWJpdUVBd2trV3MzR1VwTEhSaUJQdkh6Z0ZyWHpvK0hGUXhwUjBRcnZmVHRDdGZTZnplDQpHUjhHM2tGUWpscGl3STFseTduYTh4NzRKWTVCdVBOVU1YTDcvbEhMM2IrRzNDNS96SUtqMjZTaGgyRjh1djdRDQpEdklMZlovL215cGpMaTJ5Szhia2VDcWM5QVFQRmVJSnErWjZ3dTFlYmdpNjhsR2VCNVdUWnVMMTZqNEF0SFlMDQpSOHl0Y3JzY3J2dmxrenlYUXk4SHJSak1ObzFYZE5jSjhtV1BLNVM2SW4xbk9XL1JxZDFsb0tGazZCM25TL2wvDQpEM0tkZmcza3pnbEFnNGRCRXpUamFMaU8wNDVGQWdNQkFBR2pnZ1JITUlJRVF6QU9CZ05WSFE4QkFmOEVCQU1DDQpBUVl3YXdZRFZSMGdCR1F3WWpBTUJncGdoa2dCWlFNQ0FRWUJNQXdHQ21DR1NBRmxBd0lCQmdJd0RBWUtZSVpJDQpBV1VEQWdFR0F6QU1CZ3BnaGtnQlpRTUNBUVlFTUF3R0NtQ0dTQUZsQXdJQkJnd3dEQVlLWUlaSUFXVURBZ0VHDQpKVEFNQmdwZ2hrZ0JaUU1DQVFZbU1JSUJjZ1lJS3dZQkJRVUhBUUVFZ2dGa01JSUJZRENCMkFZSUt3WUJCUVVIDQpNQUtHZ2N0c1pHRndPaTh2WkdseUxuQnJhUzV6ZEdGMFpTNW5iM1l2WTI0OVZTNVRMaVV5TUVSbGNHRnlkRzFsDQpiblFsTWpCdlppVXlNRk4wWVhSbEpUSXdRVVFsTWpCU2IyOTBKVEl3UTBFc1kyNDlRVWxCTEdOdVBWQjFZbXhwDQpZeVV5TUV0bGVTVXlNRk5sY25acFkyVnpMR051UFZObGNuWnBZMlZ6TEdOdVBVTnZibVpwWjNWeVlYUnBiMjRzDQpaR005YzNSaGRHVXNaR005YzJKMVAyTkJRMlZ5ZEdsbWFXTmhkR1U3WW1sdVlYSjVMR055YjNOelEyVnlkR2xtDQphV05oZEdWUVlXbHlPMkpwYm1GeWVUQkdCZ2dyQmdFRkJRY3dBb1k2YUhSMGNEb3ZMMk55YkhNdWNHdHBMbk4wDQpZWFJsTG1kdmRpOUJTVUV2UTJWeWRITkpjM04xWldSVWIwUnZVMEZFVW05dmRFTkJMbkEzWXpBN0JnZ3JCZ0VGDQpCUWN3QVlZdmFIUjBjRG92TDI5amMzQXVjR3RwTG5OMFlYUmxMbWR2ZGk5UFExTlFMMFJ2VTA5RFUxQlNaWE53DQpiMjVrWlhJd0VnWURWUjBUQVFIL0JBZ3dCZ0VCL3dJQkFEQU1CZ05WSFNRRUJUQURnUUVBTUlJQjZnWURWUjBmDQpCSUlCNFRDQ0FkMHdnZ0VLb0lJQkJxQ0NBUUtHTW1oMGRIQTZMeTlqY214ekxuQnJhUzV6ZEdGMFpTNW5iM1l2DQpZM0pzY3k5RWIxTkJSRkJMU1ZKdmIzUkRRVEV1WTNKc2hvSExiR1JoY0RvdkwyUnBjaTV3YTJrdWMzUmhkR1V1DQpaMjkyTDJOdVBWZHBia052YldKcGJtVmtNU3hqYmoxVkxsTXVKVEl3UkdWd1lYSjBiV1Z1ZENVeU1HOW1KVEl3DQpVM1JoZEdVbE1qQkJSQ1V5TUZKdmIzUWxNakJEUVN4amJqMUJTVUVzWTI0OVVIVmliR2xqSlRJd1MyVjVKVEl3DQpVMlZ5ZG1salpYTXNZMjQ5VTJWeWRtbGpaWE1zWTI0OVEyOXVabWxuZFhKaGRHbHZiaXhrWXoxemRHRjBaU3hrDQpZejF6WW5VL1kyVnlkR2xtYVdOaGRHVlNaWFp2WTJGMGFXOXVUR2x6ZER0aWFXNWhjbmt3Z2N5Z2djbWdnY2FrDQpnY013Z2NBeEV6QVJCZ29Ka2lhSmsvSXNaQUVaRmdOelluVXhGVEFUQmdvSmtpYUprL0lzWkFFWkZnVnpkR0YwDQpaVEVXTUJRR0ExVUVBd3dOUTI5dVptbG5kWEpoZEdsdmJqRVJNQThHQTFVRUF3d0lVMlZ5ZG1salpYTXhIREFhDQpCZ05WQkFNTUUxQjFZbXhwWXlCTFpYa2dVMlZ5ZG1salpYTXhEREFLQmdOVkJBTU1BMEZKUVRFc01Db0dBMVVFDQpBd3dqVlM1VExpQkVaWEJoY25SdFpXNTBJRzltSUZOMFlYUmxJRUZFSUZKdmIzUWdRMEV4RFRBTEJnTlZCQU1NDQpCRU5TVERFd0h3WURWUjBqQkJnd0ZvQVV6QUJvWWFhbEE1TVFDaHRodDRjWXdVVlcyb0l3SFFZRFZSME9CQllFDQpGSVhqS004bGVxWUJqY1Z2L3NWU2NxcWVvMHhPTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFDS3lPZ1hFVERtDQpjc3hzdG1iUFROZXErOGl0am1GdWRRUVdIUDJkcXJUenFUQmRaOXo3SjYwOE4zWXBaZVVwVEMzTGFpSVNrMW5JDQpGTXN2dCtUdkZKdGlCYjNUb0tOQnZPUEsyTThRTTAwNWpBd0E3ODVmdmlnNTN5SkxOVTE1aFk0ZFN0UUc2Z3VnDQovNU1SRFIwREFURmxmQlJPN2ZDYklYU0VOaDRPUWdYeDNTREtCdlVsTjdkZkhHRFk4NWljLzZWRVBJT1hKRjNvDQpBWXc0a3IyOHZGZGMzSGtqM1JqcUQwR1VLZm5SK1F0UVlUVU0yT3BwUk9jNkZ1NklIMWdRWUlZdE8zOGd2dEU5DQpPaFg2SDMzdkpoeXN4T3FyRC9oZEtwZHh1Nk44WEswOVJEQUd3a1FzdEJOenFCVVhiR2ZvTSs5MlA2YnZrQ2lkDQp3a1pyTkd3enVmdWJxNkpaUjdkbmduNzZ2VmllVW9iR0JkdE9nWXd0T1lGa0txZEV5NHVQdVlueW4zS1k4RGZHDQoyRy8rdjhSRjVScTlZejhyVlgwWm94TkdoVXZCaUtCNm8yWEpvWTd5OHFuc29LWlU5NWxSQ2RNUmdkSEZ4MHVyDQpqODVSeEN6Y0tNTlhQb2x5V0RKTmFRUG1oUU02b25BYjV3Q0YzZ3QvYzNrWExIUWRuS3B3dmsrVlJIY0VyQ0FHDQpKa3padnRTRE1DTysvdHF2SXdDWVUxYnU0NFNwLzRoSk5weWZzelovVEttdTJZQWdxcVNaaWhlQ25yOXc1N1BFDQpNUnlNY2ZSL0M3bXcvOWdhYWFiWnR6TElxbHpEZFI3MU05ekFFQmRkUjdrNkcwQzgrL1FaQzhnazFGRTNpOUxJDQp6eXQzLytoUUY3VTFzbHFUWVBDeHhMOVJ1T0RLVWRRaUNBPT0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
  1-Department_of_State_PIV_CA2_Rekey-2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlKNVRDQ0I4MmdBd0lCQWdJRVViQzVmekFOQmdrcWhraUc5dzBCQVFzRkFEQ0JzVEVUTUJFR0NnbVNKb21UDQo4aXhrQVJrV0EzTmlkVEVWTUJNR0NnbVNKb21UOGl4a0FSa1dCWE4wWVhSbE1SWXdGQVlEVlFRRERBMURiMjVtDQphV2QxY21GMGFXOXVNUkV3RHdZRFZRUUREQWhUWlhKMmFXTmxjekVjTUJvR0ExVUVBd3dUVUhWaWJHbGpJRXRsDQplU0JUWlhKMmFXTmxjekVNTUFvR0ExVUVBd3dEUVVsQk1Td3dLZ1lEVlFRRERDTlZMbE11SUVSbGNHRnlkRzFsDQpiblFnYjJZZ1UzUmhkR1VnUVVRZ1VtOXZkQ0JEUVRBZUZ3MHlNREF4TWpReU16TTBNRGhhRncwek1EQXhNalV3DQpNREEwTURoYU1JR2lNUXN3Q1FZRFZRUUdFd0pWVXpFWU1CWUdBMVVFQ2hNUFZTNVRMaUJIYjNabGNtNXRaVzUwDQpNUnd3R2dZRFZRUUxFeE5FWlhCaGNuUnRaVzUwSUc5bUlGTjBZWFJsTVF3d0NnWURWUVFMRXdOUVNWWXhJakFnDQpCZ05WQkFzVEdVTmxjblJwWm1sallYUnBiMjRnUVhWMGFHOXlhWFJwWlhNeEtUQW5CZ05WQkFzVElGVXVVeTRnDQpSR1Z3WVhKMGJXVnVkQ0J2WmlCVGRHRjBaU0JRU1ZZZ1EwRXlNSUlCb2pBTkJna3Foa2lHOXcwQkFRRUZBQU9DDQpBWThBTUlJQmlnS0NBWUVBaXdHWkJUWkxseDZnbFZyME1jUFhja3FkclVTbTh4SjlzM3VCWHN5RlFXUTFnYUlhDQpOMjBTVHU2OFdsZ2JPVlVIWXYyS21IWVZHdHFxL0pyWHZXOUxTYm1uTTU3QlVkN0NNYklvWXhxNm1XbmJTQlhiDQpWNklUZUF5RE12bmFnWlVFS1Rxamp2V0hqSHBLYWQ0OE5qbnFrQlV0cE5CS2lxNGRSTTN2QTFmRm9KVnNLaStHDQpMOE9aRm9GMjFpdnBQendxUWQ4aEQ5Ty9WOHN3MklVUE1WWGxyNmM0Y01kRWduRm1tZWZ1YWVWYTFhL3pLWFVlDQphRVNGaEJGNkNSVXo2aFZyY3VIWTc3UWtBcVNPSWUrWjUwcGdUcjI1aXJRY2FRT0ZwL0pPTXRTb3JWZjZPaUxLDQoveFdidnNWMm9ycU1TeUd2UTUraWZHK05zQUFCZElTeCtDMnpYMkNRbDUrV3ltNmE1TDVvcGFVZ0l6bXRodUtTDQpMRzlsb09qSG1PbjM0WncvMlEvZW1ZRzN0WklLVTBCaXY4NFpWM3cwRE1ETWFGaTJrS2pnaGp2bVpnZGNUaUw1DQpLdmVpYVNGdGdvTkV4VUpJb3VwMTVtRGF0SUlyUXBQM091MEE0UHJWM0g5VHFtVFg2NFZ2endIVGtBbDlMZklzDQpEZWZaekUybjNmYXhqdWl2QWdNQkFBR2pnZ1NRTUlJRWpEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd2djRUdBMVVkDQpJQVNCdVRDQnRqQU1CZ3BnaGtnQlpRTUNBUVlCTUF3R0NtQ0dTQUZsQXdJQkJnSXdEQVlLWUlaSUFXVURBZ0VHDQpBekFNQmdwZ2hrZ0JaUU1DQVFZRU1Bd0dDbUNHU0FGbEF3SUJCZ3d3REFZS1lJWklBV1VEQWdFREJqQU1CZ3BnDQpoa2dCWlFNQ0FRTUhNQXdHQ21DR1NBRmxBd0lCQXdnd0RBWUtZSVpJQVdVREFnRUREVEFNQmdwZ2hrZ0JaUU1DDQpBUU1RTUF3R0NtQ0dTQUZsQXdJQkF4RXdEQVlLWUlaSUFXVURBZ0VESkRBTUJncGdoa2dCWlFNQ0FRTW5NQklHDQpBMVVkRXdFQi93UUlNQVlCQWY4Q0FRQXdnZ0Z5QmdnckJnRUZCUWNCQVFTQ0FXUXdnZ0ZnTUlIWUJnZ3JCZ0VGDQpCUWN3QW9hQnkyeGtZWEE2THk5a2FYSXVjR3RwTG5OMFlYUmxMbWR2ZGk5amJqMVZMbE11SlRJd1JHVndZWEowDQpiV1Z1ZENVeU1HOW1KVEl3VTNSaGRHVWxNakJCUkNVeU1GSnZiM1FsTWpCRFFTeGpiajFCU1VFc1kyNDlVSFZpDQpiR2xqSlRJd1MyVjVKVEl3VTJWeWRtbGpaWE1zWTI0OVUyVnlkbWxqWlhNc1kyNDlRMjl1Wm1sbmRYSmhkR2x2DQpiaXhrWXoxemRHRjBaU3hrWXoxelluVS9ZMEZEWlhKMGFXWnBZMkYwWlR0aWFXNWhjbmtzWTNKdmMzTkRaWEowDQphV1pwWTJGMFpWQmhhWEk3WW1sdVlYSjVNRVlHQ0NzR0FRVUZCekFDaGpwb2RIUndPaTh2WTNKc2N5NXdhMmt1DQpjM1JoZEdVdVoyOTJMMEZKUVM5RFpYSjBjMGx6YzNWbFpGUnZSRzlUUVVSU2IyOTBRMEV1Y0Rkak1Ec0dDQ3NHDQpBUVVGQnpBQmhpOW9kSFJ3T2k4dmIyTnpjQzV3YTJrdWMzUmhkR1V1WjI5MkwwOURVMUF2Ukc5VFQwTlRVRkpsDQpjM0J2Ym1SbGNqQ0NBZW9HQTFVZEh3U0NBZUV3Z2dIZE1JSUJDcUNDQVFhZ2dnRUNoakpvZEhSd09pOHZZM0pzDQpjeTV3YTJrdWMzUmhkR1V1WjI5MkwyTnliSE12Ukc5VFFVUlFTMGxTYjI5MFEwRXhMbU55YklhQnkyeGtZWEE2DQpMeTlrYVhJdWNHdHBMbk4wWVhSbExtZHZkaTlqYmoxWGFXNURiMjFpYVc1bFpERXNZMjQ5VlM1VExpVXlNRVJsDQpjR0Z5ZEcxbGJuUWxNakJ2WmlVeU1GTjBZWFJsSlRJd1FVUWxNakJTYjI5MEpUSXdRMEVzWTI0OVFVbEJMR051DQpQVkIxWW14cFl5VXlNRXRsZVNVeU1GTmxjblpwWTJWekxHTnVQVk5sY25acFkyVnpMR051UFVOdmJtWnBaM1Z5DQpZWFJwYjI0c1pHTTljM1JoZEdVc1pHTTljMkoxUDJObGNuUnBabWxqWVhSbFVtVjJiMk5oZEdsdmJreHBjM1E3DQpZbWx1WVhKNU1JSE1vSUhKb0lIR3BJSERNSUhBTVJNd0VRWUtDWkltaVpQeUxHUUJHUllEYzJKMU1SVXdFd1lLDQpDWkltaVpQeUxHUUJHUllGYzNSaGRHVXhGakFVQmdOVkJBTU1EVU52Ym1acFozVnlZWFJwYjI0eEVUQVBCZ05WDQpCQU1NQ0ZObGNuWnBZMlZ6TVJ3d0dnWURWUVFEREJOUWRXSnNhV01nUzJWNUlGTmxjblpwWTJWek1Rd3dDZ1lEDQpWUVFEREFOQlNVRXhMREFxQmdOVkJBTU1JMVV1VXk0Z1JHVndZWEowYldWdWRDQnZaaUJUZEdGMFpTQkJSQ0JTDQpiMjkwSUVOQk1RMHdDd1lEVlFRRERBUkRVa3d4TUI4R0ExVWRJd1FZTUJhQUZNd0FhR0dtcFFPVEVBb2JZYmVIDQpHTUZGVnRxQ01CMEdBMVVkRGdRV0JCU00xdFJwcWVTRlFUcHFwbDdhVVJvWGpaS0xiREFOQmdrcWhraUc5dzBCDQpBUXNGQUFPQ0FnRUFsUTFYZ25xUWVjRk82U3Uwd2RDdTZHUlBtZFZwWlpQOVFvL1pvNktxNlNXZFd6OXpUNGtkDQo0S1JvT0IvQ0JSd2NDTHJpKzE2b0JDVXdOdTY0ZldadW01bGxWaW4yZSt6dWRvcGF0aFZlalBJZVVGZVprMUp1DQp0am5uTHg5TU5iWU9jSDR1eTBpTTZkcGFOTTV6WnRaaVo0MzdqVXJkME9SSzZkck5jWll1Q0JnenVJYWVXNFBlDQpvdXZyT3lKVGhibkpDVTdKTUpnUUUrTmtsVFNhSE0xRkRKc3NmeEZ5SWg4YVdLNHpmYmZ5TkhpZFk3Rm5rcUV4DQp2eS9GS2g4ZGFuZ3VySisrSEo3UTdOZ2xqeEszWVlDZzI0RFpPNkNrZ21aY0lpNkQvd1hpVUNrbW9UekIySmlBDQpjVjZIRnhQTXZyUjlpYU1OdDYyOGNBSzc2MDlZdmxSMW5scklpc1JhUVRrU1B0UVZEWGFIbllTM1VyTGU1UUw3DQo5ZnJrZFlUbWtNNWo1MldKUTJMOWNmVFE5cnlKMGkwa1hrR3BaYWhpVk9PZlNRTVd3VG12bXF5RHpzY2ZWZVVwDQpwVC9TUWNiZmVtb2dTUHdDbWgrMmNUVUlsWkxTRUd6b25WZFEyR1l6akFrN0g2YlVYNHJUYVlKRmp2aGpURlJhDQpsb2k2SU9kak5jMmd1Q0lFQ0ZqdFBSdFFGQUphd2I3bFBFNldLVXhtajF2UE9FdTc1YXRDc21NSWJMdlpHeXlkDQpuekhmSk0xRlBra0pRZllFaGRNYlZJcDE1YktzTHdtSnRvN3ZMVTNlRFRkNUxnZ2NHRjBCeXhEeVdzcGloWHc4DQpDM1Ztdzd0WFp6WGpyRlJqd3BnQnNMNUM3ZWVCOEJQdnIveSs5dUtBNUM4Qjd6TWNpdEM2WG1nPQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-digicert-federal-ssp-trust-chain-1
  namespace: default
data:
  0-Federal_Common_Policy_CA_G2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGM1RDQ0E4V2dBd0lCQWdJVUllVzVvTXlWYmVKNHlnRXJxUDNGaXBpeisrb3dEUVlKS29aSWh2Y05BUUVNDQpCUUF3WERFTE1Ba0dBMVVFQmhNQ1ZWTXhHREFXQmdOVkJBb1REMVV1VXk0Z1IyOTJaWEp1YldWdWRERU5NQXNHDQpBMVVFQ3hNRVJsQkxTVEVrTUNJR0ExVUVBeE1iUm1Wa1pYSmhiQ0JEYjIxdGIyNGdVRzlzYVdONUlFTkJJRWN5DQpNQjRYRFRJd01UQXhOREV6TXpVeE1sb1hEVFF3TVRBeE5ERXpNelV4TWxvd1hERUxNQWtHQTFVRUJoTUNWVk14DQpHREFXQmdOVkJBb1REMVV1VXk0Z1IyOTJaWEp1YldWdWRERU5NQXNHQTFVRUN4TUVSbEJMU1RFa01DSUdBMVVFDQpBeE1iUm1Wa1pYSmhiQ0JEYjIxdGIyNGdVRzlzYVdONUlFTkJJRWN5TUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGDQpBQU9DQWc4QU1JSUNDZ0tDQWdFQTE5ZlRGekVtSVJnUUtrRnR5Nis5OXNSUmpDVFlCWWg3TGxvUnBDWnM0cmdwDQpCaysvNVA0YVpZZDV2MDFHWUJmT0t5d0dKeUZoNHhrMzMvUTR5QUNvT1QxdVpPbG9OcS9xaGhUMHI5MlVvZ0tmDQo3N241SmdNaHZnL2JUaFZCM2x4eGFoWlFNTTBZcVVoZzFydGFLUktzWG0wQXBsaGFsTlQ2YzNtQTNZRFN0NCs3DQo1aTEwNW9FM0pic0ZqRFk1RHRHTVlCOUpJaHhvYnRXVFNuaEw1RTVIek8wR1ZJOVV2aFdBUFZBaHhtOG9UNHd4DQpTT0lqWi9NeXdYZmxmQnJEa3RadTFQTnNKa2tZSnB2RmdEbVNGdUVQeml2Y09yeXRvUGlQZmdYTXFZL1A3ek80DQpvcExyaDJFVjV5QTRYWUVkb3lBMmRWRDhqbW0rTGs3emdSRmFoLzg0UDJndXhOdFdwWkF0UTlOc2FnNHc0RW10DQpScTgySkxxWlFseXJNYnZMdmhXRmVjRWt5ZkR6d0drRlJJT0JuMUliVWZLVHRONUdXcG5kbDhIQ1VQYlIyaTdoDQpwVjlDRmZrWFRnc0xHVHdNTlYyeFB6MnhUaHJMRHUwanJERyszL2s0MmpCN0tIM1NRc2U3MnlvNk15TkY0NnV1DQptTzd2T1JIbGhPVFZrV3l4b3RCVTMyN1haZnEzQk51cFVETDYrUjRkVUcrcFFBRFNzdFJKNjBnZVBwMElBdFFTDQpIWllkMWlSaVhLcFRMbDBrb2ZCMlkzTGdBRk5kWW1hSHJicmlkMGRsS0lzOVFpb0R3am0rd3JETEFtdVQ0YmpMDQpaZVBoYzNxdDh1YmpoWk4yTmF6KzRZUDUrbmZTUFBDbExpeU0vVVQyZWw3ZVk0bDZPYXFYTUlSZkp4TklId2NDDQpBd0VBQWFPQmxqQ0JrekFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIvd1FFQXdJQkJqQWRCZ05WDQpIUTRFRmdRVTlDZGNxY044Ui9UNnBxZXdXWmVxM1RVbUYrTXdVUVlJS3dZQkJRVUhBUXNFUlRCRE1FRUdDQ3NHDQpBUVVGQnpBRmhqVm9kSFJ3T2k4dmNtVndieTVtY0d0cExtZHZkaTltWTNCallTOWpZVU5sY25SelNYTnpkV1ZrDQpRbmxtWTNCallXY3lMbkEzWXpBTkJna3Foa2lHOXcwQkFRd0ZBQU9DQWdFQUFXUTNNQXp3enIzTzFSU0JrZzA2DQpOQ2o3ZUlMNy9JNWZ3VEJMaHBvTWhFMFhvYW9QVWllMGdxUm8zS08yTWh1QnRhY2p5NTVpaElZODdoU2hHb0tRDQpjYkExZmg3ZTRDbHk1UWtPWStLYlFzbHRrS3pnb2Qyem1QeUMwYkVPWUQyTE8xNDFIeWVEV2RRNmREWER6NmRyDQo4T2JudE9mTXpnZG83dm9kQ011S1U4K3lzVGR4UnhUQ2k2QVZ6M3VxZTVrK09iSllwQzBhWEhOTXkxT25GZ0w2DQpveE1lR01sU2VjVS9RVUFJZjBuY0R1cllGU2N0RndYaXRUQzBDcmNMTzkvQUdIcVRGU0h6VXJJbGJyZ2QvYUdPDQorRTNvM1FvVStUaENQUG51MUsyS1pMRzRweU1xZEJtNHk3clZHUFJpa0xtRmhJdi9iNmIyQ0w4eWlZTDArbUpEDQpjclRWczBQWWZBTHRReE1wU0E4bjA1M2dhamxQd2hHM081amNMOFN6cWxhR1BtR3FwbkVpOWFXQVlISlhUemJqDQp6R1VBYzJ1OCtLdzhYdjRKZmZoVldJeFZLSDROUzVQQ3RnWHd4aWZncm1QaTAvdVUxdzBjcmNsRXNTc3lhN0ZJDQpCVlJUVVJvU3d3ZGEyNXdJSVdQSWtRc1FLMXNuSnhnRXlVelhpMTBNVURSMFdTRHFRQWRoYk9MY21jeWhFRDVoDQpwaFlRbmY4c0Q4RnBvVURqb0xDUGtVL3l0ZlpvcGxtY0JNNFNRNEVqZ2p5azYzdk1xQkRjQ01YVEhjaUZUc1YyDQplK2FSZUx2SXZVNFltYUJRUWwzdkNGajFxTVBJa1JzVGJ5MUZmOGhSRFFHM2tIMHZlZmNWdGNpY3NkVThrVjJNDQplZS94Si9jMGNJSFpXTXcwSG9SWlBibz0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
  1-Symantec_SSP_Intermediate_CA-G4.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHTHpDQ0JCZWdBd0lCQWdJVUppdlI4Q1hJcnpjelJVVm1icWJKNnBSc0xEUXdEUVlKS29aSWh2Y05BUUVNDQpCUUF3WERFTE1Ba0dBMVVFQmhNQ1ZWTXhHREFXQmdOVkJBb1REMVV1VXk0Z1IyOTJaWEp1YldWdWRERU5NQXNHDQpBMVVFQ3hNRVJsQkxTVEVrTUNJR0ExVUVBeE1iUm1Wa1pYSmhiQ0JEYjIxdGIyNGdVRzlzYVdONUlFTkJJRWN5DQpNQjRYRFRJd01URXhPREUwTkRJME1Wb1hEVEkwTVRFeE1qRTBOREkwTVZvd1dERUxNQWtHQTFVRUJoTUNWVk14DQpIVEFiQmdOVkJBb1RGRk41YldGdWRHVmpJRU52Y25CdmNtRjBhVzl1TVNvd0tBWURWUVFERXlGVGVXMWhiblJsDQpZeUJUVTFBZ1NXNTBaWEp0WldScFlYUmxJRU5CSUMwZ1J6UXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCDQpEd0F3Z2dFS0FvSUJBUURmN0FhUnlIenRRTnBRUnlnTkJ1N01pdkt2TkQrZWxtWXVBNm0xQlpVUk9FVXk3WTdCDQpmUW8yWGplMENaS1NIT2RmbVlsbTZHeFRLRlpJempWU0FydGQyd3dPV1Q5dno2K2gyR2pNRS9VZEdDcE9JbUhkDQo5RVhrem9maWdvcEk5UHRZbWRESC82S0ZmSTFsVjZPanJZUEs2cU1VMitIUk9YN214elFiSVZydjlFMGRhU1ZUDQpnelV1RThLMVhYeHJoNGlLZ0wwTlpyYk9VNFNsTG92aE5wbW1RMmJ6NW1XWWl2a3hzcmRNLzRONzJjOTZ0TWdmDQpWUmVNWksyNElBc3BQZlpoNmJsL2xXNzNVU3FDSTNWVUNhT2Q4NTdUR1FtUXpUUmJRTHUvR2ZPdGs1dVM5VHQ1DQpmSjdiQ1gwbWNXOUgrNXlSZHd6ZHI2R1JISjRRNmVxbXowY2JBZ01CQUFHamdnSHJNSUlCNXpBZEJnTlZIUTRFDQpGZ1FVLzh3MDBkdEs0ZUhDQzlMYjY0Qjhjd3gxWDJZd0h3WURWUjBqQkJnd0ZvQVU5Q2RjcWNOOFIvVDZwcWV3DQpXWmVxM1RVbUYrTXdEZ1lEVlIwUEFRSC9CQVFEQWdFR01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d2VRWURWUjBnDQpCSEl3Y0RBTUJncGdoa2dCWlFNQ0FRTUdNQXdHQ21DR1NBRmxBd0lCQXdjd0RBWUtZSVpJQVdVREFnRURDREFNDQpCZ3BnaGtnQlpRTUNBUU1rTUF3R0NtQ0dTQUZsQXdJQkF3MHdEQVlLWUlaSUFXVURBZ0VERURBTUJncGdoa2dCDQpaUU1DQVFNUk1Bd0dDbUNHU0FGbEF3SUJBeWN3V2dZSUt3WUJCUVVIQVFzRVRqQk1NRW9HQ0NzR0FRVUZCekFGDQpoajVvZEhSd09pOHZjM053TFhOcFlTNXplVzFoZFhSb0xtTnZiUzlUVTFBdlEyVnlkSE5mYVhOemRXVmtYMko1DQpYMU5aVFVOVFUxQkRRVWMwTG5BM1l6QVNCZ05WSFNRQkFmOEVDREFHZ0FFQWdRRUFNQTBHQTFVZE5nRUIvd1FEDQpBZ0VBTUZFR0NDc0dBUVVGQndFQkJFVXdRekJCQmdnckJnRUZCUWN3QW9ZMWFIUjBjRG92TDNKbGNHOHVabkJyDQphUzVuYjNZdlptTndZMkV2WTJGRFpYSjBjMGx6YzNWbFpGUnZabU53WTJGbk1pNXdOMk13TndZRFZSMGZCREF3DQpMakFzb0NxZ0tJWW1hSFIwY0RvdkwzSmxjRzh1Wm5CcmFTNW5iM1l2Wm1Od1kyRXZabU53WTJGbk1pNWpjbXd3DQpEUVlKS29aSWh2Y05BUUVNQlFBRGdnSUJBQ1M4aHNaRnZIb1VCRkZtQUd2c3I3NjNndzc4aUVqejl6bzVPRHlpDQp1RWxvQk0xaTlnVU9zR3VqRkJVV01XWXY4OXZaeks4QnR3SlB2SitBa2l6OXpXeU1CeGZNSXRkWlhXTHh3NEFlDQpZUVEzSXI2Y09qWFR5OElLNlpHeWw3M05NM1BTZUoraG1hdk1jUlJYaGlpUjJUdDdJVCtyQ2Q5L1FTQWZ2TGQ1DQo1UHA1NERRRUsvWGZXWEZ1bk9RRE9sMG1uSWM5cS9jWlRUZzdjYlpIbDVjdmlrRkx5eEFGTjk3cFFWcjlXakZRDQoxOTN5WmZvZndTMWtHQUtDSEpmck9zUWkvSS8vK3hvdmNYMGNkWTFEQWU3anNUaEtkZUUwUWV4SEtGSmhibTkrDQpabGVGditISG1sRkZIWXJ4NzAzRnhreldlcTBNTkZJTm1wNzZiT2NldkZ2bzMwQWpPekdmZFh5SEQ5VjdNdXlYDQozN0hwOGZGQUpHU0o5V2VXdVVHU05XaGkrU011K0w3SXlTZFdaby9tNVd6UllMZDdyZk1QcFVidVMzTmU0OWZaDQpJcUdObWpHd1NLYWlGbnRLaW1YYWVYT1dQV3ZRWXhWSUJ0UzRVS0xFdENHRW4yUWlyWk5kOHRqcUJHbFlNTVBtDQpYMStzMFcxV0ZMUUxVV2RkTncrN3Y0ejdyb3g2bGNjWm1KZUlvclpPTmJIK2RMV1g1dDVCU3l5a2VTeEkwTFdrDQpjckl2RUZ3L3NXUkVXZ2djN1lBUXRhSXIrVzRTZ0ZzdDVWR0o0QUFVNmljQ05DZXBVaXF1SGcwNmY3eFdzb1ErDQp5VE5JeUc3WWxpV3FYQ0RHTm91UGZVZkFqcmVkWG1RV250akh4TWM1MWMzUHp0K0Fxc1l4bnJnZ0syS3dOdGc5DQpsMURiDQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
  2-US_Department_of_Transportation_Agency_CA_G4.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGRURDQ0EvaWdBd0lCQWdJUVlha1BQbC8xTXZuK1lnblpNU2VhZ2pBTkJna3Foa2lHOXcwQkFRc0ZBREJZDQpNUXN3Q1FZRFZRUUdFd0pWVXpFZE1Cc0dBMVVFQ2hNVVUzbHRZVzUwWldNZ1EyOXljRzl5WVhScGIyNHhLakFvDQpCZ05WQkFNVElWTjViV0Z1ZEdWaklGTlRVQ0JKYm5SbGNtMWxaR2xoZEdVZ1EwRWdMU0JITkRBZUZ3MHhOREV5DQpNVEV3TURBd01EQmFGdzB5TkRFeE1URXlNelU1TlRsYU1JR01NUXN3Q1FZRFZRUUdFd0pWVXpFWU1CWUdBMVVFDQpDaE1QVlM1VExpQkhiM1psY201dFpXNTBNU293S0FZRFZRUUxFeUZWTGxNdUlFUmxjR0Z5ZEcxbGJuUWdiMllnDQpWSEpoYm5Od2IzSjBZWFJwYjI0eE56QTFCZ05WQkFNVExsVXVVeTRnUkdWd1lYSjBiV1Z1ZENCdlppQlVjbUZ1DQpjM0J2Y25SaGRHbHZiaUJCWjJWdVkza2dRMEVnUnpRd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3DQpnZ0VLQW9JQkFRRFczRlZHZTkxOTBPWGVtcU1nZStYeWVESUl4SVFNUFladUtsNy8xcmh0RDN3OC9PbVlWNTlBDQpVN3BOWUNmRHB4L1ppTlpQNWE3bVlRYjA5N0h1Y1h3bHRrR1BuM2ZtQ09WVXVTd3lJdGErQTZObnNYdjZRVVJjDQpobW1iYUZaSUJxVHdSamdnWGhtbDBWeDdJSXc0S3JMUDg3aGZSSnFEbXdlaVk2L0dvMTY4QlBHOStMSjEzN2JuDQoxdGU4NFBkZzlRc3VRUlgxZmNKV0htS0pQd3ZITzU5c29qY2hkL3ZxTXlBMmk2SWt5TTQzYUYwN1pRbm1tZDF1DQpzVlhza3FGa2F0dTFBTlU5L0VLbE1PRFJtRGJueVE0QUY5dmxldG9CZENWVnVBdjJ2RE11T2JyY1RFTWwvZEkwDQpGTXEyZ2ZSeVFaOW9pWUFyTWo3bHhnbnZPbFlYRlVnakFnTUJBQUdqZ2dHZk1JSUJtekIvQmdnckJnRUZCUWNCDQpBUVJ6TUhFd0p3WUlLd1lCQlFVSE1BR0dHMmgwZEhBNkx5OXpjM0F0YjJOemNDNXplVzFoZFhSb0xtTnZiVEJHDQpCZ2dyQmdFRkJRY3dBb1k2YUhSMGNEb3ZMM056Y0MxaGFXRXVjM2x0WVhWMGFDNWpiMjB2VTFOUUwwTmxjblJ6DQpYMmx6YzNWbFpGOTBiMTlUVTFCRFFVYzBMbkEzWXpBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1FOEdBMVVkDQpJQVJJTUVZd0RBWUtZSVpJQVdVREFnRURCakFNQmdwZ2hrZ0JaUU1DQVFNSE1Bd0dDbUNHU0FGbEF3SUJBdzB3DQpEQVlLWUlaSUFXVURBZ0VERURBTUJncGdoa2dCWlFNQ0FRTVJNRGtHQTFVZEh3UXlNREF3THFBc29DcUdLR2gwDQpkSEE2THk5emMzQXRZM0pzTG5ONWJXRjFkR2d1WTI5dEwxTlRVQzlUVTFCSE5DNWpjbXd3RGdZRFZSMFBBUUgvDQpCQVFEQWdFR01DZ0dBMVVkRVFRaE1CK2tIVEFiTVJrd0Z3WURWUVFERXhCVGVXMWhiblJsWTFCTFNTMHlMVEUwDQpNQjBHQTFVZERnUVdCQlJud3crK1Bwb1hMbG9zaWZCcUg5WStHOHNPVlRBZkJnTlZIU01FR0RBV2dCVC96RFRSDQoyMHJoNGNJTDB0dnJnSHh6REhWZlpqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFPTTgyRXdzTHJCb0hBb1R1DQpnYXZlbUUxeWJPUEhFdHBKZi9tRnVIM1I0MnM5SDBtckFGVDRBZUdtVXRjOFhFNzhVUFE2dnhXcTV3WWJ3OTl0DQpOMnRHMWJsWlNaMVdoU0FITHFXNmlKaVhaTHlnSTQyZG02SGYzRkEvcldHcWF2K0Y1eU92OG1iamttc1J6bVQ1DQpPZmZHWmxwSnZvK1J2bVpQdXRjby9SR3F0VDYrVklRK2NsQ21KaXZOOUpxa2p2REd5QU1uc2Nka3l3aW1la1lmDQpRd0RIRU1YRGtLNi9vSlcrVzJoSHJMMjh3Y1dXVW85dytoYStTa241YjBsTG0vaUMvdDdDa3ZyUFBKR0VrU21FDQo1UzU5ckpPM2dycGw3U1hoejhRaVBtaWZxWVRLMjY1RG5YVmFPdlNKUjRGY1RIWG9RTWdEUld0cDZGUWs1ZUJXDQozS002VEE9PQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-digicert-federal-ssp-trust-chain-2
  namespace: default
data:
  0-Federal_Common_Policy_CA_G2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGM1RDQ0E4V2dBd0lCQWdJVUllVzVvTXlWYmVKNHlnRXJxUDNGaXBpeisrb3dEUVlKS29aSWh2Y05BUUVNDQpCUUF3WERFTE1Ba0dBMVVFQmhNQ1ZWTXhHREFXQmdOVkJBb1REMVV1VXk0Z1IyOTJaWEp1YldWdWRERU5NQXNHDQpBMVVFQ3hNRVJsQkxTVEVrTUNJR0ExVUVBeE1iUm1Wa1pYSmhiQ0JEYjIxdGIyNGdVRzlzYVdONUlFTkJJRWN5DQpNQjRYRFRJd01UQXhOREV6TXpVeE1sb1hEVFF3TVRBeE5ERXpNelV4TWxvd1hERUxNQWtHQTFVRUJoTUNWVk14DQpHREFXQmdOVkJBb1REMVV1VXk0Z1IyOTJaWEp1YldWdWRERU5NQXNHQTFVRUN4TUVSbEJMU1RFa01DSUdBMVVFDQpBeE1iUm1Wa1pYSmhiQ0JEYjIxdGIyNGdVRzlzYVdONUlFTkJJRWN5TUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGDQpBQU9DQWc4QU1JSUNDZ0tDQWdFQTE5ZlRGekVtSVJnUUtrRnR5Nis5OXNSUmpDVFlCWWg3TGxvUnBDWnM0cmdwDQpCaysvNVA0YVpZZDV2MDFHWUJmT0t5d0dKeUZoNHhrMzMvUTR5QUNvT1QxdVpPbG9OcS9xaGhUMHI5MlVvZ0tmDQo3N241SmdNaHZnL2JUaFZCM2x4eGFoWlFNTTBZcVVoZzFydGFLUktzWG0wQXBsaGFsTlQ2YzNtQTNZRFN0NCs3DQo1aTEwNW9FM0pic0ZqRFk1RHRHTVlCOUpJaHhvYnRXVFNuaEw1RTVIek8wR1ZJOVV2aFdBUFZBaHhtOG9UNHd4DQpTT0lqWi9NeXdYZmxmQnJEa3RadTFQTnNKa2tZSnB2RmdEbVNGdUVQeml2Y09yeXRvUGlQZmdYTXFZL1A3ek80DQpvcExyaDJFVjV5QTRYWUVkb3lBMmRWRDhqbW0rTGs3emdSRmFoLzg0UDJndXhOdFdwWkF0UTlOc2FnNHc0RW10DQpScTgySkxxWlFseXJNYnZMdmhXRmVjRWt5ZkR6d0drRlJJT0JuMUliVWZLVHRONUdXcG5kbDhIQ1VQYlIyaTdoDQpwVjlDRmZrWFRnc0xHVHdNTlYyeFB6MnhUaHJMRHUwanJERyszL2s0MmpCN0tIM1NRc2U3MnlvNk15TkY0NnV1DQptTzd2T1JIbGhPVFZrV3l4b3RCVTMyN1haZnEzQk51cFVETDYrUjRkVUcrcFFBRFNzdFJKNjBnZVBwMElBdFFTDQpIWllkMWlSaVhLcFRMbDBrb2ZCMlkzTGdBRk5kWW1hSHJicmlkMGRsS0lzOVFpb0R3am0rd3JETEFtdVQ0YmpMDQpaZVBoYzNxdDh1YmpoWk4yTmF6KzRZUDUrbmZTUFBDbExpeU0vVVQyZWw3ZVk0bDZPYXFYTUlSZkp4TklId2NDDQpBd0VBQWFPQmxqQ0JrekFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIvd1FFQXdJQkJqQWRCZ05WDQpIUTRFRmdRVTlDZGNxY044Ui9UNnBxZXdXWmVxM1RVbUYrTXdVUVlJS3dZQkJRVUhBUXNFUlRCRE1FRUdDQ3NHDQpBUVVGQnpBRmhqVm9kSFJ3T2k4dmNtVndieTVtY0d0cExtZHZkaTltWTNCallTOWpZVU5sY25SelNYTnpkV1ZrDQpRbmxtWTNCallXY3lMbkEzWXpBTkJna3Foa2lHOXcwQkFRd0ZBQU9DQWdFQUFXUTNNQXp3enIzTzFSU0JrZzA2DQpOQ2o3ZUlMNy9JNWZ3VEJMaHBvTWhFMFhvYW9QVWllMGdxUm8zS08yTWh1QnRhY2p5NTVpaElZODdoU2hHb0tRDQpjYkExZmg3ZTRDbHk1UWtPWStLYlFzbHRrS3pnb2Qyem1QeUMwYkVPWUQyTE8xNDFIeWVEV2RRNmREWER6NmRyDQo4T2JudE9mTXpnZG83dm9kQ011S1U4K3lzVGR4UnhUQ2k2QVZ6M3VxZTVrK09iSllwQzBhWEhOTXkxT25GZ0w2DQpveE1lR01sU2VjVS9RVUFJZjBuY0R1cllGU2N0RndYaXRUQzBDcmNMTzkvQUdIcVRGU0h6VXJJbGJyZ2QvYUdPDQorRTNvM1FvVStUaENQUG51MUsyS1pMRzRweU1xZEJtNHk3clZHUFJpa0xtRmhJdi9iNmIyQ0w4eWlZTDArbUpEDQpjclRWczBQWWZBTHRReE1wU0E4bjA1M2dhamxQd2hHM081amNMOFN6cWxhR1BtR3FwbkVpOWFXQVlISlhUemJqDQp6R1VBYzJ1OCtLdzhYdjRKZmZoVldJeFZLSDROUzVQQ3RnWHd4aWZncm1QaTAvdVUxdzBjcmNsRXNTc3lhN0ZJDQpCVlJUVVJvU3d3ZGEyNXdJSVdQSWtRc1FLMXNuSnhnRXlVelhpMTBNVURSMFdTRHFRQWRoYk9MY21jeWhFRDVoDQpwaFlRbmY4c0Q4RnBvVURqb0xDUGtVL3l0ZlpvcGxtY0JNNFNRNEVqZ2p5azYzdk1xQkRjQ01YVEhjaUZUc1YyDQplK2FSZUx2SXZVNFltYUJRUWwzdkNGajFxTVBJa1JzVGJ5MUZmOGhSRFFHM2tIMHZlZmNWdGNpY3NkVThrVjJNDQplZS94Si9jMGNJSFpXTXcwSG9SWlBibz0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
  1-DigiCert_Federal_SSP_Intermediate_CA_G5.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHTGpDQ0JCYWdBd0lCQWdJVUpMd1dqNXpMTU0vTytQQ2xqeWJ4QVlHR2ttWXdEUVlKS29aSWh2Y05BUUVNDQpCUUF3WERFTE1Ba0dBMVVFQmhNQ1ZWTXhHREFXQmdOVkJBb1REMVV1VXk0Z1IyOTJaWEp1YldWdWRERU5NQXNHDQpBMVVFQ3hNRVJsQkxTVEVrTUNJR0ExVUVBeE1iUm1Wa1pYSmhiQ0JEYjIxdGIyNGdVRzlzYVdONUlFTkJJRWN5DQpNQjRYRFRJd01URXhPREUyTXpRek9Gb1hEVEk0TVRJeE16RTJNelF6T0Zvd1dqRUxNQWtHQTFVRUJoTUNWVk14DQpGekFWQmdOVkJBb1REa1JwWjJsRFpYSjBMQ0JKYm1NdU1USXdNQVlEVlFRREV5bEVhV2RwUTJWeWRDQkdaV1JsDQpjbUZzSUZOVFVDQkpiblJsY20xbFpHbGhkR1VnUTBFZ0xTQkhOVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEDQpnZ0VQQURDQ0FRb0NnZ0VCQU11U094ZGxNbi9QaGdlbWtpdmlHYXZ5SXdQMkxWWForcmxSbmZ2TEh0VDl6SUJ5DQo5c3dYdTVKUFhqYXZQUEptTWE1MG5mWmw5dUZndjh3TW15QU9pZ2JLaTZTUkN2YzVwRWM0ZEVmNEJ6dEN6ZU9lDQpYRmZvUXpwUVZNKzhmRGsreGhJKy9KUVoxVmdxb1ZJOHVnTytOMm9sRWtHS1ZXc3U1cURMay9iRThRL0cwM0k3DQpmTXQrOVo0Z0tLRmVLUU5jMS9LZ3pxbEUvdkNXMGsybWVGREl3RzhUM2RubkNtU2llZ2hPbUtuMHVGYVp2Qy9nDQpSNTdJUmVsb3N2a3ltb3BUVHhsRmMrNkpPVlB3aVlXNVZtVmJOdzdsOTR3bUM5YzJIVkVsM0x6TnpnN05DZEdYDQo4SDd2K1JKYTdldGxQZG5HMHdpNWQzdU5EL0ZoczFMT2c1SndsTGNDQXdFQUFhT0NBZWd3Z2dIa01CMEdBMVVkDQpEZ1FXQkJSWEdlWFkxcXplZU9KQzllUkZ0Tms1a3d1OTJqQWZCZ05WSFNNRUdEQVdnQlQwSjF5cHczeEg5UHFtDQpwN0JabDZyZE5TWVg0ekFPQmdOVkhROEJBZjhFQkFNQ0FRWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QjVCZ05WDQpIU0FFY2pCd01Bd0dDbUNHU0FGbEF3SUJBd1l3REFZS1lJWklBV1VEQWdFREJ6QU1CZ3BnaGtnQlpRTUNBUU1JDQpNQXdHQ21DR1NBRmxBd0lCQXlRd0RBWUtZSVpJQVdVREFnRUREVEFNQmdwZ2hrZ0JaUU1DQVFNUU1Bd0dDbUNHDQpTQUZsQXdJQkF4RXdEQVlLWUlaSUFXVURBZ0VESnpCWEJnZ3JCZ0VGQlFjQkN3UkxNRWt3UndZSUt3WUJCUVVIDQpNQVdHTzJoMGRIQTZMeTl6YzNBdGMybGhMbVJwWjJsalpYSjBMbU52YlM5VFUxQXZRMlZ5ZEhOZmFYTnpkV1ZrDQpYMko1WDFOVFVFTkJSelV1Y0Rkak1CSUdBMVVkSkFFQi93UUlNQWFBQVFDQkFRQXdEUVlEVlIwMkFRSC9CQU1DDQpBUUF3VVFZSUt3WUJCUVVIQVFFRVJUQkRNRUVHQ0NzR0FRVUZCekFDaGpWb2RIUndPaTh2Y21Wd2J5NW1jR3RwDQpMbWR2ZGk5bVkzQmpZUzlqWVVObGNuUnpTWE56ZFdWa1ZHOW1ZM0JqWVdjeUxuQTNZekEzQmdOVkhSOEVNREF1DQpNQ3lnS3FBb2hpWm9kSFJ3T2k4dmNtVndieTVtY0d0cExtZHZkaTltWTNCallTOW1ZM0JqWVdjeUxtTnliREFODQpCZ2txaGtpRzl3MEJBUXdGQUFPQ0FnRUFEbnpVUGNSUWhyTzlzNWpRSzlpSTJwbW80WXhSN0l6SG5kVGlaSmZjDQpmSEZ5blIyNGdZVDQ5dW9sSGR0VnNaUzRtZXBMNlFjdTVmZUJ2aTJBVUhPS2NYZ05QY3pMRkgrZnBqR2Z6c2xYDQpjL2RjSVQ0N0pZL1E4WDNyQ3NMTnJFZHBTbWN6dGNaSXhSRTlxcGhIZlcyUEFzWUs0bURJdGhoTGhod2d2WGVKDQpOS01ORVdqTHBJNzlZMkx5MHFvenVvWkNSVFNTUmR6NG51eGdrL25oT3NWV0h6em5McE5tVVBxRXhxVGp5NFJxDQpnaUxiSVZzUFZWeE05dVFvekJFelZHUEZaRmJxSStXd0VwMXJYUWwyaDByOFkrSkN6K1N5cDJINGtuRTErTzdjDQpKKzVvUk1SbUZadG1VSUUzQlRoekM5cGdwaTdYTnpROVVOcUxDUWplYmhzSnpaS1Q2OGJlQXNJRkxBbENHTURVDQo5bnhPYjZWWWVnY1JnNFNQVk1HK1NkMlZyU2FWMTFPc1ZOOWRDTXZpY05uVmpld3ZJWmFrTGVacE1RekNLZEh6DQpLWWZ1VklqdEpoQUwyZG1ZSmsxZ1VSbS9pU1pkZy9EUnpwY1g2TXZHckJjTzlyd2k5YzZwQkM0cGxSd3ZqbUxTDQppbFhSamdZMlhhZkVRdi9LeXhBZFBLRFYwV3FDNDY2QWZYSkt6eHp2dHFtbVdrNmkzWGFBaEJ1bjJtYUdKWi9HDQpra201SjlGeFVGb1ZwVVJ0dU9kY2g5MFlOTmlQQ0tLazBoNjVzc20xaW03Z2dHUFpicENwZDAvRW5HelB2NUhCDQpEY1VIcDJDZFBUdkRjSDZ3Smp3THpES1lJUGpaRTBtYTJTQkMrNkdpeFA5cm03STczYitWRi96TlNGazdnZkN3DQo4WTQ9DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
  2-US_Department_of_Transportation_Agency_CA_G5.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGRnpDQ0EvK2dBd0lCQWdJUUR0Z2NNRDZqVm1lSCtzbzJpWnFUR2pBTkJna3Foa2lHOXcwQkFRc0ZBREJhDQpNUXN3Q1FZRFZRUUdFd0pWVXpFWE1CVUdBMVVFQ2hNT1JHbG5hVU5sY25Rc0lFbHVZeTR4TWpBd0JnTlZCQU1UDQpLVVJwWjJsRFpYSjBJRVpsWkdWeVlXd2dVMU5RSUVsdWRHVnliV1ZrYVdGMFpTQkRRU0F0SUVjMU1CNFhEVEU1DQpNRE13TlRBd01EQXdNRm9YRFRJNE1USXhNakl6TlRrMU9Wb3dnWXd4Q3pBSkJnTlZCQVlUQWxWVE1SZ3dGZ1lEDQpWUVFLRXc5VkxsTXVJRWR2ZG1WeWJtMWxiblF4S2pBb0JnTlZCQXNUSVZVdVV5NGdSR1Z3WVhKMGJXVnVkQ0J2DQpaaUJVY21GdWMzQnZjblJoZEdsdmJqRTNNRFVHQTFVRUF4TXVWUzVUTGlCRVpYQmhjblJ0Wlc1MElHOW1JRlJ5DQpZVzV6Y0c5eWRHRjBhVzl1SUVGblpXNWplU0JEUVNCSE5UQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQDQpBRENDQVFvQ2dnRUJBTysxL3FoaC80SUdmbXQySUswbGFBYlMwOVlKM1dOMUc3aVhzQ25TZlN2ZS9hK29wYTlpDQo5dXFTNnVqa29nY2JZdVpicmk1c1RxMi9veFNKU1ZtMjg3dXVwKzVRY0NoYWY3UnkxcWsyNmVIZmFxZ3EwNDBiDQoxTmF3ZTNFYUE1K2gxSEZ1cEp0b2pzK2VSMjNFeThRakRpOUxVVkh1aVhoWmdOeE92Qm0zdkp5MTJ4eEhwRjJTDQpJYXRXRXFZa2J5Y1VKYnQwcEJscUhmNndiNHoyM0p5dVFrWHJKc3plVFNaSnc5a0FZaW4zZW1yVVluMDd0YUJ4DQpTdUd5dmZwRW1XeG1IREx3cDJIQW5WVzFPTDNSQ29iSHgwcHpqbWlLZEJvTzhpY0hRTzFoY2hFZTk0SkVLRTlxDQpKZFhxcW1oQTJybkR4c1VaN2kvR3h2cUpyV1BZS0dVSjRWa0NBd0VBQWFPQ0FhUXdnZ0dnTUlHQkJnZ3JCZ0VGDQpCUWNCQVFSMU1ITXdLQVlJS3dZQkJRVUhNQUdHSEdoMGRIQTZMeTl6YzNBdGIyTnpjQzVrYVdkcFkyVnlkQzVqDQpiMjB3UndZSUt3WUJCUVVITUFLR08yaDBkSEE2THk5emMzQXRZV2xoTG1ScFoybGpaWEowTG1OdmJTOVRVMUF2DQpRMlZ5ZEhOZmFYTnpkV1ZrWDNSdlgxTlRVRU5CUnpVdWNEZGpNQklHQTFVZEV3RUIvd1FJTUFZQkFmOENBUUF3DQpUd1lEVlIwZ0JFZ3dSakFNQmdwZ2hrZ0JaUU1DQVFNR01Bd0dDbUNHU0FGbEF3SUJBd2N3REFZS1lJWklBV1VEDQpBZ0VERFRBTUJncGdoa2dCWlFNQ0FRTVFNQXdHQ21DR1NBRmxBd0lCQXhFd09nWURWUjBmQkRNd01UQXZvQzJnDQpLNFlwYUhSMGNEb3ZMM056Y0MxamNtd3VaR2xuYVdObGNuUXVZMjl0TDFOVFVDOVRVMUJITlM1amNtd3dEZ1lEDQpWUjBQQVFIL0JBUURBZ0VHTUNrR0ExVWRFUVFpTUNDa0hqQWNNUm93R0FZRFZRUURFeEZUZVcxaGJuUmxZMUJMDQpTUzB5TFRrM016QWRCZ05WSFE0RUZnUVVvbWsvTlJqdG5pSEFFd21BOUJBTUJJWU1WdWd3SHdZRFZSMGpCQmd3DQpGb0FVVnhubDJOYXMzbmppUXZYa1JiVFpPWk1MdmRvd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKZHFtenNiDQpYcWMxNE55K0V4Rkt4OE8xMjBTYnUwZzVWZU5nMlZ0eFkrbVRBdHBCR1FwYjkvVGZhV2JMZk0vbVkxZjAvZUV6DQpwZFA0c1lOdG9WUUk2UDE1YnJXQVU1U3p6U205UTVJUktqcTBMS1dkT1hkUXdQZ3hIU1MrdzZ6Rlhwa2xMK2t0DQplMEc5cEV1b29XRkRiYUlhWnN3TjVaVGZUa3kvZHNSZVpJRnFvMUswUDZzMHZFdHNNYnMzVDdVZTAyeGp1MWRwDQpLZnZHd0ZJT2toeU1JaE84d1dzSUM3N3lycVJEekUzODVrRmtxL2lRYm8wVmUveU1ST09YWitKTkd6NlY5dlFzDQpZdGpPRzdNTy9QaUVtUkkrY3VBYVdmNVdSbklZTzhOR3ArOFlub2pRNEo5ZU5TVlBLdkpCK1RpM2N0NXhDN0lODQo2MXM4TkxuWmZXZ1ptUkE9DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-digicert-nfi-trust-chain-1
  namespace: default
data:
  0-VeriSign_Universal_Root.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlFdVRDQ0E2R2dBd0lCQWdJUVFCckVaQ0d6RXlFRERydmtFaHJGSFRBTkJna3Foa2lHOXcwQkFRc0ZBRENCDQp2VEVMTUFrR0ExVUVCaE1DVlZNeEZ6QVZCZ05WQkFvVERsWmxjbWxUYVdkdUxDQkpibU11TVI4d0hRWURWUVFMDQpFeFpXWlhKcFUybG5iaUJVY25WemRDQk9aWFIzYjNKck1Ub3dPQVlEVlFRTEV6RW9ZeWtnTWpBd09DQldaWEpwDQpVMmxuYml3Z1NXNWpMaUF0SUVadmNpQmhkWFJvYjNKcGVtVmtJSFZ6WlNCdmJteDVNVGd3TmdZRFZRUURFeTlXDQpaWEpwVTJsbmJpQlZibWwyWlhKellXd2dVbTl2ZENCRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBlVEFlDQpGdzB3T0RBME1ESXdNREF3TURCYUZ3MHpOekV5TURFeU16VTVOVGxhTUlHOU1Rc3dDUVlEVlFRR0V3SlZVekVYDQpNQlVHQTFVRUNoTU9WbVZ5YVZOcFoyNHNJRWx1WXk0eEh6QWRCZ05WQkFzVEZsWmxjbWxUYVdkdUlGUnlkWE4wDQpJRTVsZEhkdmNtc3hPakE0QmdOVkJBc1RNU2hqS1NBeU1EQTRJRlpsY21sVGFXZHVMQ0JKYm1NdUlDMGdSbTl5DQpJR0YxZEdodmNtbDZaV1FnZFhObElHOXViSGt4T0RBMkJnTlZCQU1UTDFabGNtbFRhV2R1SUZWdWFYWmxjbk5oDQpiQ0JTYjI5MElFTmxjblJwWm1sallYUnBiMjRnUVhWMGFHOXlhWFI1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGDQpBQU9DQVE4QU1JSUJDZ0tDQVFFQXgyRTNYckVCTk50aTF4V2IvMWhhakNNajFtQ09rZGVRbUlONjVsZ1pPSXpGDQo5dVZraGJTaWNmdnR2Ym5helUwQXRNZ3RjNlhIYVhHVkh6azhza1FIbk9nTytrMUt4Q0hmS1dHUE1pSmhnc1dIDQpIMjZNZkY4V0lGRkUwWEJQVityakhPUE1lZTVZMkE3Q3MwV1R3Q3pubWhjcmV3QTNla0V6ZU9FejR2TVFHbitIDQpMTDcyOWZkQzR1Vy9oMktKWHdCTDM4WGQ1SFZFTWtFNkhuRnVhY3NMZFVZSTBjclNLNVhRei91NVFHdGtqRmRODQovQk1SZVlUdFhsVDJOSjhJQWZNUUpRWVhTdHJ4SFhwbWE1aGdacVRaNzlJdWd2SHc3d25xUk1rVmF1SURialBUDQpySjlWQU1mMkNHcVV1Vi9jNERQeGhHRDVXeWNSdFB3VzhydFdhb0FsalFJREFRQUJvNEd5TUlHdk1BOEdBMVVkDQpFd0VCL3dRRk1BTUJBZjh3RGdZRFZSMFBBUUgvQkFRREFnRUdNRzBHQ0NzR0FRVUZCd0VNQkdFd1g2RmRvRnN3DQpXVEJYTUZVV0NXbHRZV2RsTDJkcFpqQWhNQjh3QndZRkt3NERBaG9FRkkvbDB4cUdySTJPYThQUGdHclVTQmdzDQpleGt1TUNVV0kyaDBkSEE2THk5c2IyZHZMblpsY21semFXZHVMbU52YlM5MmMyeHZaMjh1WjJsbU1CMEdBMVVkDQpEZ1FXQkJTMmQvcHBTRWVmVXhMVnd1b0hNbllIMFpjSEdUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFTdmo0DQpzQVBtTEdkNzVKUjNZOHh1VFBsOURnM2N5TGsxdVhCUFkvb2srbXlEakVlZE8yUHptdmwyTXBXUnNYZThySnErDQpzZVF4SWNhQmxWWmFEckhDMUxHbVdhenhZOHU0VEIxWmtFcnZrQllvSDFxdUVQdUJVRGdNYk16eFBjUDFZK096DQo0eUhKSkRucC9SVm1SdlFiRWRCTmM2TjlSdms5N2FoZll0VHhQL2pnZEZjckdKMkJ0TVFvMnBTWHBYRHJyQjIrDQpCeEh3MWR2ZDVZencxVEt3ZytaWDRvKy92cUdxdnowZHRkUTQ2dGV3WERwUGFqK1B3R1pzWTZycDJhUVc5SUhSDQpsUlFPZmMyVk5OblNqM0J6Z1h1Y2ZyMllZZGhGaDVpUXhldUdNTVkxdi9EL3cxV0lnMHZ2QlpJR2NmSzRtSk8zDQo3TTJDWWZFNDVrK1htQ3BhalE9PQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
  1-Symantec_Class_3_SSP_Intermediate_CA-G3.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGM2pDQ0JNYWdBd0lCQWdJUVJiRyt0ZlBVZS92QlJmVFpGNTRpOGpBTkJna3Foa2lHOXcwQkFRc0ZBRENCDQp2VEVMTUFrR0ExVUVCaE1DVlZNeEZ6QVZCZ05WQkFvVERsWmxjbWxUYVdkdUxDQkpibU11TVI4d0hRWURWUVFMDQpFeFpXWlhKcFUybG5iaUJVY25WemRDQk9aWFIzYjNKck1Ub3dPQVlEVlFRTEV6RW9ZeWtnTWpBd09DQldaWEpwDQpVMmxuYml3Z1NXNWpMaUF0SUVadmNpQmhkWFJvYjNKcGVtVmtJSFZ6WlNCdmJteDVNVGd3TmdZRFZRUURFeTlXDQpaWEpwVTJsbmJpQlZibWwyWlhKellXd2dVbTl2ZENCRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBlVEFlDQpGdzB4TkRBNU16QXdNREF3TURCYUZ3MHlOREE1TWpreU16VTVOVGxhTUlHQk1Rc3dDUVlEVlFRR0V3SlZVekVkDQpNQnNHQTFVRUNoTVVVM2x0WVc1MFpXTWdRMjl5Y0c5eVlYUnBiMjR4SHpBZEJnTlZCQXNURmxONWJXRnVkR1ZqDQpJRlJ5ZFhOMElFNWxkSGR2Y21zeE1qQXdCZ05WQkFNVEtWTjViV0Z1ZEdWaklFTnNZWE56SURNZ1UxTlFJRWx1DQpkR1Z5YldWa2FXRjBaU0JEUVNBdElFY3pNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDDQpBUUVBdmFudmx3eW5IenF4TFpvZml2N1NqeXY2YjhwT3MrdVNkWS9SRUQwcW5xeDdBRE9RMXJzRlhDRFNNNkhKDQpxYUsvV0k4S2V6WFM2eWdmM2VmRmh0Y3RZWG5pODR0RjFoVC9uY29RODJhQ1NQYUtreHBNdTVwRjRHQ0UySnVLDQpSWktjQ2JKTHhFaTFvTXl6eTEwWGFDZ284ampGYUpxWTNDcDczWlVMNm1KemEyclEyOXJkamlTOHdNbU8zS043DQplNTI1TzB1aktocG9lU3RmdUx1QVRydW15Y3dxUFZNZFMydDdVbFhXaUdYMzZnNjdLaTNpbmQ1TEZXV3N4YUtMDQpCdlhWdWVRSnFSNXc3UCtZL1lNY3dhRHFsbjhGNG41T0ZvdFRLVUJjUUlCRWlvZHoxVEJFOG9MMEY4dG9KZmg1DQowaWg1aUlHV2hHemdwMm90MkQ4ajE1UEFxUUlEQVFBQm80SUNFakNDQWc0d0xnWUlLd1lCQlFVSEFRRUVJakFnDQpNQjRHQ0NzR0FRVUZCekFCaGhKb2RIUndPaTh2Y3k1emVXMWpaQzVqYjIwd0R3WURWUjBUQVFIL0JBVXdBd0VCDQovekNCdFFZRFZSMGdCSUd0TUlHcU1BOEdEV0NHU0FHRytFVUJCeGNEQVFZd0R3WU5ZSVpJQVliNFJRRUhGd01CDQpCekFQQmcxZ2hrZ0JodmhGQVFjWEF3RUlNQThHRFdDR1NBR0crRVVCQnhjREFRMHdEd1lOWUlaSUFZYjRSUUVIDQpGd01CRGpBUEJnMWdoa2dCaHZoRkFRY1hBd0VQTUE4R0RXQ0dTQUdHK0VVQkJ4Y0RBUkV3RHdZTllJWklBWWI0DQpSUUVIRndNQkVqQVBCZzFnaGtnQmh2aEZBUWNYQXdFVU1BOEdEV0NHU0FHRytFVUJCeGNEQVNRd05nWURWUjBmDQpCQzh3TFRBcm9DbWdKNFlsYUhSMGNEb3ZMM011YzNsdFkySXVZMjl0TDNWdWFYWmxjbk5oYkMxeWIyOTBMbU55DQpiREFPQmdOVkhROEJBZjhFQkFNQ0FRWXdZQVlJS3dZQkJRVUhBUXNFVkRCU01GQUdDQ3NHQVFVRkJ6QUZoa1JvDQpkSFJ3T2k4dmMzTndMWE5wWVM1emVXMWhkWFJvTG1OdmJTOVRWRTVUVTFBdlEyVnlkSE5mYVhOemRXVmtYMko1DQpYME5zWVhOek0xTlRVRU5CTFVjekxuQTNZekFwQmdOVkhSRUVJakFncEI0d0hERWFNQmdHQTFVRUF4TVJVM2x0DQpZVzUwWldOUVMwa3RNUzAzTmpFd0hRWURWUjBPQkJZRUZEVW1mVkNWNGFIQnZRWFZ3NTEzUXNjTUU1YU1NQjhHDQpBMVVkSXdRWU1CYUFGTFozK21sSVI1OVRFdFhDNmdjeWRnZlJsd2NaTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCDQpBUUJJcVcyaHBZZ2h3cHVRS1pqTldDN1d2OFprNnM4Q05rdFNWUTNMakxmSU1TaUlGbVBMaUFQekxmQ1BGcGdIDQpkOGJWZ2RaeWxkbGNDNGpjb0l3VXdQSXdDSG1PbXZEN1V5NzJ2a1hSM1hvaGQ2cTNNa0ZoNDZyWnJsWUZzVHM5DQpTUExiRDZLTTIyMTVhWEhsV1RWNXlBU0dVSU4wVERDYm1KejlmU0kyTmN6NUsrUGlqVGpGMXM4MG1jRlo4Tko3DQpqMEhHM1JBc0NjSkdIMWtuWEdmaUxRS0hCY2VLK2UzcXY2blBpSkF1ODJyczNkQUdLaytOOC81SjJiVUZnb052DQpKVS9Rb1Z5c1FQMkRWcXRtajBVVTF4UUlIY3ZCY2JwLzlnaXdFQjFaRVA4NzlIZnRDdEZLQit0VHBXZHF2VEwwDQplNitzSXdBVXl3SUVRWlJObkhNdC9wOWINCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
  2-CSRA_FBCA_C3_CA.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGWGpDQ0JFYWdBd0lCQWdJUVNMVThKWlJPYnRaRk01N1BFSG45TnpBTkJna3Foa2lHOXcwQkFRc0ZBRENCDQpnVEVMTUFrR0ExVUVCaE1DVlZNeEhUQWJCZ05WQkFvVEZGTjViV0Z1ZEdWaklFTnZjbkJ2Y21GMGFXOXVNUjh3DQpIUVlEVlFRTEV4WlRlVzFoYm5SbFl5QlVjblZ6ZENCT1pYUjNiM0pyTVRJd01BWURWUVFERXlsVGVXMWhiblJsDQpZeUJEYkdGemN5QXpJRk5UVUNCSmJuUmxjbTFsWkdsaGRHVWdRMEVnTFNCSE16QWVGdzB4TlRFeU1UY3dNREF3DQpNREJhRncweU5EQTVNamd5TXpVNU5UbGFNR2d4Q3pBSkJnTlZCQVlUQWxWVE1TVXdJd1lEVlFRS0V4eERVME1nDQpSMjkyWlhKdWJXVnVkQ0JUYjJ4MWRHbHZibk1nVEV4RE1SZ3dGZ1lEVlFRTEV3OURVMUpCSUVaQ1EwRWdUV1ZrDQpTRmN4R0RBV0JnTlZCQU1URDBOVFVrRWdSa0pEUVNCRE15QkRRVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEDQpnZ0VQQURDQ0FRb0NnZ0VCQUs5SkM0VnkyOHc0ZUlvTW9CZitIRTdTMW1QZGdyd1J3ekdiWWhySDcxN0xVMEhvDQpaVjNKNEszcTIvT2pnZk90Qk8xOEw4MXdYZG9uM3B2UGlLaldSRTVoUTZ1QWIvTnc0QjRoQnczMVBCVkxzTWV3DQp6WjFOY2p3SnZ6M2dHK1RIdS9CcmQ0R3I0UTRITHpBbFc2b0lRK1ZaRms1M01GdldGUFpFVWhOOW56MzkyZ00wDQpSS3ZCY1lrdm9ORWR1YTFlQlZXMm13Ly9xVVB3Tk50NHd1amVaN3hCWU1IOS9wQzlNU1RXVnBjNFFtUzNxdnZJDQpQbXJtcWhheGJ3emJYOXlvdjl3M0pwUWJNV3FMT0NlaU44MzNkeHZzNHNoYndRTm9wTkdHdDBaQThMNTRqeWxyDQp4VDc3WUZ6TGFsZVB4ZWpFZk5pZ0JhWXltdklMa055Q3pZRUxidFVDQXdFQUFhT0NBZWd3Z2dIa01CSUdBMVVkDQpFd0VCL3dRSU1BWUJBZjhDQVFBd2dZQUdBMVVkSUFSNU1IY3dEd1lOWUlaSUFZYjRSUUVIRndNQkJqQVBCZzFnDQpoa2dCaHZoRkFRY1hBd0VITUE4R0RXQ0dTQUdHK0VVQkJ4Y0RBUTB3RHdZTllJWklBWWI0UlFFSEZ3TUJEakFQDQpCZzFnaGtnQmh2aEZBUWNYQXdFUE1BOEdEV0NHU0FHRytFVUJCeGNEQVJFd0R3WU5ZSVpJQVliNFJRRUhGd01CDQpFakJFQmdOVkhSOEVQVEE3TURtZ042QTFoak5vZEhSd09pOHZjM053TFdOeWJDNXplVzFoZFhSb0xtTnZiUzlUDQpWRTVUVTFBdlEyeGhjM016VTFOUVEwRkhNeTVqY213d0RnWURWUjBQQVFIL0JBUURBZ0VHTUlHSkJnZ3JCZ0VGDQpCUWNCQVFSOU1Ic3dKd1lJS3dZQkJRVUhNQUdHRzJoMGRIQTZMeTl6YzNBdGIyTnpjQzV6ZVcxaGRYUm9MbU52DQpiVEJRQmdnckJnRUZCUWN3QW9aRWFIUjBjRG92TDNOemNDMWhhV0V1YzNsdFlYVjBhQzVqYjIwdlUxUk9VMU5RDQpMME5sY25SelgybHpjM1ZsWkY5MGIxOURiR0Z6Y3pOVFUxQkRRUzFITXk1d04yTXdLUVlEVlIwUkJDSXdJS1FlDQpNQnd4R2pBWUJnTlZCQU1URVZONWJXRnVkR1ZqVUV0SkxUSXRNamMwTUIwR0ExVWREZ1FXQkJRMXBaek40blJjDQpDSjFjUDYxT2cwaTJaTjNqampBZkJnTlZIU01FR0RBV2dCUTFKbjFRbGVHaHdiMEYxY09kZDBMSERCT1dqREFODQpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFOLy9oNFRpRDBWSTZPY1oxZHVLRUxzdVVlb0t4Zmt4R0s5a1doTnB5DQo3ci82Y05NS013Qk1ZcHpUTGhheWc4TFA0QU93QkxHSVJjVlFFNElPNkxLZmR3SnlKVy9ibFpjSUFYbndjQkF2DQpFNUhVWmNJMlRpL2JBdnJEZnJhczFGVlozLzN5WE56bHFWWVFCY3plWFdqRUxuS3BBcmdnYU9rVU14VURHNXJ2DQpocytjOFloSlZzbjlUeE45UVpHWHFldTIxYkZoWjZ1QkJQUGVwVldUbFRvTW1JU2MvVTAxVG1zVDJKbGRDZFlCDQpNSEFDZXp6WHMvSEVNVHh4RURqVFpMbjdvTVJkdHgwcmYvVzF5dlp2K1IzYnRYK3VReFhTYXB0VlNvUkZBeGZiDQpvRHQwWTBveFlYUUtWWHYzMjRRR2hocTBLQUtjeWwyMFUvUVJ2NHRKV205aW5BPT0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
  2-CSRA_FBCA_C3_Device_CA.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGSWpDQ0JBcWdBd0lCQWdJUVJhcTkvOXJoWWgxU3NtRGE5Kzg3MXpBTkJna3Foa2lHOXcwQkFRc0ZBRENCDQpnVEVMTUFrR0ExVUVCaE1DVlZNeEhUQWJCZ05WQkFvVEZGTjViV0Z1ZEdWaklFTnZjbkJ2Y21GMGFXOXVNUjh3DQpIUVlEVlFRTEV4WlRlVzFoYm5SbFl5QlVjblZ6ZENCT1pYUjNiM0pyTVRJd01BWURWUVFERXlsVGVXMWhiblJsDQpZeUJEYkdGemN5QXpJRk5UVUNCSmJuUmxjbTFsWkdsaGRHVWdRMEVnTFNCSE16QWVGdzB4TlRFeU1UY3dNREF3DQpNREJhRncweU5EQTVNamd5TXpVNU5UbGFNSEV4Q3pBSkJnTlZCQVlUQWxWVE1TVXdJd1lEVlFRS0V4eERVME1nDQpSMjkyWlhKdWJXVnVkQ0JUYjJ4MWRHbHZibk1nVEV4RE1Sb3dHQVlEVlFRTEV4RkRVMUpCSUVaQ1EwRWdSR1YyDQphV05sY3pFZk1CMEdBMVVFQXhNV1ExTlNRU0JHUWtOQklFTXpJRVJsZG1salpTQkRRVENDQVNJd0RRWUpLb1pJDQpodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5uckFncDRGNWRUSFpQd0JrZkZvODIrMFNzRk14VFg0dkVODQozTFV3QktJTi9UT2l0T1lJaVNRU2R0NXZHZ29ldlZzU3poYXR0QndSbnhDWXZPMm9vdjNFVlpIeDdIUjROMW5BDQo1b2pMMk1RdTM1NTc5SEpWSURranU0TFVXRVFZSU0wRWtjVGJnOVhjQTNwRTl6c3pXSzh5V05PTU9lRi81Q0hDDQpNVWJRLzJzaThzTEdrd08xaWRHV1FIMWZHOGdOelFWaForZDRoTU0xT1lDMlVLSFR5Y2dvalVnZG9FVzZmcEk1DQo3b0x1R1JUdldjMXBGbnlyWUduSUwwaWlqVy9VOEZMQjhxZGsvZklMV3o5TDBqS0VZM1hvUHlOTDYyWmp2cUpIDQpheUN6Uk03WWwxQUMwTkQ2ZmNnbUFPamZoTWJKdHhiNytxQXRtaXR0bnJ5RW4vSGxTME1DQXdFQUFhT0NBYU13DQpnZ0dmTUJJR0ExVWRFd0VCL3dRSU1BWUJBZjhDQVFBd1BBWURWUjBnQkRVd016QVBCZzFnaGtnQmh2aEZBUWNYDQpBd0VJTUE4R0RXQ0dTQUdHK0VVQkJ4Y0RBUlF3RHdZTllJWklBWWI0UlFFSEZ3TUJKREJFQmdOVkhSOEVQVEE3DQpNRG1nTjZBMWhqTm9kSFJ3T2k4dmMzTndMV055YkM1emVXMWhkWFJvTG1OdmJTOVRWRTVUVTFBdlEyeGhjM016DQpVMU5RUTBGSE15NWpjbXd3RGdZRFZSMFBBUUgvQkFRREFnRUdNSUdKQmdnckJnRUZCUWNCQVFSOU1Ic3dKd1lJDQpLd1lCQlFVSE1BR0dHMmgwZEhBNkx5OXpjM0F0YjJOemNDNXplVzFoZFhSb0xtTnZiVEJRQmdnckJnRUZCUWN3DQpBb1pFYUhSMGNEb3ZMM056Y0MxaGFXRXVjM2x0WVhWMGFDNWpiMjB2VTFST1UxTlFMME5sY25SelgybHpjM1ZsDQpaRjkwYjE5RGJHRnpjek5UVTFCRFFTMUhNeTV3TjJNd0tRWURWUjBSQkNJd0lLUWVNQnd4R2pBWUJnTlZCQU1UDQpFVk41YldGdWRHVmpVRXRKTFRJdE1qYzFNQjBHQTFVZERnUVdCQlRFbEhPdVBicDNsNWxJUW50WDBTY2N1c3FrDQppekFmQmdOVkhTTUVHREFXZ0JRMUpuMVFsZUdod2IwRjFjT2RkMExIREJPV2pEQU5CZ2txaGtpRzl3MEJBUXNGDQpBQU9DQVFFQVQ2RjZEWFhlWWFGUnNZREQrenlhR0x1RkNjV2ZTb280VjQvK2lsSWdUVy9tOEREUk1RTnNMb1B6DQo1eGZVd1lqa3d5TTVNMVF4THlyS24vN3FzazJxTloxYkZHZ3lLa2U1SEVhdHR3Q0dKa1ZxOGxXWkFodkJyYVhCDQpmbVBqYm5yMFJQV1pKeksybWFjb0RNektiWS9FZkVHaFgzSGt0YkZRQkVJeGRGZFhGV3VKWGR0Z2lTZGlPamNpDQpLei9reWZOZXo5TDBVZXorbFdmOE4rYmEwWmJabmplcXlEbkdINkxsYndYakM5YStaaVpnRG5qaHRUMklGVGxUDQpyMHI4TnVIaWppcFZYTmJGQ1FFcTRhcVVyOVFxS09lUUx2RjIxQkFDT1V5MWVEWkVwOFM1aGJieFo1bU14VTVaDQpjYWZkN3RwczhuU2tydGxjRmx1RDRzRmY5Wm0xR0E9PQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
  2-Eid_Passport_LRA_2_CA.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGYURDQ0JGQ2dBd0lCQWdJUWRQcUF0WUN4SDRMTjZFN3pyWTQycERBTkJna3Foa2lHOXcwQkFRc0ZBRENCDQpnVEVMTUFrR0ExVUVCaE1DVlZNeEhUQWJCZ05WQkFvVEZGTjViV0Z1ZEdWaklFTnZjbkJ2Y21GMGFXOXVNUjh3DQpIUVlEVlFRTEV4WlRlVzFoYm5SbFl5QlVjblZ6ZENCT1pYUjNiM0pyTVRJd01BWURWUVFERXlsVGVXMWhiblJsDQpZeUJEYkdGemN5QXpJRk5UVUNCSmJuUmxjbTFsWkdsaGRHVWdRMEVnTFNCSE16QWVGdzB4TlRBek1UQXdNREF3DQpNREJhRncweU5EQTVNamd5TXpVNU5UbGFNSE14Q3pBSkJnTlZCQVlUQWxWVE1Sc3dHUVlEVlFRS0V4SkZhV1FnDQpVR0Z6YzNCdmNuUXNJRWx1WXk0eEp6QWxCZ05WQkFzVEhrVnBaQ0JRWVhOemNHOXlkQ0JRU1ZZdFNTQk1Va0VnDQpUbVYwZDI5eWF6RWVNQndHQTFVRUF4TVZSV2xrSUZCaGMzTndiM0owSUV4U1FTQXlJRU5CTUlJQklqQU5CZ2txDQpoa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTBELzdJT0JGcnlIRERHbFd4UUQ0VVpKSVFMYmlHMlZRDQpTbDVmTzU3cmhsTzhtSGs4NVFNVTJBK2EwTmMzOVJGU2M4cWhPWllEcW9wYVY5OVVoZmtMemg1UjRBRHpqWW9aDQo4ckNNYXF6YlFsc0pZWEExeFUzVmZnYnNUeXFUUEIyeTZJMHpRQ1RaVHQ0V2pvTzM0eHhHeHdwb3UrTGpRczg1DQovNUJxaXJpK09yMEsrTWljaGl1REU5Z2V1U3VYQm9YNGYwZ3ZHTG1zb2VpclpsaEpPNldIYXp5YkZydEgwNFkzDQpobkxmK0d1V3kySXNqNi9xLytKb2phOVZqR0lYWWdpNUdKY0xUbEY3TUN2WHdxV1N1dUMxUExLdkNQd0F5T29WDQpGNklTWm8yV1cvS2hGa0xHMEI3bTRvMHBOVUhHclhycUpNZ2ZudGt1VFdzSHdURjNYUitoRXdJREFRQUJvNElCDQo1ekNDQWVNd0VnWURWUjBUQVFIL0JBZ3dCZ0VCL3dJQkFEQ0JnQVlEVlIwZ0JIa3dkekFQQmcxZ2hrZ0JodmhGDQpBUWNYQXdFR01BOEdEV0NHU0FHRytFVUJCeGNEQVFjd0R3WU5ZSVpJQVliNFJRRUhGd01CRFRBUEJnMWdoa2dCDQpodmhGQVFjWEF3RU9NQThHRFdDR1NBR0crRVVCQnhjREFROHdEd1lOWUlaSUFZYjRSUUVIRndNQkVUQVBCZzFnDQpoa2dCaHZoRkFRY1hBd0VTTUVRR0ExVWRId1E5TURzd09hQTNvRFdHTTJoMGRIQTZMeTl6YzNBdFkzSnNMbk41DQpiV0YxZEdndVkyOXRMMU5VVGxOVFVDOURiR0Z6Y3pOVFUxQkRRVWN6TG1OeWJEQU9CZ05WSFE4QkFmOEVCQU1DDQpBUVl3Z1lrR0NDc0dBUVVGQndFQkJIMHdlekFuQmdnckJnRUZCUWN3QVlZYmFIUjBjRG92TDNOemNDMXZZM053DQpMbk41YldGMWRHZ3VZMjl0TUZBR0NDc0dBUVVGQnpBQ2hrUm9kSFJ3T2k4dmMzTndMV0ZwWVM1emVXMWhkWFJvDQpMbU52YlM5VFZFNVRVMUF2UTJWeWRITmZhWE56ZFdWa1gzUnZYME5zWVhOek0xTlRVRU5CTFVjekxuQTNZekFvDQpCZ05WSFJFRUlUQWZwQjB3R3pFWk1CY0dBMVVFQXhNUVUzbHRZVzUwWldOUVMwa3RNaTAzT1RBZEJnTlZIUTRFDQpGZ1FVNnE0WXo3YlpCdzFSR2UzaWNFT0JRbmRzVzV3d0h3WURWUjBqQkJnd0ZvQVVOU1o5VUpYaG9jRzlCZFhEDQpuWGRDeHd3VGxvd3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSFo5d2twMHVFOStuaFFsVkloRmxaUGdCSXMxDQpRa3VSR2QxbE5tdGtLaDFKWXpHd2pGWFRXUFB6TVhCOEFkMm5ZKzNJWkh1bnM5VnFCS3JYek5yaHdGZW0wL1ZVDQpKWU80dkN2bEY1UExGYmtMRUpRMUo5YTR1dWNEdGxFY0RHZjU1bWtadkMrSjZ1YWJQcUhoSHhzUFFCWnBURWlkDQo5M05xZjJjVjlxanN2VmVxamlvVGMzSGZxY3hxc3QzQTN0bFB6M1RsWVVXL3prcFpBVDNCaHJzY0dualRpOG9vDQpjREVoczhsTlMvVEg2c2JONzdaTkdEQVZkTXRRZGkvaVUxSkI0MWNHM3ZqTFdLek1Zb0c3MHowNEh4ZkdTMTdYDQpUZy9Mak4yUnh6ZndHR0FsOTFhYTlNd0hMUi9VM0dSQzhHa2J0dDIyRENYVEo5c2FWbTh2VGpFR29Xbz0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
  2-Senate_PIV-I_CA_G4.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGZWpDQ0JHS2dBd0lCQWdJUVVzaTNZdU9MTUNFaWlIa0paTGVyTERBTkJna3Foa2lHOXcwQkFRc0ZBRENCDQpnVEVMTUFrR0ExVUVCaE1DVlZNeEhUQWJCZ05WQkFvVEZGTjViV0Z1ZEdWaklFTnZjbkJ2Y21GMGFXOXVNUjh3DQpIUVlEVlFRTEV4WlRlVzFoYm5SbFl5QlVjblZ6ZENCT1pYUjNiM0pyTVRJd01BWURWUVFERXlsVGVXMWhiblJsDQpZeUJEYkdGemN5QXpJRk5UVUNCSmJuUmxjbTFsWkdsaGRHVWdRMEVnTFNCSE16QWVGdzB4TmpBNE1ESXdNREF3DQpNREJhRncweU5EQTVNamd5TXpVNU5UbGFNSUdETVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUDQpMaUJIYjNabGNtNXRaVzUwTVJRd0VnWURWUVFMRXd0VkxsTXVJRk5sYm1GMFpURW5NQ1VHQTFVRUN4TWVUMlptDQphV05sSUc5bUlIUm9aU0JUWlhKblpXRnVkQ0JoZENCQmNtMXpNUnN3R1FZRFZRUURFeEpUWlc1aGRHVWdVRWxXDQpMVWtnUTBFZ1J6UXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDdU1zcmh2YUQrDQp6UTh0OUQ1WmUzWVpoU1hoTmcwc2VoWkpBdlN1TGMxZ3diN2pqcEEwWmtFMkl5bVdyM2hlajk0TWwzeXREN3luDQpEbXRwTHVBbThhVk9DR05FdmUrcGNPUXBhd2dLWC9pWkI1KzZlZ2ZPaStKU3FQTkplSnhscmt4NTR1NUhRaVZpDQozSUt5Q1FMeWZmczY3bWt5MElPdjNsbjdmN0FFU0svVHJPZUI5Q1pINTJrTGxkZUJKc0ZzSy9NamZxeGUzdzRUDQphcUJkTll6aTl3cWpuSGs3eURBcUt1UWh2VmxDSWV0MURsUFA4U1FYOXFFblhoYno4bVkxZThyQ1VyejhKYmlwDQpTUjVVY1g4YjEzSFBIZHRxVThRMDZKcytqVVBGekp6Mmh4Z2RVSTdFUXpRQ0pRNGtaMjF2bGI5U2hUVGFRd0tmDQpEdnJ5SlA2SVBmTUZBZ01CQUFHamdnSG9NSUlCNURBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1JR0FCZ05WDQpIU0FFZVRCM01BOEdEV0NHU0FHRytFVUJCeGNEQVFZd0R3WU5ZSVpJQVliNFJRRUhGd01CQnpBUEJnMWdoa2dCDQpodmhGQVFjWEF3RU5NQThHRFdDR1NBR0crRVVCQnhjREFRNHdEd1lOWUlaSUFZYjRSUUVIRndNQkR6QVBCZzFnDQpoa2dCaHZoRkFRY1hBd0VSTUE4R0RXQ0dTQUdHK0VVQkJ4Y0RBUkl3Z1lrR0NDc0dBUVVGQndFQkJIMHdlekFuDQpCZ2dyQmdFRkJRY3dBWVliYUhSMGNEb3ZMM056Y0MxdlkzTndMbk41YldGMWRHZ3VZMjl0TUZBR0NDc0dBUVVGDQpCekFDaGtSb2RIUndPaTh2YzNOd0xXRnBZUzV6ZVcxaGRYUm9MbU52YlM5VFZFNVRVMUF2UTJWeWRITmZhWE56DQpkV1ZrWDNSdlgwTnNZWE56TTFOVFVFTkJMVWN6TG5BM1l6QkVCZ05WSFI4RVBUQTdNRG1nTjZBMWhqTm9kSFJ3DQpPaTh2YzNOd0xXTnliQzV6ZVcxaGRYUm9MbU52YlM5VFZFNVRVMUF2UTJ4aGMzTXpVMU5RUTBGSE15NWpjbXd3DQpEZ1lEVlIwUEFRSC9CQVFEQWdFR01Da0dBMVVkRVFRaU1DQ2tIakFjTVJvd0dBWURWUVFERXhGVGVXMWhiblJsDQpZMUJMU1MweUxUVTVNekFkQmdOVkhRNEVGZ1FVMnlwcmhOcVZYekpXcjFiRmdnc2xLbW04Q0hvd0h3WURWUjBqDQpCQmd3Rm9BVU5TWjlVSlhob2NHOUJkWERuWGRDeHd3VGxvd3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5XDQpmY1RtdDdJandMQVppNUVHTGFpMVd5R1ZVOTQ3RWc4NFArMnFnbmpKWHVwVlBlSFdIUi9JODJ1Vm5sbCttd05VDQo5TkJnKzk1anhnSnZVWU84MVRtR2FvdVZFcmFtWElHT1UxZE85eU8yUXNtaEF6TUlWb2dyQmNnQXh4YVNyVWJGDQpla3FSUjBYS1RRbStZemtuVXNBdUJOWWtGWjI0S2RjQVVMRldIbFAyNmhWMlZKRU0zTHRySmRJak9JUHo4R29QDQpUc0dkenhIek5JTlVPS1FoN0E2UWpVeWF2bm9nWjVSVzc5cTdmMmhGUU5kM1Rsa2F6ejFTQ3d3Uk5tSFc5eWFCDQpZeDZ5eTJIK3NyNTM2TGc3ajZRNU5PeXU4WmFBQlFhdkpLaXI3ZndHeW82Q3dVTzBFSUp3bm03ZjR3Ymc3Z29mDQpBTU9BaFBLcWVoNzZmdVJaU1lVPQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
  2-SureID_CA1.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGU3pDQ0JET2dBd0lCQWdJUVkxTkRPOFZmdnk1VkNyQlpUV3psd3pBTkJna3Foa2lHOXcwQkFRc0ZBRENCDQpnVEVMTUFrR0ExVUVCaE1DVlZNeEhUQWJCZ05WQkFvVEZGTjViV0Z1ZEdWaklFTnZjbkJ2Y21GMGFXOXVNUjh3DQpIUVlEVlFRTEV4WlRlVzFoYm5SbFl5QlVjblZ6ZENCT1pYUjNiM0pyTVRJd01BWURWUVFERXlsVGVXMWhiblJsDQpZeUJEYkdGemN5QXpJRk5UVUNCSmJuUmxjbTFsWkdsaGRHVWdRMEVnTFNCSE16QWVGdzB4TmpBeE1Ua3dNREF3DQpNREJhRncweU5EQTVNamd5TXpVNU5UbGFNRlV4Q3pBSkJnTlZCQVlUQWxWVE1SVXdFd1lEVlFRS0V3eFRkWEpsDQpTVVFzSUVsdVl5NHhGVEFUQmdOVkJBc1RERk4xY21WSlJDQlFTVll0U1RFWU1CWUdBMVVFQXhNUFUzVnlaVWxFDQpJRWx1WXk0Z1EwRXhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZaTGkzbitXDQpDV0RLeGRtaXhSbVludkxCcHhqeXU3VkNieVRpZW43ZVhrdWlLTWlZUUZuN05NbUFYNVp5TXkxTXF2Umc3QkhuDQpUdmNTblFUZ2RyZkViWDQ3Yi92eXRIbmtzclQvdkx5UTBOYTJ5K3B5NncvZ3hqaXJZc2RvVWRmTTB0b08zYUZTDQo4a3FHU0dKNjNCUE10ZXF3U1Y5M3RiVWFFL0k4a25QeTdvWXhNS0NNQStjVTBoTmxNdnB5WVcydGhYZXRJelBTDQpnYzIvVXV3UC9pcmhUQTNvZ3VpQS9LUThMUnpNTkZDbkxrM08xdGlxeERpSXA3V0pFbFJqV3FWZkl0ekJJT1VwDQpvTXBvYzh5OGtwaXROemRTa25GU0ZXMFRwZmEwWFNuTzloVVptakFyeXhtSXp0TDlCdzZ5SkVOc3d4bnhOM0trDQp6WjgyUWl4TndaUnJpd0lEQVFBQm80SUI2RENDQWVRd0VnWURWUjBUQVFIL0JBZ3dCZ0VCL3dJQkFEQ0JnQVlEDQpWUjBnQkhrd2R6QVBCZzFnaGtnQmh2aEZBUWNYQXdFR01BOEdEV0NHU0FHRytFVUJCeGNEQVFjd0R3WU5ZSVpJDQpBWWI0UlFFSEZ3TUJEVEFQQmcxZ2hrZ0JodmhGQVFjWEF3RU9NQThHRFdDR1NBR0crRVVCQnhjREFROHdEd1lODQpZSVpJQVliNFJRRUhGd01CRVRBUEJnMWdoa2dCaHZoRkFRY1hBd0VTTUlHSkJnZ3JCZ0VGQlFjQkFRUjlNSHN3DQpKd1lJS3dZQkJRVUhNQUdHRzJoMGRIQTZMeTl6YzNBdGIyTnpjQzV6ZVcxaGRYUm9MbU52YlRCUUJnZ3JCZ0VGDQpCUWN3QW9aRWFIUjBjRG92TDNOemNDMWhhV0V1YzNsdFlYVjBhQzVqYjIwdlUxUk9VMU5RTDBObGNuUnpYMmx6DQpjM1ZsWkY5MGIxOURiR0Z6Y3pOVFUxQkRRUzFITXk1d04yTXdSQVlEVlIwZkJEMHdPekE1b0RlZ05ZWXphSFIwDQpjRG92TDNOemNDMWpjbXd1YzNsdFlYVjBhQzVqYjIwdlUxUk9VMU5RTDBOc1lYTnpNMU5UVUVOQlJ6TXVZM0pzDQpNQTRHQTFVZER3RUIvd1FFQXdJQkJqQXBCZ05WSFJFRUlqQWdwQjR3SERFYU1CZ0dBMVVFQXhNUlUzbHRZVzUwDQpaV05RUzBrdE1pMHlPVEl3SFFZRFZSME9CQllFRkFMQ0JtMnc1d3lhZW1XNnBRV1VzVE5vd0xTWU1COEdBMVVkDQpJd1FZTUJhQUZEVW1mVkNWNGFIQnZRWFZ3NTEzUXNjTUU1YU1NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUExDQpRNmdUMzRXUi9LSGh3ZFhiK2xEV1J5R0pRb0lweEQwTGlZSzFiQVNCY1RZUDRyUE1Zd2w4YzIwMzBtUExlU1p0DQpEUDlUOFV4TXZKL2tZc2pDZFZqL2M2QnFTMHh4aW1Oc2tZSE9XOHNVZU84WE1Ra2JuTmlJWWF4TVowTmFNQ2phDQptaDdyT1VkZlZkZ2c3c1cxMWxRMnFWZnN2aUc4RUcrN0JtQTlldFZ0cFRXem5yMWFpaXQ0ck13RjJkUHE5NGZpDQpLT2c3eDlnTm1vNmV2Nk90QlZYWkIvQmF5ZzRuelBsUlFrMkxNRWFOenZEQmdQSkh1ZUh1L3g5RStuTXpkZ09mDQpEVjRKZUJQaGNMWHMydEtBSWdHaXRBUnZUR3RCd2U4NW8xR292U3lTMkdSUDR4NjdwM2NvMGlvZDcwY3l4ZHVJDQpTd1hnQ055WlNUcnhxT2Z0Uk11Nw0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-digicert-nfi-trust-chain-2
  namespace: default
data:
  0-DigiCert_Non_Federal_SSP_Private_Root_CA_G2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHTVRDQ0JCbWdBd0lCQWdJUUZXTThmS2pDVnowUktJNUEwdEJObURBTkJna3Foa2lHOXcwQkFRc0ZBREJlDQpNUXN3Q1FZRFZRUUdFd0pWVXpFWE1CVUdBMVVFQ2hNT1JHbG5hVU5sY25Rc0lFbHVZeTR4TmpBMEJnTlZCQU1UDQpMVVJwWjJsRFpYSjBJRTV2YmlCR1pXUmxjbUZzSUZOVFVDQlFjbWwyWVhSbElGSnZiM1FnUTBFZ0xTQkhNakFlDQpGdzB5TURBNE1qQXdNREF3TURCYUZ3MDBNREE0TVRreU16VTVOVGxhTUY0eEN6QUpCZ05WQkFZVEFsVlRNUmN3DQpGUVlEVlFRS0V3NUVhV2RwUTJWeWRDd2dTVzVqTGpFMk1EUUdBMVVFQXhNdFJHbG5hVU5sY25RZ1RtOXVJRVpsDQpaR1Z5WVd3Z1UxTlFJRkJ5YVhaaGRHVWdVbTl2ZENCRFFTQXRJRWN5TUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGDQpBQU9DQWc4QU1JSUNDZ0tDQWdFQXlPUExLNzl1b0ozQXEwMm1ybkxHcGhBeDJxU3ZjL3JERUxmUTJRTE9yTnRVDQoxeHJsZmpNOFlSOEovMVZJVURGK0JYZy9QOVE5azVVb0tvanQxQW9vOXpGV3B3cWs0eXVxTXU1dHBYY3kwcU8rDQpQQzlaMUZHY0NocUlrSWt6VzZZRloyRzNVN1RFdWEzWkswcjJLTjNoVnh4emJkaGJWdy9kbUZXb2N6WldyUTdrDQpuTVB3NFUxVUJ0N1NWKzQ4djQ5andKVHFSbUJRMzR4aTBUUExuQ09SQTRWa1Uzay9GWHBMWXBIcndqWkdmbVFtDQplRFUrQ2JWMkk3aFpiay9SMHdxaWhlQ2dGaXNZWWo3OE45cVdObk1WbkdzTGs2L1IwdmtrdXFOME1VVHNKTndnDQpBem5zUTUrcXh6Uks2Qzg3MUVteHEyRmJuaXN5WGZzSkVyOVcvSHZiY202eGNVNmxTSVhVbEg4bVhMVkloNlZzDQo0cUkxcWw0aTdSdVhaYzZCNUpjU3d2eUFaSjNIZG4ybUlRTFc4MDh2MDg0MmJUQmZMWHgvNlJFeC9iOGk5WUhxDQpwV2NkR1poa0dXb3VYd0tZRUtnd1ZUbGE0RXRqek9LbG54dFhtZDUzWGsrcE1NV3h3WklYU0FZOGlCVkgvcUVpDQpTaFNMc1VNUUFVZjNUL1ZSbE9sNnQzME9hWnZWUUVsL3NySUhRL3UvSElraytxMEhIUjBucnh1ZHhrenNqOXd0DQpLSUJPcCtEbitBYXVBSmxaU1NxTlZBQXBlZEJMQmJjSWkzUVJ4OWVCUzNYOFJhK3kzL2YxbGZlQ3hNOUpkQUhXDQp6V0xjNTVkdmdlVXlHRkxZNnB3VXk4YTFSS2Zrbm1SU0RXTFZtUyt3RnFlL2ZLN0s2bWc1QzFITURJRitXM3NDDQpBd0VBQWFPQjZqQ0I1ekFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIvd1FFQXdJQkJqQjhCZ2dyDQpCZ0VGQlFjQkN3UndNRzR3YkFZSUt3WUJCUVVITUFXR1lHaDBkSEE2THk5emMzQnphV0V1WkdsbmFXTmxjblF1DQpZMjl0TDFOVVRsTlRVQzlEWlhKMGMxOUpjM04xWldSZllubGZSR2xuYVVObGNuUkRiR0Z6Y3pOT2IyNUdaV1JsDQpjbUZzVTFOUVVISnBkbUYwWlZKdmIzUkRRVWN5TG5BM1l6QW5CZ05WSFJFRUlEQWVwQnd3R2pFWU1CWUdBMVVFDQpBeE1QVFZCTFNTMDBNRGsyTFRFdE1qYzRNQjBHQTFVZERnUVdCQlJEOStqdXVDN1dtZ29sSHdVOW11ek1kOFhWDQpsekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBRzVFejJSNlQzWWZhSDc0Z3Jub2pscXhzS0Q5dWl4T09jQ0E3DQp3akpxSHpNMlBGYnZsaEcyd0tQaXJTQVZ2RGlhamZkdVpWZVFVaTFvdnAyaHBpYWlIdmVjMytNcW9Hb1RnYmt1DQowS2ErdFhsd1h5WDJ2S29JZTdZOHpNRmVaWjY4ZzBjZThJN2luQjNsVUszdmFLeVdVQ2dXc3FiYWZaWUtiSEZ0DQphSEF5OTA0UWYzUjFEZmVudXdMbVlyNmsvMUpvaElNTTNscVQ5dXhWcWxrWU16US8xb3BLV1BSUlhNZEFMYlpEDQpKTzRDTXFBRzZaQ3lkNzZXcmJSZlB1elcwZVlmN1R6NjR4T1hZY3VGdTdtUzlIQklsY1E4N09DdUN2Sis2YVhrDQp4eU95ZDY1M25FMTc1alh0ZnNPelMrVER3L3RVaWQwV3piSG14TjFqNW10SEhXbDRGMzQwMUhwbEVxWmhrbUMxDQpLN1dMbGliVlVFanJJY3lMNGYrMWhPTm1JNDJ5NFZ1bDlkV2tvcFdQay9tME1wTzYxa2VYU003S3g4ZTN3NC80DQpEa3g3T1piRWU3Tllwb2RUZHcvRmE0UlU3Tm95L2FtM2VmeDZzTEg0aEhiV2Y4ZndzWjlzcXhjRGNSRmkzWE5GDQp4TU1iSGs5elJYdFpTbGxmMFNraG1DTkVvVHVCUHZ6WUhiSVJrczM5QW9id1ZFZ1dLTWxhL21QSndZcmRaZE9pDQoyemxvcVBCQ3IxTzFrL0t4YmdwUVl0OUZqUVVLSVhudTZDK2NuWG9KTzRObkl3RjBlNFBoZVFnaUNaSWZRMVl3DQpHT0xSUlA0VmRUQkpVemYyaXV5c1ZQYkxXczNBR2thM2JQcGdPZ3Vzc0NsNnh5WGVidllCK2dmUmU2am9zTTRnDQpRdU12Qkc0PQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
  1-DigiCert_C3_SSP_Intermediate_CA_G4.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHdnpDQ0JLZWdBd0lCQWdJUVVpWEg3Sk44aTJ2QmNLREw2MDZzcXpBTkJna3Foa2lHOXcwQkFRc0ZBREJlDQpNUXN3Q1FZRFZRUUdFd0pWVXpFWE1CVUdBMVVFQ2hNT1JHbG5hVU5sY25Rc0lFbHVZeTR4TmpBMEJnTlZCQU1UDQpMVVJwWjJsRFpYSjBJRTV2YmlCR1pXUmxjbUZzSUZOVFVDQlFjbWwyWVhSbElGSnZiM1FnUTBFZ0xTQkhNakFlDQpGdzB5TURBNE1qQXdNREF3TURCYUZ3MHpNREE0TVRreU16VTVOVGxhTUZveEN6QUpCZ05WQkFZVEFsVlRNUmN3DQpGUVlEVlFRS0V3NUVhV2RwUTJWeWRDd2dTVzVqTGpFeU1EQUdBMVVFQXhNcFJHbG5hVU5sY25RZ1EyeGhjM01nDQpNeUJUVTFBZ1NXNTBaWEp0WldScFlYUmxJRU5CSUMwZ1J6UXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCDQpEd0F3Z2dFS0FvSUJBUUNtemFLditLSHFFUDNGc2pDb0o2Z1QrMGppdE82NGZlZTBhQ3NvWk1vUm5aY3BISDZNDQovUncwU1FrNjlKcyt3ZE95SWtNOVpiWkcrNCt6aG56V3EvT2RyaUVGbG5Pc2FaMEZpcmVxaS9yYXdIbFZJSEkzDQo1L1NSSTNFbGR6R3Jtbit2elg1ekdGOUFDL0l5Mi9wSm5jWThDb3ptRVppNDdrYjJ0SlQvMzQrRnBjWTlMc2JQDQpQa3dPN3ZRT0F2bTZURHdKdFpJcTNuSXhTZ2daWDFBZklFWXdNaitVT2kyTnQ2dU1ra0lGYTFLelp5NXQ4YjNvDQpFNXc2WWdUcTN0L3hTYTZaRWdMcW9LY1YrdTFLd3l2cG55aWR4cU4rTC95ZEtCdnpFZ204Z09ZSjdJR1dBbElqDQp2MG1RbkVmcHVheTZhZDk3WENZSFM5dUhXK2htamZCUWxZeXRBZ01CQUFHamdnSjdNSUlDZHpBUEJnTlZIUk1CDQpBZjhFQlRBREFRSC9NR0VHQTFVZEh3UmFNRmd3VnFCVW9GS0dVR2gwZEhBNkx5OXpjM0F0WTNKc0xuTjViV0YxDQpkR2d1WTI5dEwxTlVUbE5UVUM5RWFXZHBRMlZ5ZEVOc1lYTnpNMDV2YmtabFpHVnlZV3hUVTFCUWNtbDJZWFJsDQpVbTl2ZEVOQlJ6SXVZM0pzTUE0R0ExVWREd0VCL3dRRUF3SUJCakNCcEFZRFZSMGdCSUdjTUlHWk1BOEdEV0NHDQpTQUdHK0VVQkJ4Y0RBUVl3RHdZTllJWklBWWI0UlFFSEZ3TUJCekFQQmcxZ2hrZ0JodmhGQVFjWEF3RUlNQThHDQpEV0NHU0FHRytFVUJCeGNEQVE0d0R3WU5ZSVpJQVliNFJRRUhGd01CRHpBUEJnMWdoa2dCaHZoRkFRY1hBd0VSDQpNQThHRFdDR1NBR0crRVVCQnhjREFSSXdEd1lOWUlaSUFZYjRSUUVIRndNQkZEQVBCZzFnaGtnQmh2aEZBUWNYDQpBd0VrTUdBR0NDc0dBUVVGQndFTEJGUXdVakJRQmdnckJnRUZCUWN3QllaRWFIUjBjRG92TDNOemNITnBZUzVrDQphV2RwWTJWeWRDNWpiMjB2VTFST1UxTlFMME5sY25SelgwbHpjM1ZsWkY5aWVWOURiR0Z6Y3pOVFUxQkRRUzFIDQpOQzV3TjJNd2ZRWUlLd1lCQlFVSEFRRUVjVEJ2TUcwR0NDc0dBUVVGQnpBQ2htRm9kSFJ3T2k4dmMzTndMV0ZwDQpZUzVrYVdkcFkyVnlkQzVqYjIwdlUxUk9VMU5RTDBObGNuUnpYMGx6YzNWbFpGOTBiMTlFYVdkcFEyVnlkRU5zDQpZWE56TTA1dmJrWmxaR1Z5WVd4VFUxQlFjbWwyWVhSbFVtOXZkRU5CUnpJdWNEZGpNQ2tHQTFVZEVRUWlNQ0NrDQpIakFjTVJvd0dBWURWUVFERXhGRWFXZHBRMlZ5ZEZCTFNTMHpMVEV3T1RBZEJnTlZIUTRFRmdRVXRlMHVsZ1JMDQpxUmowOUwwUzhXT0ZoSmRmUGxvd0h3WURWUjBqQkJnd0ZvQVVRL2ZvN3JndTFwb0tKUjhGUFpyc3pIZkYxWmN3DQpEUVlKS29aSWh2Y05BUUVMQlFBRGdnSUJBTWVEZ25tMFloSjZMNlg4SXoxV3AwQVcrUHFrRW8wT3lDZU95UVRpDQpnVDVhZ2VhRzFBNDB1RUF3WmdkVC9pc0tnSHVIbFhTZU1JaFZxMDdFSnBrVDk1SEdDVUtIOU90Mm5KRkIrdHB5DQpVSXlwRW82aXlqMWRBblJ3ay9BQzQ5RkVZd1FDWUlrT3FXdWQrZ3dERDVsSzNTTGU5RnVMS2U2ajhzaGFCcFNmDQplRXJTbGF5eUZUeXdmWlpxNWlZa1d3MFBvanhpS1N0aTV2enE1SUd4aER2MndqN3ZTRUpsRyt4UEU3WHZvb2pnDQpNM3lEQTNjQmlHOTVpQnRETHlyRnRHazR1dnBtMzhPWC9pcWJTZW8zNWtWajBrUThCbFYraUJjOWhLMm1qYUdlDQpXcGo2NWF6NTYzRWc4c1MwU3VrYnh5Mk90ZkUydmRvQnUyNk5hc3NWTzJMSmNYTEtEVllqaVlvY2k4ZVZZZzNtDQplK3h5Ymp5bWlXeFYrVUY2RkQxRCtTaURjWVpna2ZJa1ZaMzJnUFlWSDRpenNFVFVyMUp4dGI1ajBzT25GWUVvDQp1aUhzblUwN04rSzA3V285bWpIS2NuNG1QSzc1Tml5RkhsbFRmdy9xMHlSSEkwUUxpUnZvS1VCdmFlOGk3ZHF2DQpaRFNFNGZQVThlaUZzTnZOQjFUYisrQmltZ2JicDk5bUIwMlNFVXM5VXBUaTJkOURqVURMMXduM1VrUm12dS91DQptcEsrMkw5aEQ5RER4eW96S3JqaXBHM3dLcE8vV092RWdHRzFxUmpuTkRYZnR5WFlVOVBWeVg5eE16MFZCVDdTDQp5dGlVekFEOWhzb2lNeEJiMFkxVU1vcWlGOGlqTkJ5VWZVcSt2L3V0Wmt4amlFbjlyaFltY0EzeXNOZVZrQXlYDQo4Y2R5DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
  2-Senate_PIV-I_CA_G5.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZXRENDQkVDZ0F3SUJBZ0lRTHV4aEh5S1VUNTFHS2xxTHZ1QmtoVEFOQmdrcWhraUc5dzBCQVFzRkFEQmEKTVFzd0NRWURWUVFHRXdKVlV6RVhNQlVHQTFVRUNoTU9SR2xuYVVObGNuUXNJRWx1WXk0eE1qQXdCZ05WQkFNVApLVVJwWjJsRFpYSjBJRU5zWVhOeklETWdVMU5RSUVsdWRHVnliV1ZrYVdGMFpTQkRRU0F0SUVjME1CNFhEVEl4Ck1ETXlOVEF3TURBd01Gb1hEVE13TURneE9ESXpOVGsxT1Zvd2dZZ3hDekFKQmdOVkJBWVRBbFZUTVJnd0ZnWUQKVlFRS0V3OVZMbE11SUVkdmRtVnlibTFsYm5ReEZEQVNCZ05WQkFzVEMxVXVVeTRnVTJWdVlYUmxNU2N3SlFZRApWUVFMRXg1UFptWnBZMlVnYjJZZ2RHaGxJRk5sY21kbFlXNTBJR0YwSUVGeWJYTXhJREFlQmdOVkJBTVRGMU5sCmJtRjBaU0JRU1ZZdFNTQkRRU0JITlNCUVVrOUVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUIKQ2dLQ0FRRUF3ZTl0R0tFdWFoTjl1dnY2UmhnOFhuMitkeFNIeWRndDI2cHlHMDRWVGpjL2JBbWpXVGpkVktNMgoxd05DVjladHMvZHN3MTFsSzBQR1pjUjIybm9GWGR1NlFPVnVPZklGSmY5MDF3NnVxZDhqZkgzaXpEVCtiWmI1CmVIMnV4S3FSTkpvQzAwbG8vbVZJK3hWdnBoVS9sSjVPSS9TeUhlMGNITjUvcnJPaFU3OEhndTFZYVgvcnl6SjcKY3ZsS2hERGlUOUZIWTVRa1RkdTRDaFVtaHVUWFA4RVZqaUZ2amt0aW1JdTJtRWhrc2N4NDRqaDQ4UUNWOGFlegpHQnlaTHoyelRTYjRqbmZUQUN0VlloNGxFMkxGSkdaR0hXekFULzAyVk9lQTZMdE56SkprK3Jvajc1WDBaVHMwClBMNlRabnptaTUwUlpYRkIwcTVhUlJjbmlaT2tDUUlEQVFBQm80SUI2VENDQWVVd0RnWURWUjBQQVFIL0JBUUQKQWdFR01JR0tCZ2dyQmdFRkJRY0JBUVIrTUh3d0tBWUlLd1lCQlFVSE1BR0dIR2gwZEhBNkx5OXpjM0F0YjJOegpjQzVrYVdkcFkyVnlkQzVqYjIwd1VBWUlLd1lCQlFVSE1BS0dSR2gwZEhBNkx5OXpjM0F0WVdsaExtUnBaMmxqClpYSjBMbU52YlM5T1JsTlRVQzlEWlhKMGMxOXBjM04xWldSZmRHOWZRMnhoYzNNelUxTlFRMEV0UnpRdWNEZGoKTUJJR0ExVWRFd0VCL3dRSU1BWUJBZjhDQVFBd2dZQUdBMVVkSUFSNU1IY3dEd1lOWUlaSUFZYjRSUUVIRndNQgpCakFQQmcxZ2hrZ0JodmhGQVFjWEF3RUhNQThHRFdDR1NBR0crRVVCQnhjREFRMHdEd1lOWUlaSUFZYjRSUUVICkZ3TUJEakFQQmcxZ2hrZ0JodmhGQVFjWEF3RVBNQThHRFdDR1NBR0crRVVCQnhjREFSRXdEd1lOWUlaSUFZYjQKUlFFSEZ3TUJFakJFQmdOVkhSOEVQVEE3TURtZ042QTFoak5vZEhSd09pOHZjM053TFdOeWJDNWthV2RwWTJWeQpkQzVqYjIwdlRrWlRVMUF2UTJ4aGMzTXpVMU5RUTBGSE5DNWpjbXd3S1FZRFZSMFJCQ0l3SUtRZU1Cd3hHakFZCkJnTlZCQU1URVVScFoybERaWEowVUV0SkxUTXRNekEyTUIwR0ExVWREZ1FXQkJRdSs4Q01xMTlYNEludzZ2Nm4KWkQwVWtDZnd4akFmQmdOVkhTTUVHREFXZ0JTMTdTNldCRXVwR1BUMHZSTHhZNFdFbDE4K1dqQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBcEhZL1J6c0V5NzBScGZ1eTI1NU5JZlR0T016T0NZNTlnaTlkWE9mS1pQYm9lRkFkClB1cEQ4Y0NOOVp4RWE5WEdtMnd4YXk2a3lKaHhGenRzUFh4cWttai9xazNWY1JNYmtXQW5tbVd4Yk5SYWxoRnMKTEtNbnFOMFlrL29TYVFoWDFDV09ES3BLM2laMU95b2RhOUN3RnJvZUtSODd4Y0NIWjhoeHZQTHcxVE1sZTF6TwpUbHl5N0QydkQ0anRVNXB6ekxJY1pmamRMOXh5ZGViMDBFbHJFY0VVRzNkc1M5WUJvZDhoZkl6ODRzN1VmZmFMCjZJZ3IrdUJmYWxIanpoak9kQnRWaXRscFNXMmdrajUzNUJqd01PNXlHdGZ6Mmo4emE0K3BIUGhTc3A2RUVyV3oKVUg5Y3g0eVBYNlVvZVFuMTZzOFgyUk5FUi9KWjV0K290WVJldmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-entrust-federal-ssp-trust-chain-1
  namespace: default
data:
  0-Entrust_Managed_Services_Root_CA_rekey2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHVURDQ0JUaWdBd0lCQWdJRVJJQmk5REFOQmdrcWhraUc5dzBCQVFzRkFEQnVNUXN3Q1FZRFZRUUdFd0pWDQpVekVRTUE0R0ExVUVDaE1IUlc1MGNuVnpkREVpTUNBR0ExVUVDeE1aUTJWeWRHbG1hV05oZEdsdmJpQkJkWFJvDQpiM0pwZEdsbGN6RXBNQ2NHQTFVRUN4TWdSVzUwY25WemRDQk5ZVzVoWjJWa0lGTmxjblpwWTJWeklGSnZiM1FnDQpRMEV3SGhjTk1UVXdOekl6TVRZd05qTTJXaGNOTWpVd056SXpNVFl6TmpNMldqQnVNUXN3Q1FZRFZRUUdFd0pWDQpVekVRTUE0R0ExVUVDaE1IUlc1MGNuVnpkREVpTUNBR0ExVUVDeE1aUTJWeWRHbG1hV05oZEdsdmJpQkJkWFJvDQpiM0pwZEdsbGN6RXBNQ2NHQTFVRUN4TWdSVzUwY25WemRDQk5ZVzVoWjJWa0lGTmxjblpwWTJWeklGSnZiM1FnDQpRMEV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ1lxS042S053NHpZTEtnaTZZDQpPb2l1dzZLLzllL2JuN0QyZ05sQVF4UFp0R3Ztdmh6SU94MlVlSER3aG1Ga2l2TnkyZmdJcjg1L2JyUWZLZ3VrDQpXZ3BjRVM5RGwyR3Bjc25PWERTbStjQXRHSnJFVjYvRWN2Nm8rejJxbTBZUk9ETkVhTUY0QU5MbC9IOTV5ZlI0DQpsNTRhSStNWDZyeHpUblR2K2ovUXB0TDNaeUplOExuUW9lSUhyNjlKbzIxZTZla0dSdGxZSjlMOHI1cW43cy9iDQpGOUtaL2Frc1dlQjIxZDF3Y2kzZElJcE41Yk04cjVZblFMRWpqemczNVNzYnFCRWZ0MS9Rdmd4RGJFV1RXOS9JDQpJajVoV3JweUJWZTIzcEp3TnRFV2x1dkZ4aHpRejN4SjBVMVpCUlFYeVNWSGJ4MGswU3lSbGhoRnY2cmljb29FDQpUaHRKQWdNQkFBR2pnZ0wwTUlJQzhEQ0NBU0FHQ0NzR0FRVUZCd0VMQklJQkVqQ0NBUTR3VHdZSUt3WUJCUVVIDQpNQVdHUTJoMGRIQTZMeTl5YjI5MGQyVmlMbTFoYm1GblpXUXVaVzUwY25WemRDNWpiMjB2VTBsQkwwTkJZMlZ5DQpkSE5KYzNOMVpXUkNlVVZOVTFKdmIzUkRRUzV3TjJNd2dib0dDQ3NHQVFVRkJ6QUZob0d0YkdSaGNEb3ZMM0p2DQpiM1JrYVhJdWJXRnVZV2RsWkM1bGJuUnlkWE4wTG1OdmJTOXZkVDFGYm5SeWRYTjBKVEl3VFdGdVlXZGxaQ1V5DQpNRk5sY25acFkyVnpKVEl3VW05dmRDVXlNRU5CTEc5MVBVTmxjblJwWm1sallYUnBiMjRsTWpCQmRYUm9iM0pwDQpkR2xsY3l4dlBVVnVkSEoxYzNRc1l6MVZVejlqUVVObGNuUnBabWxqWVhSbE8ySnBibUZ5ZVN4amNtOXpjME5sDQpjblJwWm1sallYUmxVR0ZwY2p0aWFXNWhjbmt3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFPQmdOVkhROEJBZjhFDQpCQU1DQVFZd2dnR0lCZ05WSFI4RWdnRi9NSUlCZXpDQjdxQ0I2NkNCNklZMmFIUjBjRG92TDNKdmIzUjNaV0l1DQpiV0Z1WVdkbFpDNWxiblJ5ZFhOMExtTnZiUzlEVWt4ekwwVk5VMUp2YjNSRFFUSXVZM0pzaG9HdGJHUmhjRG92DQpMM0p2YjNSa2FYSXViV0Z1WVdkbFpDNWxiblJ5ZFhOMExtTnZiUzlqYmoxWGFXNURiMjFpYVc1bFpESXNiM1U5DQpSVzUwY25WemRDVXlNRTFoYm1GblpXUWxNakJUWlhKMmFXTmxjeVV5TUZKdmIzUWxNakJEUVN4dmRUMURaWEowDQphV1pwWTJGMGFXOXVKVEl3UVhWMGFHOXlhWFJwWlhNc2J6MUZiblJ5ZFhOMExHTTlWVk0vWTJWeWRHbG1hV05oDQpkR1ZTWlhadlkyRjBhVzl1VEdsemREdGlhVzVoY25rd2dZZWdnWVNnZ1lHa2Z6QjlNUXN3Q1FZRFZRUUdFd0pWDQpVekVRTUE0R0ExVUVDaE1IUlc1MGNuVnpkREVpTUNBR0ExVUVDeE1aUTJWeWRHbG1hV05oZEdsdmJpQkJkWFJvDQpiM0pwZEdsbGN6RXBNQ2NHQTFVRUN4TWdSVzUwY25WemRDQk5ZVzVoWjJWa0lGTmxjblpwWTJWeklGSnZiM1FnDQpRMEV4RFRBTEJnTlZCQU1UQkVOU1RERXdIUVlEVlIwT0JCWUVGS2xUdm1TRWcwdGRKc1luUGk3UmhHaFZQTkIxDQpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJFTUwrMjhJNDc3NExqc2k5VVFWdWlKOHJNbjN2V3hxaFNncldoDQpPVFNLRWdIZ21xQUF6L0RTd2s5bFdTdDNNS2hYc0lZaXVkVzdwYUI0aEl4dlB1cnBPWXAxaU9UbjJKZXNQT0tODQpjVjg2NWF1aCtMRnIvd0JHRFlsVU1yL1gwam5tRlZxSEhHQm41RXY1T2dwV3gweDZZRHAwUHZVRk5Bek5NTkhpDQo2M2VwcUpkOWFOd2F1N29XUXF0dlczOEkxZlp6ZFQvYmQzQjN6QnRKUnBiamlKVkVlYVg2U1VYck1UMm5vTXNODQoydkJXbysrNlhwbkI3TFVQTXg1blpRL0VJRjErczdObVg2eGp4VThxQk9qUExHL2x2VmYrMWJKMVJibWhZWG5IDQp5YzM3NEdmVTZLVE1CZkI0aFI2cGV0NytQZ0Z0WHViUmQwekk3TzlncWl3UWdacFUNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
  1-Entrust_Managed_Services_SSP_CA_rekey.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlIUVRDQ0JpbWdBd0lCQWdJRVJJQmoxVEFOQmdrcWhraUc5dzBCQVFzRkFEQnVNUXN3Q1FZRFZRUUdFd0pWDQpVekVRTUE0R0ExVUVDaE1IUlc1MGNuVnpkREVpTUNBR0ExVUVDeE1aUTJWeWRHbG1hV05oZEdsdmJpQkJkWFJvDQpiM0pwZEdsbGN6RXBNQ2NHQTFVRUN4TWdSVzUwY25WemRDQk5ZVzVoWjJWa0lGTmxjblpwWTJWeklGSnZiM1FnDQpRMEV3SGhjTk1UVXdOek13TVRZek56UTBXaGNOTWpVd056SXpNVFl6TmpNMldqQnRNUXN3Q1FZRFZRUUdFd0pWDQpVekVRTUE0R0ExVUVDaE1IUlc1MGNuVnpkREVpTUNBR0ExVUVDeE1aUTJWeWRHbG1hV05oZEdsdmJpQkJkWFJvDQpiM0pwZEdsbGN6RW9NQ1lHQTFVRUN4TWZSVzUwY25WemRDQk5ZVzVoWjJWa0lGTmxjblpwWTJWeklGTlRVQ0JEDQpRVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFPQVdwczg1QUhTSGE3aDhNcmEvDQp0Uy8vT2FPNlBqNHNva3hiSmM5cll2ZnpTZWV2SkR3MTN6d3VheVlYOWVTeEpxQzd2eWV2Q05yK0V0OHptM0YyDQpMSm51NjZEMWU1blZqNUhxUXRwNWZobjNqc2UxTTVhaWNGdVF1WmJRTnZlanhaK2RwenV3bUovNTZlUndMY1J0DQp0czZON3Z1NCtscWhmdFhNN0l0TnplSko5YnVPazZHNkoyUU1SZWRVNWtvdEFFYXBQVWRaNGY3bW9jNExZVmEwDQpnMndDYTBGQ0xmMjRxOWd2ZzRRbTBrWVd6MWVDWXJYdUdSYklYMkgxSTJkdUY1YWx2L2ViUE5CN2hrbVhkRkl5DQpuZUpyZEJSdnQwVCs3VW1INEVteS9KZGE1UzIyUE0xVU90bUc5UWJxbzlycE9tVTRMUm9tUHJQdEpQdnVZMENQDQpJUUVDQXdFQUFhT0NBK1l3Z2dQaU1BNEdBMVVkRHdFQi93UUVBd0lCQmpDQmlBWURWUjBnQklHQU1INHdEQVlLDQpZSVpJQVdVREFnRURCakFNQmdwZ2hrZ0JaUU1DQVFNSE1Bd0dDbUNHU0FGbEF3SUJBd2d3REFZS1lJWklBV1VEDQpBZ0VERFRBTUJncGdoa2dCWlFNQ0FRTVJNQXdHQ21DR1NBRmxBd0lCQXlRd0RBWUtZSVpJQVdVREFnRURKekFNDQpCZ3BnaGtnQlpRTUNBUU1vTUF3R0NtQ0dTQUZsQXdJQkF5a3dFZ1lEVlIwVEFRSC9CQWd3QmdFQi93SUJBRENDDQpBV01HQ0NzR0FRVUZCd0VCQklJQlZUQ0NBVkV3VFFZSUt3WUJCUVVITUFLR1FXaDBkSEE2THk5eWIyOTBkMlZpDQpMbTFoYm1GblpXUXVaVzUwY25WemRDNWpiMjB2UVVsQkwwTmxjblJ6U1hOemRXVmtWRzlGVFZOU2IyOTBRMEV1DQpjRGRqTUlHNkJnZ3JCZ0VGQlFjd0FvYUJyV3hrWVhBNkx5OXliMjkwWkdseUxtMWhibUZuWldRdVpXNTBjblZ6DQpkQzVqYjIwdmIzVTlSVzUwY25WemRDVXlNRTFoYm1GblpXUWxNakJUWlhKMmFXTmxjeVV5TUZKdmIzUWxNakJEDQpRU3h2ZFQxRFpYSjBhV1pwWTJGMGFXOXVKVEl3UVhWMGFHOXlhWFJwWlhNc2J6MUZiblJ5ZFhOMExHTTlWVk0vDQpZMEZEWlhKMGFXWnBZMkYwWlR0aWFXNWhjbmtzWTNKdmMzTkRaWEowYVdacFkyRjBaVkJoYVhJN1ltbHVZWEo1DQpNRU1HQ0NzR0FRVUZCekFCaGpkb2RIUndPaTh2YjJOemNDNXRZVzVoWjJWa0xtVnVkSEoxYzNRdVkyOXRMMDlEDQpVMUF2UlUxVFVtOXZkRU5CVW1WemNHOXVaR1Z5TUlJQmlBWURWUjBmQklJQmZ6Q0NBWHN3Z2U2Z2dldWdnZWlHDQpObWgwZEhBNkx5OXliMjkwZDJWaUxtMWhibUZuWldRdVpXNTBjblZ6ZEM1amIyMHZRMUpNY3k5RlRWTlNiMjkwDQpRMEV5TG1OeWJJYUJyV3hrWVhBNkx5OXliMjkwWkdseUxtMWhibUZuWldRdVpXNTBjblZ6ZEM1amIyMHZZMjQ5DQpWMmx1UTI5dFltbHVaV1F5TEc5MVBVVnVkSEoxYzNRbE1qQk5ZVzVoWjJWa0pUSXdVMlZ5ZG1salpYTWxNakJTDQpiMjkwSlRJd1EwRXNiM1U5UTJWeWRHbG1hV05oZEdsdmJpVXlNRUYxZEdodmNtbDBhV1Z6TEc4OVJXNTBjblZ6DQpkQ3hqUFZWVFAyTmxjblJwWm1sallYUmxVbVYyYjJOaGRHbHZia3hwYzNRN1ltbHVZWEo1TUlHSG9JR0VvSUdCDQpwSDh3ZlRFTE1Ba0dBMVVFQmhNQ1ZWTXhFREFPQmdOVkJBb1RCMFZ1ZEhKMWMzUXhJakFnQmdOVkJBc1RHVU5sDQpjblJwWm1sallYUnBiMjRnUVhWMGFHOXlhWFJwWlhNeEtUQW5CZ05WQkFzVElFVnVkSEoxYzNRZ1RXRnVZV2RsDQpaQ0JUWlhKMmFXTmxjeUJTYjI5MElFTkJNUTB3Q3dZRFZRUURFd1JEVWt3eE1COEdBMVVkSXdRWU1CYUFGS2xUDQp2bVNFZzB0ZEpzWW5QaTdSaEdoVlBOQjFNQjBHQTFVZERnUVdCQlJWdEd3elArTmdHcWYvdysyMDkrUUUyaW5RDQpZekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBSFFwQjhmZTZDai9EbHNSQm5QN0FLcWhSMlVGRUYrcE9GWGVjDQpTSVA1UjNCOGNWejlpcHBSaVpyTEZkblZmdkFqajN4RVFBeHFUSmxMTlZqY05HdEh1dmtsaG1lYnNYbENFb0htDQpnclJZdUFvQXlodTkySXlRMStjcTc3bU9scFZibUU2QXNYc1V2aDl6QlRsYXZzWEowUmhmUTQ5SkpENm5QdWRhDQpyTzhEbDZlaFRGcHhwekVxaGllR3NvNFhEdTN0TGwzWjZrT2UySGdmcDlDZEVmN3JSakpQZExwdi9SRkdQYnN4DQpZSjdWNGMxcnl4bmJDUDBJREY4encwT2N1dzA4dHZ0UDRZZFNpZCtGY1I3UG9HcUtYQlVkT0pSNkd3SVA2bjNGDQpGVmdvcTIvNG1NcloxWkRtejJtYlMvTzZ4ZGxsUmM5OWFIQTlNSHZicS9FcEU1ZHIzZz09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
  1-HHS_FPKI_Intermediate_CA_E1_rekey2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGM1RDQ0JNV2dBd0lCQWdJRVJJQ2FrREFOQmdrcWhraUc5dzBCQVFzRkFEQnVNUXN3Q1FZRFZRUUdFd0pWDQpVekVRTUE0R0ExVUVDaE1IUlc1MGNuVnpkREVpTUNBR0ExVUVDeE1aUTJWeWRHbG1hV05oZEdsdmJpQkJkWFJvDQpiM0pwZEdsbGN6RXBNQ2NHQTFVRUN4TWdSVzUwY25WemRDQk5ZVzVoWjJWa0lGTmxjblpwWTJWeklGSnZiM1FnDQpRMEV3SGhjTk1UWXhNakl3TVRVME1ETTVXaGNOTWpVd056SXdNVFl4TURNNVdqQi9NUXN3Q1FZRFZRUUdFd0pWDQpVekVZTUJZR0ExVUVDaE1QVlM1VExpQkhiM1psY201dFpXNTBNUXd3Q2dZRFZRUUxFd05JU0ZNeElqQWdCZ05WDQpCQXNUR1VObGNuUnBabWxqWVhScGIyNGdRWFYwYUc5eWFYUnBaWE14SkRBaUJnTlZCQU1URzBoSVV5MUdVRXRKDQpMVWx1ZEdWeWJXVmthV0YwWlMxRFFTMUZNVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DDQpnZ0VCQU5VVGlhUHQ5aTVEa3FrcEwwc2RKVElLNDU0dm0rR3JMVmpGM2ZHUmZtaDJhL2J2a1djTzNQRmhqM3hNDQordVpPOXZtSU1EN2VqNmJqK3UxcDE2WXNNVkZqQTZPRkhVY0V3WkEzcTExQUxBZHZnbkNkWFIvTWJXN3FmcUxkDQpxcEhLWWNFaTNiVStaUDdjMVNXMldyN0Y4WTZYQkhTbkFjdWdwL0Q1b2h4SGY4em9Wa1FPelJVbmhvaG84a1ZzDQpCdUtiNVVIMmcxalZvQU5mSks1enN5VlBod1o0WU1SRWFGR1JMbVNrQXVaWDFwNExPL0s1RnB3clZETXVXRnVZDQovbVpncmQyY2ZHek1SUHBSU2xjTnJLeER4TVJ6cnllQWtoL1ZmckFjSlh4MFFwdHROUWN2c3U4a2J2YlVoUTNqDQoxSFdYbWs3WGk3RTZLWFNwdTZBUWZJTXQ2S01DQXdFQUFhT0NBbkF3Z2dKc01BNEdBMVVkRHdFQi93UUVBd0lCDQpCakNCaUFZRFZSMGdCSUdBTUg0d0RBWUtZSVpJQVdVREFnRURCakFNQmdwZ2hrZ0JaUU1DQVFNSE1Bd0dDbUNHDQpTQUZsQXdJQkF3Z3dEQVlLWUlaSUFXVURBZ0VERFRBTUJncGdoa2dCWlFNQ0FRTVJNQXdHQ21DR1NBRmxBd0lCDQpBeVF3REFZS1lJWklBV1VEQWdFREp6QU1CZ3BnaGtnQlpRTUNBUU1vTUF3R0NtQ0dTQUZsQXdJQkF5a3dFZ1lEDQpWUjBUQVFIL0JBZ3dCZ0VCL3dJQkFEQ0JwQVlJS3dZQkJRVUhBUUVFZ1pjd2daUXdUUVlJS3dZQkJRVUhNQUtHDQpRV2gwZEhBNkx5OXliMjkwZDJWaUxtMWhibUZuWldRdVpXNTBjblZ6ZEM1amIyMHZRVWxCTDBObGNuUnpTWE56DQpkV1ZrVkc5RlRWTlNiMjkwUTBFdWNEZGpNRU1HQ0NzR0FRVUZCekFCaGpkb2RIUndPaTh2YjJOemNDNXRZVzVoDQpaMlZrTG1WdWRISjFjM1F1WTI5dEwwOURVMUF2UlUxVFVtOXZkRU5CVW1WemNHOXVaR1Z5TUlIVEJnTlZIUjhFDQpnY3N3Z2Nnd1BLQTZvRGlHTm1oMGRIQTZMeTl5YjI5MGQyVmlMbTFoYm1GblpXUXVaVzUwY25WemRDNWpiMjB2DQpRMUpNY3k5RlRWTlNiMjkwUTBFeUxtTnliRENCaDZDQmhLQ0JnYVIvTUgweEN6QUpCZ05WQkFZVEFsVlRNUkF3DQpEZ1lEVlFRS0V3ZEZiblJ5ZFhOME1TSXdJQVlEVlFRTEV4bERaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwDQphV1Z6TVNrd0p3WURWUVFMRXlCRmJuUnlkWE4wSUUxaGJtRm5aV1FnVTJWeWRtbGpaWE1nVW05dmRDQkRRVEVODQpNQXNHQTFVRUF4TUVRMUpNTVRBZkJnTlZIU01FR0RBV2dCU3BVNzVraElOTFhTYkdKejR1MFlSb1ZUelFkVEFkDQpCZ05WSFE0RUZnUVU1WWtaNVBtaXZPaE5vU2xVRmxHQng5WENqcHd3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCDQpBSE92SSttc28zanBWdFd5N2R1NFByT0thZkZyTitTc28wK09WOTVvWTAyMHJlNmxrWVJhZUpOaDlWSTRXa2hQDQpsNnJ4elJCYUhSdlVZTWM1MnBhblcwaGJJSlZBSk9JVEZNYW5PTlFDbitkVHJDMFVxbGZnOTE4U3BwbitlR1ZTDQp4ZjM0N2tpL3FWVStPOE5RVDYwQ2EreWhHZG9UZFpKam9qY3F2ZW90TTVlbHIyWGZLRmNCdldDeTV4RE5DcTloDQpIZ0lyU3ZjemJiU2Q2MVd5cWs1T05ramg3LzB6WEhPREVQS1I5UkZPd293MndBZEZpWU93TTFJemV2NSs2S0lsDQpoemdqbzJJMjB1cjZKQXh0U0tqN3BDQWZlemttSTV3YTg3UE9wVGRKNzBOeWFVc09XeUxZUXZjTUZ2WkgxVDMyDQpsM0tUN2J6OTlzM2F4bVRrUlpzbkRLQT0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-entrust-federal-ssp-trust-chain-2
  namespace: default
data:
  0-Entrust_Managed_Services_Root_CA_rekey3.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUUxekNDQTcrZ0F3SUJBZ0lFUklFSGVqQU5CZ2txaGtpRzl3MEJBUXNGQURCdU1Rc3dDUVlEVlFRR0V3SlYKVXpFUU1BNEdBMVVFQ2hNSFJXNTBjblZ6ZERFaU1DQUdBMVVFQ3hNWlEyVnlkR2xtYVdOaGRHbHZiaUJCZFhSbwpiM0pwZEdsbGN6RXBNQ2NHQTFVRUN4TWdSVzUwY25WemRDQk5ZVzVoWjJWa0lGTmxjblpwWTJWeklGSnZiM1FnClEwRXdIaGNOTVRrd09ERXpNVE0xTURNNFdoY05Namt3T0RFek1UUXlNRE00V2pCdU1Rc3dDUVlEVlFRR0V3SlYKVXpFUU1BNEdBMVVFQ2hNSFJXNTBjblZ6ZERFaU1DQUdBMVVFQ3hNWlEyVnlkR2xtYVdOaGRHbHZiaUJCZFhSbwpiM0pwZEdsbGN6RXBNQ2NHQTFVRUN4TWdSVzUwY25WemRDQk5ZVzVoWjJWa0lGTmxjblpwWTJWeklGSnZiM1FnClEwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEbnZhQnFnVnZ2ajZDd0o0eXUKV2lmZDIvbW1Nc25KVGljSTdSQ3FKS0hOY3J4bXFEQTFyanZQNHAwWGZEV2g5NUhGaXk3U3FEL3FET1ZCVG16VQpOdVVid0o0MnhkZWpDTnBqQU1BeWl3TkpIZ2V1d3UyMnZVTC9qSEV1UXA2TmZnWkRUV1NsTWRZeDZPMm1LZ1l3CmZjV3FBcjRUMFpydUVaVDJ1RExRSjVVemI4dWduZDZTM2ZyRjJtZDBJUnRSOTczSkFpV0lRZ0pzbHNxSEZ3eDUKc2tvQTV2cUR5UEt2UUxONHBlY09yQlV4UVNmaEVRT3hYRkNBVE9aQXl2SloydjhzRmx5UkxqUUFRU0Z6Z1BXaQpPMnl3QUc4cXR2MDNPa2FkSUk5SU1WY1ZqdzNrTDc0S1lEWTZGbHBrNGVELytuems4VEZ2Z0JVR2JKbHg0aHJMClhCN05BZ01CQUFHamdnRjdNSUlCZHpCZkJnZ3JCZ0VGQlFjQkN3UlRNRkV3VHdZSUt3WUJCUVVITUFXR1EyaDAKZEhBNkx5OXliMjkwZDJWaUxtMWhibUZuWldRdVpXNTBjblZ6ZEM1amIyMHZVMGxCTDBOQlkyVnlkSE5KYzNOMQpaV1JDZVVWTlUxSnZiM1JEUVM1d04yTXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU9CZ05WSFE4QkFmOEVCQU1DCkFZWXdnZE1HQTFVZEh3U0J5ekNCeURBOG9EcWdPSVkyYUhSMGNEb3ZMM0p2YjNSM1pXSXViV0Z1WVdkbFpDNWwKYm5SeWRYTjBMbU52YlM5RFVreHpMMFZOVTFKdmIzUkRRVE11WTNKc01JR0hvSUdFb0lHQnBIOHdmVEVMTUFrRwpBMVVFQmhNQ1ZWTXhFREFPQmdOVkJBb1RCMFZ1ZEhKMWMzUXhJakFnQmdOVkJBc1RHVU5sY25ScFptbGpZWFJwCmIyNGdRWFYwYUc5eWFYUnBaWE14S1RBbkJnTlZCQXNUSUVWdWRISjFjM1FnVFdGdVlXZGxaQ0JUWlhKMmFXTmwKY3lCU2IyOTBJRU5CTVEwd0N3WURWUVFERXdSRFVrd3hNQjBHQTFVZERnUVdCQlJKVkpGTWFVUTd4UGdDTFBUNApMVE5XaVhXWUVEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFmZmdOMCtrREFITUZuTmtFRlBKZFhIWW9qYUF3Cmp2c3liNHJGVVhoT3YvUVBsMGxPU1VldnFKcFB5RnNWdXRFTTRKazZOVTY4RmpadjhFV0R2V3JVdzJWdHhJNy8KZlZsdTE4U0RYY3BzdnZuRlNuR3hJc0pMWWNlNUpud21veC9FMGVhWm5xRVh3R29WWGdsdmpYWTNkRUwwOEJnVgp3UWNNZDNmeDVsZGoxMW5RK3AwN1BRNkVacmcveHh3c0RNL3ZqSTJXZDdlRFYxUE4xMFVESlM3VDI0c1dDSzhnCk5rOEZoMjU4OExTVStCMUhWSHRBN0pzMmtOSnJvblUxWDBTMDlsTkxKMzhMUlJoUTRJWGlMbFRhQzlycjNTMGYKZ1dZNmpSSnE2cmlJZlpOMHl3UjB3VHpYWnFCSkxjVzRWbmF2OGs4YmpsWXhFTDRBM1VtcjFtSFNvQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  1-Entrust_Managed_Services_SSP_CA_rekey3.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGdXpDQ0JLT2dBd0lCQWdJRVJJRUh0akFOQmdrcWhraUc5dzBCQVFzRkFEQnVNUXN3Q1FZRFZRUUdFd0pWDQpVekVRTUE0R0ExVUVDaE1IUlc1MGNuVnpkREVpTUNBR0ExVUVDeE1aUTJWeWRHbG1hV05oZEdsdmJpQkJkWFJvDQpiM0pwZEdsbGN6RXBNQ2NHQTFVRUN4TWdSVzUwY25WemRDQk5ZVzVoWjJWa0lGTmxjblpwWTJWeklGSnZiM1FnDQpRMEV3SGhjTk1Ua3dPREV6TVRVME5qSTVXaGNOTWprd056RXpNVFl4TmpJNVdqQnRNUXN3Q1FZRFZRUUdFd0pWDQpVekVRTUE0R0ExVUVDaE1IUlc1MGNuVnpkREVpTUNBR0ExVUVDeE1aUTJWeWRHbG1hV05oZEdsdmJpQkJkWFJvDQpiM0pwZEdsbGN6RW9NQ1lHQTFVRUN4TWZSVzUwY25WemRDQk5ZVzVoWjJWa0lGTmxjblpwWTJWeklGTlRVQ0JEDQpRVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOanRGUWtBUEZsTVFSckhHQkdJDQp6Z1hla0k0d3ordXUrbmVvbGtNRTdlQWgrYkJPb3BEd1prcnArVE8vcjlIMVlMcHZTbXBod2Q3UkJFNnNXUUVuDQpGYmV6NDhaWTZWMFBORDhqMTNERXFPN09ESUE0S0hHbW9tdUYzQ0Z4akM1d1lncFQwZFByU2tNd21jNGRyMnhzDQo3ODAxTDFla0pqOCtleWJjWlZkKzQ1b2s0Mjgzc2d5bjBjVkR6VjF3NVdPZzBsaFd6N0N3dVdoTk9oMVplWmkzDQoxVDQ5aTlFVHBwQkY4NkdSMDVVbEJsYVBCZ1VPODV0OWFzeElyajhlaklXVzg5RVZUdHNuWjNyNVNPa0t0b2pQDQpRTUVNODhSSHF3a2lCTXlFdGZ0U2MzTHZrSmdjUVdYUSswYzR6TU9qTURaRC80eW42OWRnOE9XVHN1WGp3MHFpDQpuL2NDQXdFQUFhT0NBbUF3Z2dKY01BNEdBMVVkRHdFQi93UUVBd0lCaGpCNUJnTlZIU0FFY2pCd01Bd0dDbUNHDQpTQUZsQXdJQkF3WXdEQVlLWUlaSUFXVURBZ0VEQnpBTUJncGdoa2dCWlFNQ0FRTUlNQXdHQ21DR1NBRmxBd0lCDQpBdzB3REFZS1lJWklBV1VEQWdFREVUQU1CZ3BnaGtnQlpRTUNBUU1uTUF3R0NtQ0dTQUZsQXdJQkF5Z3dEQVlLDQpZSVpJQVdVREFnRURLVEFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUlHa0JnZ3JCZ0VGQlFjQkFRU0JsekNCDQpsREJOQmdnckJnRUZCUWN3QW9aQmFIUjBjRG92TDNKdmIzUjNaV0l1YldGdVlXZGxaQzVsYm5SeWRYTjBMbU52DQpiUzlCU1VFdlEyVnlkSE5KYzNOMVpXUlViMFZOVTFKdmIzUkRRUzV3TjJNd1F3WUlLd1lCQlFVSE1BR0dOMmgwDQpkSEE2THk5dlkzTndMbTFoYm1GblpXUXVaVzUwY25WemRDNWpiMjB2VDBOVFVDOUZUVk5TYjI5MFEwRlNaWE53DQpiMjVrWlhJd2dkTUdBMVVkSHdTQnl6Q0J5REE4b0RxZ09JWTJhSFIwY0RvdkwzSnZiM1IzWldJdWJXRnVZV2RsDQpaQzVsYm5SeWRYTjBMbU52YlM5RFVreHpMMFZOVTFKdmIzUkRRVE11WTNKc01JR0hvSUdFb0lHQnBIOHdmVEVMDQpNQWtHQTFVRUJoTUNWVk14RURBT0JnTlZCQW9UQjBWdWRISjFjM1F4SWpBZ0JnTlZCQXNUR1VObGNuUnBabWxqDQpZWFJwYjI0Z1FYVjBhRzl5YVhScFpYTXhLVEFuQmdOVkJBc1RJRVZ1ZEhKMWMzUWdUV0Z1WVdkbFpDQlRaWEoyDQphV05sY3lCU2IyOTBJRU5CTVEwd0N3WURWUVFERXdSRFVrd3hNQjhHQTFVZEl3UVlNQmFBRkVsVWtVeHBSRHZFDQorQUlzOVBndE0xYUpkWmdRTUIwR0ExVWREZ1FXQkJUbTNSb0hHc3RydWlDNWxqbVQrQlRjbUFNM0p6QU5CZ2txDQpoa2lHOXcwQkFRc0ZBQU9DQVFFQTF6TjZZWDVDY3dBcVVPWUdVN1FRNFFJWmFadnBuVE4vS0RFWUhHREloVFlTDQpLbGtBWHowbmN3ZTVQM1Y5WWZuRitVd0RKRndCWlZ0enhJeSsybEliRXZra0llellLd0ptNksyUEh3ZWVQTDZFDQpXcENhVmhlMzlXck9vM0xSaktJV08rTHA1MDJSa2IvY0JKVkcyTTJPRTF2ZTRZZHQ1R2xQV1hYaTF1R29ISkhXDQpVOGpjMmFQRElLNUtUQ3R6aDJ0ZkVHNmRranlrUG9zeDVad05qY1o4SWtURm9JaDdoc0x4bml1OGtIaE9kMmswDQo2bk0rY3ROaUJkbDJuQ1E3R3BEU0phTCsxTUpzWGtWamF2OFpDQlJMOUNYd0FaU29kdTJScGtTdU5Td3JtTG13DQpWMGx4RkJ6TSswbEdvTThGbFYzMXNpTXJRQm9pMHBqRGdTamtrSkZNRkE9PQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-entrust-managed-service-nfi
  namespace: default
data:
  0-Entrust_Managed_Services_NFI_Root_CA_rekey.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlEcERDQ0FveWdBd0lCQWdJRVNxaW1EVEFOQmdrcWhraUc5dzBCQVFzRkFEQnlNUXN3Q1FZRFZRUUdFd0pWDQpVekVRTUE0R0ExVUVDaE1IUlc1MGNuVnpkREVpTUNBR0ExVUVDeE1aUTJWeWRHbG1hV05oZEdsdmJpQkJkWFJvDQpiM0pwZEdsbGN6RXRNQ3NHQTFVRUN4TWtSVzUwY25WemRDQk5ZVzVoWjJWa0lGTmxjblpwWTJWeklFNUdTU0JTDQpiMjkwSUVOQk1CNFhEVEUyTVRFeE5qRTJNekV3TkZvWERUSTNNVEl4TmpFM01ERXdORm93Y2pFTE1Ba0dBMVVFDQpCaE1DVlZNeEVEQU9CZ05WQkFvVEIwVnVkSEoxYzNReElqQWdCZ05WQkFzVEdVTmxjblJwWm1sallYUnBiMjRnDQpRWFYwYUc5eWFYUnBaWE14TFRBckJnTlZCQXNUSkVWdWRISjFjM1FnVFdGdVlXZGxaQ0JUWlhKMmFXTmxjeUJPDQpSa2tnVW05dmRDQkRRVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMOGZXMmM1DQpZMUgzREJaY0Y1dXdrbytJMU45NjQzZ0VxM1BZVVUvQXRNelJCSjFQRmlpcFdSTnlMWVBvVmFQWXI2R1VEc3JsDQpUeXZRN0xKRDV1RE9GUHhXdEdnZ3FjREdGUEM4dTBNQlV2cVR2akNNQnVHd0k1NXZyamZlVzRtWmZzb0dvK3FYDQozcUhiQ1JtaWYvUHl3Y2lZVG5ZaEFyUHRNOXRaLzlOeWF1bnBncmswektTMEc3ZGdVK2FhcVcrQlFLeThzczZ0DQoxcWJjRDVIVjVsYWY2bmxUWEowSnJNQ2JVbXVVYmhOZkNwOWUrVHdTNEx0cWpQUkw1RC9wblVrelVSeWwyRjYvDQo1M3laME01MVNKeTloeEVuVFlIZDRRbUpwM3lSMmZERVZJN1VnLzZSQmd5UFNqbG5XYnVEUERBckQrRzJ5elRzDQo2dG1jMU9TRHZXWXZWVWtDQXdFQUFhTkNNRUF3RGdZRFZSMFBBUUgvQkFRREFnRUdNQThHQTFVZEV3RUIvd1FGDQpNQU1CQWY4d0hRWURWUjBPQkJZRUZQcmZJd0hFcXV3ajQ2MXZEVFNsRGM4NVpHVmVNQTBHQ1NxR1NJYjNEUUVCDQpDd1VBQTRJQkFRQ2M1Y3VObFArckYzS0hSL1VPd2xOYzZZV0x4ZjJJbVEyWmh2K1VMUEtjengvcFpQRUxIWG56DQprQWhUdGpweGpwWXVIOE5IS1V4cGhKRUJDTDdQN1g5ek1PNjZaNVJzbzNpd0NDOTVmZllZcUp1SXhwQm44eHVrDQpGbTNoNnNibFlsRGlNcWJRNHdxdE5EUE1ubHZrQmJvc3AydnNyNlY1ajVqcjFDcC81ZTZ0S3VRdUNIOGlIcThYDQo1a0N2SW1aRXpBZjhhQUg2cFJ2M3BWc3dDeXhCY1B6R0hNajROOVJyUkZCYjQ2MitTazVxMUdNQTdyb2FqUHBSDQpIdDdDT1pOSnIyUWhXVUdTUWxhdnFhYVJ3WU55ZUJZdVRJRDhJaGsrVklEZHNJU1FQY29yNzNHTXB4SzMwenltDQpmRHBUZFEwRzArNVhheUtuTWkyTkNMTzZFUHNMdkVKSg0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
  1-Entrust_NFI_Medium_Assurance_SSP_CA_rekey.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlINkRDQ0J0Q2dBd0lCQWdJRVNxaTU2akFOQmdrcWhraUc5dzBCQVFzRkFEQnlNUXN3Q1FZRFZRUUdFd0pWDQpVekVRTUE0R0ExVUVDaE1IUlc1MGNuVnpkREVpTUNBR0ExVUVDeE1aUTJWeWRHbG1hV05oZEdsdmJpQkJkWFJvDQpiM0pwZEdsbGN6RXRNQ3NHQTFVRUN4TWtSVzUwY25WemRDQk5ZVzVoWjJWa0lGTmxjblpwWTJWeklFNUdTU0JTDQpiMjkwSUVOQk1CNFhEVEUzTURVeE5qRTBNekV6TlZvWERUSTNNVEV4TmpFMU1ERXpOVm93Y1RFTE1Ba0dBMVVFDQpCaE1DVlZNeEVEQU9CZ05WQkFvVEIwVnVkSEoxYzNReElqQWdCZ05WQkFzVEdVTmxjblJwWm1sallYUnBiMjRnDQpRWFYwYUc5eWFYUnBaWE14TERBcUJnTlZCQXNUSTBWdWRISjFjM1FnVGtaSklFMWxaR2wxYlNCQmMzTjFjbUZ1DQpZMlVnVTFOUUlFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW9PRXFhbzVIDQp6MnRvTGd0UkFhY2E4NFp5RXVROVFWcFoxUmRKRUhrRlpwTG5meDM5NmNqeDdabHdVZm1lbzQxbDhOVnNnWmg4DQpBVm5TZFpRTFUxclQzTGYyais0dnZIREdodFdUR0tRTTIyb2JYNm4vajFuazY2SkE2VTBwQU5JV251SFE5QVByDQoxMEl1Z0NwVklvWWZWV1h2dWorSmo4TkpLZWhVZERmdjFMM1Nad1cvS0U5T3N1YWRqeCt5K2paM2Q4N1krOHI4DQpyem1LZ2dxTnhyRSt4QlZwUkZ4WXlWTXRXY29vQUc2WXlPN0FycDNCbHVmZXBoTldPanpZcjNUQ0NKeWprMDJGDQp5eFRsZjlXcWZoRE5ndUFGR2hiTDk3TlJaUEtwUkxjRWM2Z0hJOFZCdEdkUCtCaUR4L2M4S24wdFRmM0k0MXlCDQpqTVo2aDdJNjY1MDJzUUlEQVFBQm80SUVoVENDQklFd0RnWURWUjBQQVFIL0JBUURBZ0VHTUlJQkhRWURWUjBnDQpCSUlCRkRDQ0FSQXdEd1lOWUlaSUFZYjZhNEZJQXdvSEFUQVBCZzFnaGtnQmh2cHJnVWdEQ2djQ01BOEdEV0NHDQpTQUdHK211QlNBTUtCd013RHdZTllJWklBWWI2YTRGSUF3b0hCREFQQmcxZ2hrZ0JodnByZ1VnRENnY0ZNQThHDQpEV0NHU0FHRyttdUJTQU1LQndZd0R3WU5ZSVpJQVliNmE0RklBd29IQnpBUEJnMWdoa2dCaHZwcmdVZ0RDZ2NJDQpNQThHRFdDR1NBR0crbXVCU0FNS0J3a3dEd1lOWUlaSUFZYjZhNEZJQXdvSENqQVBCZzFnaGtnQmh2cHJnVWdEDQpDZ2NMTUE4R0RXQ0dTQUdHK211QlNBTUtCd3d3RHdZTllJWklBWWI2YTRGSUF3b0hEVEFQQmcxZ2hrZ0JodnByDQpnVWdEQ2djT01BOEdEV0NHU0FHRyttdUJTQU1LQnc4d0R3WU5ZSVpJQVliNmE0RklBd29IRURBU0JnTlZIUk1CDQpBZjhFQ0RBR0FRSC9BZ0VBTUlJQldnWUlLd1lCQlFVSEFRRUVnZ0ZNTUlJQlNEQlFCZ2dyQmdFRkJRY3dBb1pFDQphSFIwY0RvdkwyNW1hWEp2YjNSM1pXSXViV0Z1WVdkbFpDNWxiblJ5ZFhOMExtTnZiUzlCU1VFdlEyVnlkSE5KDQpjM04xWldSVWIwNUdTVkp2YjNSRFFTNXdOMk13Z2NNR0NDc0dBUVVGQnpBQ2hvRzJiR1JoY0RvdkwyNW1hWEp2DQpiM1JrYVhJdWJXRnVZV2RsWkM1bGJuUnlkWE4wTG1OdmJTOXZkVDFGYm5SeWRYTjBKVEl3VFdGdVlXZGxaQ1V5DQpNRk5sY25acFkyVnpKVEl3VGtaSkpUSXdVbTl2ZENVeU1FTkJMRzkxUFVObGNuUnBabWxqWVhScGIyNGxNakJCDQpkWFJvYjNKcGRHbGxjeXh2UFVWdWRISjFjM1FzWXoxVlV6OWpRVU5sY25ScFptbGpZWFJsTzJKcGJtRnllU3hqDQpjbTl6YzBObGNuUnBabWxqWVhSbFVHRnBjanRpYVc1aGNua3dMZ1lJS3dZQkJRVUhNQUdHSW1oMGRIQTZMeTl1DQpabWx2WTNOd0xtMWhibUZuWldRdVpXNTBjblZ6ZEM1amIyMHdnZ0dhQmdOVkhSOEVnZ0dSTUlJQmpUQ0IrcUNCDQo5NkNCOUlZNWFIUjBjRG92TDI1bWFYSnZiM1IzWldJdWJXRnVZV2RsWkM1bGJuUnlkWE4wTG1OdmJTOURVa3h6DQpMMDVHU1ZKdmIzUkRRVEl1WTNKc2hvRzJiR1JoY0RvdkwyNW1hWEp2YjNSa2FYSXViV0Z1WVdkbFpDNWxiblJ5DQpkWE4wTG1OdmJTOWpiajFYYVc1RGIyMWlhVzVsWkRJc2IzVTlSVzUwY25WemRDVXlNRTFoYm1GblpXUWxNakJUDQpaWEoyYVdObGN5VXlNRTVHU1NVeU1GSnZiM1FsTWpCRFFTeHZkVDFEWlhKMGFXWnBZMkYwYVc5dUpUSXdRWFYwDQphRzl5YVhScFpYTXNiejFGYm5SeWRYTjBMR005VlZNL1kyVnlkR2xtYVdOaGRHVlNaWFp2WTJGMGFXOXVUR2x6DQpkRHRpYVc1aGNua3dnWTJnZ1lxZ2dZZWtnWVF3Z1lFeEN6QUpCZ05WQkFZVEFsVlRNUkF3RGdZRFZRUUtFd2RGDQpiblJ5ZFhOME1TSXdJQVlEVlFRTEV4bERaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwYVdWek1TMHdLd1lEDQpWUVFMRXlSRmJuUnlkWE4wSUUxaGJtRm5aV1FnVTJWeWRtbGpaWE1nVGtaSklGSnZiM1FnUTBFeERUQUxCZ05WDQpCQU1UQkVOU1RERXdId1lEVlIwakJCZ3dGb0FVK3Q4akFjU3E3Q1Bqclc4Tk5LVU56emxrWlY0d0hRWURWUjBPDQpCQllFRkdiNUpaaXV5L3ZoakFDRUdkU0YvNU5XNnRhbU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVl6QjIwDQpURmxiL2c0US9sK2V2cVcwNUw5TXhzYXlDUitzQ1h4cGk0Q3RZZ2VBeFdHVFRMSVViYlJqN3ZXUEdDL2FhbldyDQpXYXM4bVJZc0pTUVJ5M1NHWkowY0c4YmtoZUllNFRxbTZBTG13MkRSYWFvbERLU0o2eVErTEFSVDBDK09pOElZDQprNUJjTTZoTHBRbG0vMzBVWXR2QTUzQWl3VE1KVkNsYjdRSytlLy80WjB3bkREMjNQZFFYV2lVUUU5cTQrdnozDQpMK2lmZ0ZFbGpZNkVxZEtUNmRsWlZsMTZ4dDVnWnJyZEZsc2JsUFp4dXZubm1nbDg4L3F3TWQyemZjS1RJYW5QDQpNK2xsUXQ2ak0yTDNDK1BUT0JBTHQ5WFp5cTNRdzFSTGZRV3NhTmNzMC9mRE9vSmZISHcwcjlRbU1MckJwV0pwDQo3cFZ4QTJXa0lUTUZjbEJ0DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-exostar-llc
  namespace: default
data:
  0-Exostar_Federated_Identity_Service_Root_CA_2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlEMXpDQ0FyK2dBd0lCQWdJUU1Wb1k3eWgrN3BKTzA0YkVMYkpMRnpBTkJna3Foa2lHOXcwQkFRc0ZBREIrDQpNUXN3Q1FZRFZRUUdFd0pWVXpFVU1CSUdBMVVFQ2hNTFJYaHZjM1JoY2lCTVRFTXhJakFnQmdOVkJBc1RHVU5sDQpjblJwWm1sallYUnBiMjRnUVhWMGFHOXlhWFJwWlhNeE5UQXpCZ05WQkFNVExFVjRiM04wWVhJZ1JtVmtaWEpoDQpkR1ZrSUVsa1pXNTBhWFI1SUZObGNuWnBZMlVnVW05dmRDQkRRU0F5TUI0WERURXpNREV5TlRFMU1qTTBNVm9YDQpEVE13TURFeU5URTFNekF4T1Zvd2ZqRUxNQWtHQTFVRUJoTUNWVk14RkRBU0JnTlZCQW9UQzBWNGIzTjBZWElnDQpURXhETVNJd0lBWURWUVFMRXhsRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBhV1Z6TVRVd013WURWUVFEDQpFeXhGZUc5emRHRnlJRVpsWkdWeVlYUmxaQ0JKWkdWdWRHbDBlU0JUWlhKMmFXTmxJRkp2YjNRZ1EwRWdNakNDDQpBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5lRmlTS21KWDErbGMvTlAyYUNBa05iDQpkSmRQN1E2ajhBQkV6emFFSkptT3U1NzJockVLTjhtN3FSVmZiNDRNVHROZG5XUEQ3UVJlNVhueit6djZEeEM0DQpTM3hiZ2JHcVFUN2tweTYvMVpsdm9WS2VSd2FmSWYyQ1o3eFE0dWlIcWxhajk3TXFndXhyc2JKU3NSSklGNklwDQo2bkJ5YXE0eU5nb3BDSXRBbFcwckVPRG5na2VoVkloM3lpbHg2SzEzcjhQbVlsbGxqSXpYckYwcXZMNEJJSHpZDQpZWG15WVhHMzU0a1N6clZwb0VxWjVHVmlJNDlkQkI1dlNScE4zaGV0TmNPdVFKVWZPR1lwSVdiM0h6TVo1MzJqDQpFSWtBVmk5SWYvRGJDSkZZenNuRjI5U09SekpqMFJxcXpSZ3NKYU1lNkV3dUpacGdpMTgvSnFxSXRKMlQzcDhDDQpBd0VBQWFOUk1FOHdDd1lEVlIwUEJBUURBZ0dHTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFDQpGRlFMRWJBZCtWZlBzSG90VWxMenM2ZU1VdlNzTUJBR0NTc0dBUVFCZ2pjVkFRUURBZ0VBTUEwR0NTcUdTSWIzDQpEUUVCQ3dVQUE0SUJBUUNabm5nTU95R21JWXMweXI4eURNN1ZYUkx0SVpXZFN5YmNsaDlSZktld3JETDFndkpDDQpEWjZjb0l1VW9pc1VkTyt5bkN4d3JzWDhkeHpwaHZyclNyVkEzc3NWVURUS00wRld5anAzVjVHUE5aT1Vpb1dSDQpEbWFZdi80bm95OU14cDlneTQxV0xCTnBPOUhSNnRjNlBtN044T3BZWW8vRTVzV2IwODI3MVRkb2Z6RGFLd1hJDQo2T2ZFQXBGMWQ1c0I5RlZwNit5TWlINW1uR0NPSXN1QmF3ZjBvQzRVdzV0ekFZajB4ZUJ2bEF6ektFSE9oL0szDQp4OUEyaG1hZmhPSGV4U0U5dVdBWE1QQ3BqbXR6alJmemsvK2JURHhwNW9kTGxnZ0hFbnJWdi9uVVE3Ui9LZkRMDQoxNThQaHM4NHRXOC9jT2NZZXlobi9uYklPNERWRmx2Y3R2K0YNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
  1-Exostar_Federated_Identity_Service_Signing_CA_3.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlFc2pDQ0E1cWdBd0lCQWdJVExnQUFBQUtTcHVWUmV4V0xJd0FBQUFBQUFqQU5CZ2txaGtpRzl3MEJBUXNGDQpBREIrTVFzd0NRWURWUVFHRXdKVlV6RVVNQklHQTFVRUNoTUxSWGh2YzNSaGNpQk1URU14SWpBZ0JnTlZCQXNUDQpHVU5sY25ScFptbGpZWFJwYjI0Z1FYVjBhRzl5YVhScFpYTXhOVEF6QmdOVkJBTVRMRVY0YjNOMFlYSWdSbVZrDQpaWEpoZEdWa0lFbGtaVzUwYVhSNUlGTmxjblpwWTJVZ1VtOXZkQ0JEUVNBeU1CNFhEVEUwTURRd09URTJNekV4DQpNRm9YRFRJME1EUXdPVEUyTXpFeE1Gb3dhakVUTUJFR0NnbVNKb21UOGl4a0FSa1dBMk52YlRFWk1CY0dDZ21TDQpKb21UOGl4a0FSa1dDV1YyYVc1amFXSnNaVEU0TURZR0ExVUVBeE12UlhodmMzUmhjaUJHWldSbGNtRjBaV1FnDQpTV1JsYm5ScGRIa2dVMlZ5ZG1salpTQlRhV2R1YVc1bklFTkJJRE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBDQpBNElCRHdBd2dnRUtBb0lCQVFDV3QyWi9ZWnpWMmU5ZnFpUHZFUXI1UXpCdHQrN21WOHdFMEtUd1cyOVZvMUJBDQpPZnVHd2FGSmJHajVXUzMyNDZBMTVwcFpSMWNVU2pQOFNIR0M2bk1BS1Mybm9WenloMUtmOVdvckdWVlBWRGR4DQowbVBNazNLVnJra0FzeG1PVkNPV250aXJhK2MvSFoyQnllZFloM1BoWjZkRVR5UHE4SVZDR0hPQ0JNY3VUWVpPDQp1QVhXRzA5S2VTTUMyelBvVVhtMytncGYrbkdKUUxQMEJpZHcvanRZb2pnZ2JTbnFDWXlkVXVIeFpSUDdIT2NYDQo5NXhTQWJ1TTZJNWJvZyttSnVXR2hVa3hmSFpXaCtRSE1oYkUyTW1ja2FUUDRJYm1UMFBWaGl5dkY1YnkvMTFjDQpZRVJtVUhsaU9VOFRJNUtYZUFMRWRtOWoxWmZqSVlva2lqKzlNYURMQWdNQkFBR2pnZ0U3TUlJQk56QWRCZ05WDQpIUTRFRmdRVVVqa0ZMZ0FneHlONTZuTEk4UllpNEg5SlhEY3dEZ1lEVlIwUEFRSC9CQVFEQWdIR01CSUdBMVVkDQpFd0VCL3dRSU1BWUJBZjhDQVFBd0h3WURWUjBqQkJnd0ZvQVVWQXNSc0IzNVY4K3dlaTFTVXZPenA0eFM5S3d3DQpRZ1lEVlIwZkJEc3dPVEEzb0RXZ000WXhhSFIwY0RvdkwzZDNkeTVtYVhNdVpYWnBibU5wWW14bExtTnZiUzltDQphWE12Y0hWaWJHbGpMMFZTUTBFeUxtTnliREJWQmdnckJnRUZCUWNCQVFSSk1FY3dSUVlJS3dZQkJRVUhNQUtHDQpPV2gwZEhBNkx5OTNkM2N1Wm1sekxtVjJhVzVqYVdKc1pTNWpiMjB2Wm1sekwzQjFZbXhwWXk5cGMzTjFaV1IwDQpiMFZTUTBFeUxuQTNZekEyQmdOVkhTQUVMekF0TUEwR0N5c0dBUVFCN0h3QkFRRUlNQTBHQ3lzR0FRUUI3SHdCDQpBUUVGTUEwR0N5c0dBUVFCN0h3QkFRRUdNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNmVndFanhjaVNOdjZ2DQpTMDhIV0ZGMmZRS3ozMGR3bkp4cC9ONjQxL1lsVTdlMGl2aEdlYTgweDkyRWE3elJiMTdSODhFZmk2OU1wYVVzDQplcXN5bXhHRlBrT3U1ZzJ0cWV0MXp1OENkQm5QVGp2MkZVdXhqZTJmRXcxNTBpdUNNallXTWQxSGM0cXlUSGdnDQpVdENiS1pSbnpUdm9rd0NFa3FHeDFyYU40djFxaGQvejR3M09PcStNYW0wZk5JVlFITUxVYm56bGVmQWoxb3VVDQpheFJ1MmhBem5NOHM0RVN1NGtYYlBydEx6TFpvZFVqNXBaRE1CVFg2OFowdlYrZERJVVdkYytSRjByQ3NWd1hqDQprNEpKcXRqVzlhMFBkbEFDWGFKNUVEWkpSSXFUM08vVjlEYTIzaDc1ZncvbmhYNUNBbDZMWDM5YnU5dG9GYi84DQpXcUtYaTUrdA0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
  1-Exostar_Federated_Identity_Service_Signing_CA_4.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlFc2pDQ0E1cWdBd0lCQWdJVExnQUFBQWNNUiswM2RyTmZ3QUFBQUFBQUJ6QU5CZ2txaGtpRzl3MEJBUXNGDQpBREIrTVFzd0NRWURWUVFHRXdKVlV6RVVNQklHQTFVRUNoTUxSWGh2YzNSaGNpQk1URU14SWpBZ0JnTlZCQXNUDQpHVU5sY25ScFptbGpZWFJwYjI0Z1FYVjBhRzl5YVhScFpYTXhOVEF6QmdOVkJBTVRMRVY0YjNOMFlYSWdSbVZrDQpaWEpoZEdWa0lFbGtaVzUwYVhSNUlGTmxjblpwWTJVZ1VtOXZkQ0JEUVNBeU1CNFhEVEl3TURrek1ESXlORGd3DQpNRm9YRFRNd01ERXlOVEUxTXpBeE9Wb3dhakVUTUJFR0NnbVNKb21UOGl4a0FSa1dBMk52YlRFWk1CY0dDZ21TDQpKb21UOGl4a0FSa1dDV1YyYVc1amFXSnNaVEU0TURZR0ExVUVBeE12UlhodmMzUmhjaUJHWldSbGNtRjBaV1FnDQpTV1JsYm5ScGRIa2dVMlZ5ZG1salpTQlRhV2R1YVc1bklFTkJJRFF3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBDQpBNElCRHdBd2dnRUtBb0lCQVFEYlYxd21yOU5ROVA0dHJxRGFlR2RLSjlZcFFvM3hiYXBaVkJMcEVtNXZwdk54DQo1dlBRNWFXdlNpR2pOanVIMURhRTJxYzI2Z1dOektlQjY1NUxaemt2TU1Za0MzNFd6YVU5bnhqR3JYY1o4eUpMDQp0TGUrT0x3ZlVVUE5MSjFEbURkOEpLM3hteFE2bXBOK21uOEpvY3g1cjJXcm9HS3lSbWlGMHNWcHQyOU9hc2FsDQpqYlIxajg4WjM3OTBTZE4xYUM1WjB2Y2p1TjlKcXNSMmVQMVBNTVRLaDQ2b292Qjk2M2x4VUFSUXNEdE9kbDJyDQpZRWtFWkd6SC9FazJ0SW5OckJHRnpDdXFsVFdYT0M5UU9PemV5cjFOWmNRUzFHNnhaOXRsRzFWTzRralhISWRPDQpLL21ZSnpncU1FNHlzWUw0WXYzOGFzNFlVRDN3WU1LZUFTSW9sTEVmQWdNQkFBR2pnZ0U3TUlJQk56QWRCZ05WDQpIUTRFRmdRVVdkc1Bnakh0aEl3UWprZllqZFdPN2NyN01Rb3dEZ1lEVlIwUEFRSC9CQVFEQWdIR01CSUdBMVVkDQpFd0VCL3dRSU1BWUJBZjhDQVFBd0h3WURWUjBqQkJnd0ZvQVVWQXNSc0IzNVY4K3dlaTFTVXZPenA0eFM5S3d3DQpRZ1lEVlIwZkJEc3dPVEEzb0RXZ000WXhhSFIwY0RvdkwzZDNkeTVtYVhNdVpYWnBibU5wWW14bExtTnZiUzltDQphWE12Y0hWaWJHbGpMMFZTUTBFeUxtTnliREJWQmdnckJnRUZCUWNCQVFSSk1FY3dSUVlJS3dZQkJRVUhNQUtHDQpPV2gwZEhBNkx5OTNkM2N1Wm1sekxtVjJhVzVqYVdKc1pTNWpiMjB2Wm1sekwzQjFZbXhwWXk5cGMzTjFaV1IwDQpiMFZTUTBFeUxuQTNZekEyQmdOVkhTQUVMekF0TUEwR0N5c0dBUVFCN0h3QkFRRUlNQTBHQ3lzR0FRUUI3SHdCDQpBUUVGTUEwR0N5c0dBUVFCN0h3QkFRRUdNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUURIT1BUM2NQNis1eDhkDQpDRm9YYXNKWm1QRzVnRUlFclBBZVJFZXZmWWRCNEQ1OTYyU2tKeE13OEh3SGM1Y1NFVnBNaDJ4dUQ1MENJcmk1DQpJUFJvL0tPMG56cnZ3RVlTUGZELzFEbHRrdGs4dDRqOTQ0MDBBdDlVUWFzd1VwS1FEQjM2Z0VydDlKNnJjMk1RDQp4VGEvMUxqa1piNjNGMXBUcmZiOU5MYytKRjRtY1dHYm1FeWtaRUU5RGYxQWxKMzl4eXVvekRpUGxSWDgyQnBDDQpRSnNMZWR3SldRYWtJT3JGZDlnR1BsZVJRd1o2Q2Ftd1R1QkYwZkxhUUE4SSsySW9YdFNLRGFDcVVKdElmVEZkDQpISHJ3UERCVHZmZlVrZHNPbDJZdEVOcm82eG9jSkpPZ29VZE8vUy9BaGxDaDdpcWlRZVIrbzZDc01MK0xuK3R3DQo1dnJLY3huUg0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-identrust-nfi
  namespace: default
data:
  0-IdenTrust_Global_Common_Root_CA_1.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGaHpDQ0EyK2dBd0lCQWdJUUNnRkNnQUFBQVVVanpYL1FBQUFBQWpBTkJna3Foa2lHOXcwQkFRc0ZBREJODQpNUXN3Q1FZRFZRUUdFd0pWVXpFU01CQUdBMVVFQ2hNSlNXUmxibFJ5ZFhOME1Tb3dLQVlEVlFRREV5RkpaR1Z1DQpWSEoxYzNRZ1IyeHZZbUZzSUVOdmJXMXZiaUJTYjI5MElFTkJJREV3SGhjTk1UUXdNVEUyTVRnd05UQTFXaGNODQpNelF3TVRFMk1UZ3dOVEExV2pCTk1Rc3dDUVlEVlFRR0V3SlZVekVTTUJBR0ExVUVDaE1KU1dSbGJsUnlkWE4wDQpNU293S0FZRFZRUURFeUZKWkdWdVZISjFjM1FnUjJ4dlltRnNJRU52YlcxdmJpQlNiMjkwSUVOQklERXdnZ0lpDQpNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURqVktrejFGV0NLdWxhUmRGVWE3bGJjaXZxDQo2SGdoczdwZ0NYL2FlUlBsa0NhM0ExR204cW5nK0piWWdsS2liekR6ZzNHSTIwQXd3bTVRVHl6WmNGWTBkOUQyDQpadUh5SVhncHpqSkJNOXUwN0F1Z2c3UWNoQjllaVJKYUkwQkFoeTIyVEphQUVtM25vSmRyZmVHNDg5MVM5S01yDQpXWmQvRk9aUThTY0ZrblB6MW1nalN3eHJsbEoyVU1TMmpaOHlFWmZ3RTF3Yi9sVGE4VGpoWHVCd3RubXN4OEVkDQpZcVFBWVBTTUk1MCt3UU0vMGQ5R09rUXpvdC9UL0lDQ2g2TTgrNllKc0ozREhzSk5Ic2ZtYkdJVWRiU2RyRytlDQprUWZZSko4aVgyMWtuQ0dWc21TZHlTcnJTNG5IZ25ZUXJteDIrMVM5NCtMaXdLR3V1eWljVjhrVjRpNWZ5MXU5DQpRYW5lSTBWNXhVZHE3Q2Q4ODZvcWxBcHFjcmR3Uy9mM1RHbTRyVzNSVHNzNTBYeWdUZ2xPOEdnN253TVdaZDNHDQozVTVIekJaS3FrZHZLK3h4RFN5TFBFSjF0UGVSemhLbjJERGg4OFRIRUE3Yzd3blJOTCtiTGwyR2RaZFY3Mlg0DQpjMUVQMXV1NlJUL1l6MWt5alR6blVnai96d1kxTjhtTTVTbGQxanVENlNTbmdMMU9yTTRaTS84VmtUK3J5UUlRDQpPZDlVc3dncTAyV2g4Skgvbm5yU0ovRlRKeXMxL2JRWHJSYlBRamF3Y2VIMTlub1M0bHY3UVRZZkUyODRZMnJLDQpTYWQ3RDc0cGw5azBKT3lNTVRBaDlEV0xuczZ4ZlkvTVp1d0EyUjhGanRickdZbDY2Z0ZYcFlKcEFkNTY2ejBNDQpIS1ppTHFucmI5OEFJRGtPa1FJREFRQUJvMk13WVRBT0JnTlZIUThCQWY4RUJBTUNBUVl3RHdZRFZSMFRBUUgvDQpCQVV3QXdFQi96QWRCZ05WSFE0RUZnUVUrUG1MTDMrUVE1K1A1b3dzdFVtNFQ1S0xGblF3SHdZRFZSMGpCQmd3DQpGb0FVK1BtTEwzK1FRNStQNW93c3RVbTRUNUtMRm5Rd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFITUpwTmxKDQpuemY0VGdJcy9uVERqZGduVUtYTWk1N0hxOTdpY0wzOXFDaHRvTGZERlRjVDJkMzZFQmdybXNtRFM2d0hPVFU3DQpXUnNTVk9abEpUeHhZcnNwOHVDVnVRb2ZyVVBQdkNNblQvaFhpSzJ1N05IbUdkakJwbVYwV2JVTnJFSUJRNXFyDQo1blN2ajdjRWxmRzRlOXJZOVVmbVk1dVN4ZTl1UDRZTTkreGVJY3RoekJUbDVFM1FSYTYrMzdTZ2NVTXUzWmt1DQo5d3hjbHh0TkZtRjd0dXdCcXRCSUxxTWVXWGxvRmJxK2RqTEdPS3lwa0xGRU9MM0NBT3BISXVpeVJwZXFTWGVpDQo0d0NzU2xwaEJyQ1FEVHJ3SmQ4S3E0bHRYSmlrQ3J5Y3ZxbDdlLzAxRlFsanVBamY2NXhLbWFOMWxvQjZBYzdTDQo4MUU2b21jTGVZdjFWaVU1bVlySGV6dXNRSm1zaDY4OHo4SzJWcVZXeVZzamwyUkdkc0FGQ05zUlBla0k5S3F5DQo1NEFONmVRMHp0NG1TK25aeEZIN1dLa05XaG41M3FDeDBVOFJ1S0QzeVU0Wk16ZEZZcTU1RjVZZ1ZoZUI0c3JlDQpsdExRNUZ5Q1lnRGhLTUNMRk0vQlMweGxqVkVVMU0xdjBHRmJaNTBGMndJRFF0SG1tYzJRWTFzQVJaL1BDYUhnDQpWK2ErSXFqaWgvc1hNbVcxa1VTeXEvUkhaeUJCUFlnUmVNRi9FeTBKSmxnbk5oZ2h5YXNrV09KTDRqcFZWbWRlDQozajZCbkVKZlh0YnV4WmlhSDlXVllRY004Y2tod1h1UEdtSURsQlZxMnJablM3QlRzd0FXOUF3cU82ZnpsYmdZDQpnSjZFbTlWMXVNaGlWSFBFdTdGTE8rM09tRVJNb0xDTktaRFoNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
  1-Booz_Allen_Hamilton_PIVi_CA_01.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHampDQ0JIYWdBd0lCQWdJUUZLTmJna3I0MVl4eERNczlqK29NcURBTkJna3Foa2lHOXcwQkFRc0ZBREJODQpNUXN3Q1FZRFZRUUdFd0pWVXpFU01CQUdBMVVFQ2hNSlNXUmxibFJ5ZFhOME1Tb3dLQVlEVlFRREV5RkpaR1Z1DQpWSEoxYzNRZ1IyeHZZbUZzSUVOdmJXMXZiaUJTYjI5MElFTkJJREV3SGhjTk1UVXdPREk0TVRjeE5qSTNXaGNODQpNalV3T0RJNE1UY3hOakkzV2pCc01Rc3dDUVlEVlFRR0V3SlZVekVTTUJBR0ExVUVDaE1KU1dSbGJsUnlkWE4wDQpNU0F3SGdZRFZRUUxFeGRKWkdWdVZISjFjM1FnUjJ4dlltRnNJRU52YlcxdmJqRW5NQ1VHQTFVRUF4TWVRbTl2DQplaUJCYkd4bGJpQklZVzFwYkhSdmJpQlFTVlpwSUVOQklEQXhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DDQpBUThBTUlJQkNnS0NBUUVBc0twdkhlM05zUGowNU9qUXRnZjFiVkZwUlAyNk9oRXRhcG1HY3I1UUxHRjRaejYxDQpMR0RLTXVRZXo0YUR6dWhPM2FzZHAwbmhtL25BZE1Fc21mbFN0WVZRMENwTUR0ZndEakFFd3g5aXlXdTFOejM2DQpqeWd4QWsyQmZVamVKbW5QVnFMTW55NnU4UHhNV1JIZEV4WFVIL25BQUlDQkhKOEVpVFJlazNleWNrbElWL28wDQpJZzgyWjdzamhDNHN3TnhxMkF2c0FEeUJXY2tncmFXSkR3L1l3dVVIMzdSQTFZMG9WaWZCcHczdUYzWE1vREJzDQpkd1Z6ZWh3OGtjZDg0bWFEc0ZOdmIxamh1SVFLaUVoeGVLd3FHcHJNYldRUUU4aFN0TGVGQUpyTVNFaDFUZThuDQpvNlJrQmhpVGlVMTR1cytFWGlWOE1IZmN4TGExcmViRHZZTHZqUUlEQVFBQm80SUNTVENDQWtVd2V3WUlLd1lCDQpCUVVIQVFFRWJ6QnRNQ2tHQ0NzR0FRVUZCekFCaGgxb2RIUndPaTh2YVdkakxtOWpjM0F1YVdSbGJuUnlkWE4wDQpMbU52YlRCQUJnZ3JCZ0VGQlFjd0FvWTBhSFIwY0RvdkwzWmhiR2xrWVhScGIyNHVhV1JsYm5SeWRYTjBMbU52DQpiUzl5YjI5MGN5OXBaMk55YjI5MFkyRXhMbkEzWXpBZkJnTlZIU01FR0RBV2dCVDQrWXN2ZjVCRG40L21qQ3kxDQpTYmhQa29zV2REQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNSUlCR3dZRFZSMGdCSUlCRWpDQ0FRNHdEUVlMDQpZSVpJQVliNUx3QmtBZ0V3RFFZTFlJWklBWWI1THdCa0FnSXdEUVlMWUlaSUFZYjVMd0JrQXdFd0RRWUxZSVpJDQpBWWI1THdCa0F3SXdEUVlMWUlaSUFZYjVMd0JrRGdFd0RRWUxZSVpJQVliNUx3QmtEZ0l3RFFZTFlJWklBWWI1DQpMd0JrREFFd0RRWUxZSVpJQVliNUx3QmtEQUl3RFFZTFlJWklBWWI1THdCa0R3RXdEUVlMWUlaSUFZYjVMd0JrDQpEd0l3RFFZTFlJWklBWWI1THdCa0VnQXdEUVlMWUlaSUFZYjVMd0JrRWdFd0RRWUxZSVpJQVliNUx3QmtFZ0l3DQpEUVlMWUlaSUFZYjVMd0JrRWdNd0RRWUxZSVpJQVliNUx3QmtFd0V3RFFZTFlJWklBWWI1THdCa0ZBRXdEUVlMDQpZSVpJQVliNUx3QmtKUUV3RFFZTFlJWklBWWI1THdCa0pnRXdRd1lEVlIwZkJEd3dPakE0b0RhZ05JWXlhSFIwDQpjRG92TDNaaGJHbGtZWFJwYjI0dWFXUmxiblJ5ZFhOMExtTnZiUzlqY213dmFXZGpjbTl2ZEdOaE1TNWpjbXd3DQpEZ1lEVlIwUEFRSC9CQVFEQWdHR01CMEdBMVVkRGdRV0JCUVRJMkdCY29JUS9UeGpuWGtTdzdJN1Jpa0R1REFODQpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUFSa1N6QW9nWjRlMEgxSUNzcnBieGhXY0Q2WVc0dzUrZFl5Q0xGSld1DQo0UmdOdDVYdkpxVzl3ZFd2THJQY1VWZHEyVkIvMCs1Y1Y4ZzNKeTZ6M3ZUdE5BSHVtSC9Wa2JBVDFWVVZxZ0dvDQp2ZFpyUEFaSlVHTnloWTNoUUxXaXlRclVnUi9nL0ZSdzM5S25LaWN4Qm91cFVxUnJMZFdKVkJxK2o2UXdNcjZFDQp4YVZ1bDc0RmZzTmJnSnEzeEhMMDRYOXBVeVUvK3g2WDlLaUxSbWNpNTlBNXdRLzU4Tkp0QVBSc2lUZDZFQW9vDQp3Ukl4WnBwTy9jSXUrZFZvM2UzZ1FkWEZDaEZqY0ZTOFZCakk0eGlUOG5GRjdUUmRTdnowUSsyK1pla1p5aGl0DQo5N3VuYVpiVjBmYm8ycnRlWDdETy83azFjNm45NlVzYnZNbVdKaG05OWdRZElFc0xvN0FRd0xHY3hYODVWTWN6DQprMUNydGoxRWsyZUhsTVowZ05Ha3RqY2hpNXRzb3l6YkFsZEZud1krRHFXU0wwVHh5aE4zTWNYeWl6UnpDZFoyDQpWTEYxNkQ5dEtNYmpsMVFGUW1NN1B1MzRwZC9HQXB2VFo0MGZ5MXBMYVY1Z2c1NXpYdDRlNFdpclJ4Mk5LTXh0DQpVV2lDUG81K2xNSnh0cDl5eWNYai9SdnlSU2o0V2JsMC8vQUNlVXNOd3hFZUUyaE5GbHVIZExmdzJOVDk3ak9XDQp2VWNDSmpTUXRRckdaMktSWS9MVGhDVjd3eTcvdXhrMTIrUjQ4UEJBeUxseUdOSWR4MjVCZEhkRVJ6Nll3K1EwDQp1MGltdHN1U2RrVHViVTNGeFBkWWRkTTZUbDNQcnhLSXJtQyt0MFVLdjc5cVE5NENvN09lVWZvcWZONEg2aXlkDQozRFU9DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-lockheed-martin
  namespace: default
data:
  0-Lockheed_Martin_Root_Certification_Authority_2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlFU0RDQ0F6Q2dBd0lCQWdJUWVzNHJ5QXMvTjVGSG5JdWVaaU9IV3pBTkJna3Foa2lHOXcwQkFRc0ZBRENCDQp0REVMTUFrR0ExVUVCaE1DVlZNeEVUQVBCZ05WQkFnVENFTnZiRzl5WVdSdk1ROHdEUVlEVlFRSEV3WkVaVzUyDQpaWEl4SkRBaUJnTlZCQW9URzB4dlkydG9aV1ZrSUUxaGNuUnBiaUJEYjNKd2IzSmhkR2x2YmpFaU1DQUdBMVVFDQpDeE1aUTJWeWRHbG1hV05oZEdsdmJpQkJkWFJvYjNKcGRHbGxjekUzTURVR0ExVUVBeE11VEc5amEyaGxaV1FnDQpUV0Z5ZEdsdUlGSnZiM1FnUTJWeWRHbG1hV05oZEdsdmJpQkJkWFJvYjNKcGRIa2dNakFlRncweE16QTJNVGt3DQpOVEU0TXpSYUZ3MHpNREEyTVRrd05USTBNemhhTUlHME1Rc3dDUVlEVlFRR0V3SlZVekVSTUE4R0ExVUVDQk1JDQpRMjlzYjNKaFpHOHhEekFOQmdOVkJBY1RCa1JsYm5abGNqRWtNQ0lHQTFVRUNoTWJURzlqYTJobFpXUWdUV0Z5DQpkR2x1SUVOdmNuQnZjbUYwYVc5dU1TSXdJQVlEVlFRTEV4bERaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwDQphV1Z6TVRjd05RWURWUVFERXk1TWIyTnJhR1ZsWkNCTllYSjBhVzRnVW05dmRDQkRaWEowYVdacFkyRjBhVzl1DQpJRUYxZEdodmNtbDBlU0F5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF4L2t4DQpySmwvNjVpcVRpWmYycHBsUE1WYW1rU2tLNXAzVUxPK2ovRFdFSy9yWW1rdDNJTExIaDc4MjBaYS9iOW9vUzFmDQpEcy9nQ2J4b1FUODZ1MG1nbHpJcVNrMnlWWDUxY2NPSkpBTHdnSFNGa2d3SXN2RWtkdXRJaUxvUk1tZVhYbUFXDQovVzdLZHFRMkZmd042RWNXaU5UeVRacWFiM0VoeGZWc1p4RmxBUmZCZ0FhRHVTaVpKWWlsazNGdGppaHZYN0tsDQp6eU5hNHluSXozd1RRTXNPSDdOV05oNVdERXY2ZVlGRGdzejRWUHdMTEpnV0hLVDlKRk1HcEo0aVdxb2pEQ0ZCDQpXZ3hJempibGh6eFB1dnVrK244bHVMOW1XdjdDWGVuaVR3L0JtVVRWelE0S0NqKzhSVnBOZnVGNGZiMHpMQmVDDQo3b2xXWWorRnZDZ3pEZGRsSXdJREFRQUJvMVF3VWpBT0JnTlZIUThCQWY4RUJBTUNBY1l3RHdZRFZSMFRBUUgvDQpCQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVrbGZpNnkrNGkwaHNUZDBIc3p4dnArVTVrTTR3RUFZSkt3WUJCQUdDDQpOeFVCQkFNQ0FRQXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTGtPRm43Z09JQm9kcVBOVi9kYzB1R0RsbWpBDQpkSHFkRHVhU0p2bjhyWnpacnJZbDVYTXR5R3c3S1U0blo2UnhxeHpRTVFmU3lyOG9PMDNJT1E0d1B6Ukw2cmg4DQpoRzNmWkRoZUtuWWpTY2twTThtekE0cmJMVjJQU01yZjdFc2lmT2ttTmZOZEFSWFJmZTVaL0F2U09VdkM2M1B0DQpwYUVQZklWcERYcHlvVFhxMzZhTnR4eGNJMEdzampHYW5HdGl4UWtiZ0t3cEFZT1lCRDJoSjduQzluM3l2djRhDQpjQkpzaDcyNDdRN1gya3U2eUhGQ3ZDYlJnR2d5TjR6bmY3RjgrbVpQdVdqOGl2b0ZhdmVhM1hHWmhmbUdwYytCDQpLckVIV1JMU3JiWEk3dWZJS1VTbEF5QUk3T1ZFUVF3RE5QM1dRVHp0ZHU4Vis5dDR0NzB4SUM1Y1EyYz0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
  1-Lockheed_Martin_Certification_Authority_4_G2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGdFRDQ0JKMmdBd0lCQWdJS1lSbFNSQUFBQUFBQUJqQU5CZ2txaGtpRzl3MEJBUXNGQURDQnRERUxNQWtHDQpBMVVFQmhNQ1ZWTXhFVEFQQmdOVkJBZ1RDRU52Ykc5eVlXUnZNUTh3RFFZRFZRUUhFd1pFWlc1MlpYSXhKREFpDQpCZ05WQkFvVEcweHZZMnRvWldWa0lFMWhjblJwYmlCRGIzSndiM0poZEdsdmJqRWlNQ0FHQTFVRUN4TVpRMlZ5DQpkR2xtYVdOaGRHbHZiaUJCZFhSb2IzSnBkR2xsY3pFM01EVUdBMVVFQXhNdVRHOWphMmhsWldRZ1RXRnlkR2x1DQpJRkp2YjNRZ1EyVnlkR2xtYVdOaGRHbHZiaUJCZFhSb2IzSnBkSGtnTWpBZUZ3MHhOekEwTVRFeU1ERXpOVEJhDQpGdzB5TlRBeU1URXlNREl6TlRCYU1JR09NUXN3Q1FZRFZRUUdFd0pWVXpFa01DSUdBMVVFQ2hNYlRHOWphMmhsDQpaV1FnVFdGeWRHbHVJRU52Y25CdmNtRjBhVzl1TVNJd0lBWURWUVFMRXhsRFpYSjBhV1pwWTJGMGFXOXVJRUYxDQpkR2h2Y21sMGFXVnpNVFV3TXdZRFZRUURFeXhNYjJOcmFHVmxaQ0JOWVhKMGFXNGdRMlZ5ZEdsbWFXTmhkR2x2DQpiaUJCZFhSb2IzSnBkSGtnTkNCSE1qQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCDQpBT25NU0ZMeUtJQUoxZEpRTTYzeTVmdE82MVBRcUw1SVhnVjUzSFhvcWx2bXlMcXVLUXpFYmtvVXN5a3FiTHRiDQoyRlMxNW83TWRSVEdUVjNpaTlBSkVzTCs5azREZXE1RjdKbGlKWHdzMXMxZEwwWlRMUlhrcUNlZXFoV2tuWnUxDQorZURuTCtKU3paNDg5VmNmVkRCdndRb1pOdmpmeTlwM2FYc3EvNEd6bDhCS2d3OUxoUHoxdUNBSFRpK0V2bnZzDQphQlFTdTNwYkVBWXFnVDdNa3NObEV4N3dlditQNEFHalgrQkhmNnlBSEZOaExOUkpzZVZuZm8yeHUvWkZ6S0lJDQpSb0Z0OEJWZ1pscFJxTWtYV09XQVNzcS9ueU9MRS9BdHFEREJ6dmo2YjJPNTVyUzhBdVF1a0Q1aFBSbEJ4WXNnDQpBdTJKNUhSM2V3QjFNcjcrbVZTQVdUVUNBd0VBQWFPQ0Flc3dnZ0huTUE0R0ExVWREd0VCL3dRRUF3SUJ4akFRDQpCZ2tyQmdFRUFZSTNGUUVFQXdJQkFEQWRCZ05WSFE0RUZnUVVOV3IrcmdsRFRDTHFxRjVuU0c0S2JZbXU1Sll3DQpVZ1lEVlIwZ0JFc3dTVEFOQmdzckJnRUVBV2RrQVFFREF6QU5CZ3NyQmdFRUFXZGtBUUVEQkRBTkJnc3JCZ0VFDQpBV2RrQVFFREJUQU5CZ3NyQmdFRUFXZGtBUUVEQmpBTEJna3JCZ0VFQVlJM0ZSOHdHUVlKS3dZQkJBR0NOeFFDDQpCQXdlQ2dCVEFIVUFZZ0JEQUVFd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZkJnTlZIU01FR0RBV2dCU1NWK0xyDQpMN2lMU0d4TjNRZXpQRytuNVRtUXpqQjJCZ05WSFI4RWJ6QnRNR3VnYWFCbmhtVm9kSFJ3T2k4dlkzSnNMbVY0DQpkR1Z5Ym1Gc0xteHRZMjh1WTI5dEwyTnliQzlqWlhKMGRYQmtMMHh2WTJ0b1pXVmtKVEl3VFdGeWRHbHVKVEl3DQpVbTl2ZENVeU1FTmxjblJwWm1sallYUnBiMjRsTWpCQmRYUm9iM0pwZEhrbE1qQXlMbU55YkRDQmlnWUlLd1lCDQpCUVVIQVFFRWZqQjhNSG9HQ0NzR0FRVUZCekFDaG01b2RIUndPaTh2WTNKc0xtVjRkR1Z5Ym1Gc0xteHRZMjh1DQpZMjl0TDJOeWJDOWpaWEowZFhCa0wweE5VbEJMUTFNeVgweHZZMnRvWldWa0pUSXdUV0Z5ZEdsdUpUSXdVbTl2DQpkQ1V5TUVObGNuUnBabWxqWVhScGIyNGxNakJCZFhSb2IzSnBkSGtsTWpBeUxuQTNZekFOQmdrcWhraUc5dzBCDQpBUXNGQUFPQ0FRRUFTdjIyZzlnZTd6dkM2V3VuajBJNjVFcnFsRlJJOWRpNDRpQ1cyTjlCQVd6c2dnd3lTNXdlDQpiNDZLeWhFY2ZsWmNNYzU4U3gra0VzeUcrd2d4TElVQ1NoYnBtak91bmJiczBSYjY0VTVkanZ4MzZ4Yi9NS2IwDQpxeVhiN0FVYjNhcjB2VDZ0VG1hRWEvQ1pCMDY4RUlRK0owaURxZmlhcFkvNitDdXlUalVlQzZQRGZMSXI0cGVSDQpaNjNsZERGVHozWGU1VFkwSDBxYURrVEc5elplMTdTRmpiYkd4UjYxNy9pY1dZS2ptd2h3bS9vckpXSGMwMWIrDQptMS9oUEhNaDJwRDVQejJhVzdJd2N5WFBVTzBVaVJYRFpOY1czMmVQMS93eTFsSW1DN21jKzYvUWZyRk55ODBSDQpITGc0Sm9nZ2VCRCtzQmxWWmNON2JWdjZGbFVQaW5ONkRBPT0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
  1-Lockheed_Martin_Certification_Authority_4_G2_CRLs_only.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGaHpDQ0JHK2dBd0lCQWdJS0VVaVFnZ0FBQUFBQUJEQU5CZ2txaGtpRzl3MEJBUXNGQURDQnRERUxNQWtHDQpBMVVFQmhNQ1ZWTXhFVEFQQmdOVkJBZ1RDRU52Ykc5eVlXUnZNUTh3RFFZRFZRUUhFd1pFWlc1MlpYSXhKREFpDQpCZ05WQkFvVEcweHZZMnRvWldWa0lFMWhjblJwYmlCRGIzSndiM0poZEdsdmJqRWlNQ0FHQTFVRUN4TVpRMlZ5DQpkR2xtYVdOaGRHbHZiaUJCZFhSb2IzSnBkR2xsY3pFM01EVUdBMVVFQXhNdVRHOWphMmhsWldRZ1RXRnlkR2x1DQpJRkp2YjNRZ1EyVnlkR2xtYVdOaGRHbHZiaUJCZFhSb2IzSnBkSGtnTWpBZUZ3MHhOVEE1TURreU16TTJOVGhhDQpGdzB5TlRBNU1Ea3lNelEyTlRoYU1JR09NUXN3Q1FZRFZRUUdFd0pWVXpFa01DSUdBMVVFQ2hNYlRHOWphMmhsDQpaV1FnVFdGeWRHbHVJRU52Y25CdmNtRjBhVzl1TVNJd0lBWURWUVFMRXhsRFpYSjBhV1pwWTJGMGFXOXVJRUYxDQpkR2h2Y21sMGFXVnpNVFV3TXdZRFZRUURFeXhNYjJOcmFHVmxaQ0JOWVhKMGFXNGdRMlZ5ZEdsbWFXTmhkR2x2DQpiaUJCZFhSb2IzSnBkSGtnTkNCSE1qQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCDQpBT25NU0ZMeUtJQUoxZEpRTTYzeTVmdE82MVBRcUw1SVhnVjUzSFhvcWx2bXlMcXVLUXpFYmtvVXN5a3FiTHRiDQoyRlMxNW83TWRSVEdUVjNpaTlBSkVzTCs5azREZXE1RjdKbGlKWHdzMXMxZEwwWlRMUlhrcUNlZXFoV2tuWnUxDQorZURuTCtKU3paNDg5VmNmVkRCdndRb1pOdmpmeTlwM2FYc3EvNEd6bDhCS2d3OUxoUHoxdUNBSFRpK0V2bnZzDQphQlFTdTNwYkVBWXFnVDdNa3NObEV4N3dlditQNEFHalgrQkhmNnlBSEZOaExOUkpzZVZuZm8yeHUvWkZ6S0lJDQpSb0Z0OEJWZ1pscFJxTWtYV09XQVNzcS9ueU9MRS9BdHFEREJ6dmo2YjJPNTVyUzhBdVF1a0Q1aFBSbEJ4WXNnDQpBdTJKNUhSM2V3QjFNcjcrbVZTQVdUVUNBd0VBQWFPQ0FiMHdnZ0c1TUFzR0ExVWREd1FFQXdJQnhqQVFCZ2tyDQpCZ0VFQVlJM0ZRRUVBd0lCQURBZEJnTlZIUTRFRmdRVU5XcityZ2xEVENMcXFGNW5TRzRLYlltdTVKWXdKd1lEDQpWUjBnQkNBd0hqQU5CZ3NyQmdFRUFXZGtBUUVEQkRBTkJnc3JCZ0VFQVdka0FRRURBekFaQmdrckJnRUVBWUkzDQpGQUlFREI0S0FGTUFkUUJpQUVNQVFUQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01COEdBMVVkSXdRWU1CYUFGSkpYDQo0dXN2dUl0SWJFM2RCN004YjZmbE9aRE9NSFlHQTFVZEh3UnZNRzB3YTZCcG9HZUdaV2gwZEhBNkx5OWpjbXd1DQpaWGgwWlhKdVlXd3ViRzFqYnk1amIyMHZZM0pzTDJObGNuUjFjR1F2VEc5amEyaGxaV1FsTWpCTllYSjBhVzRsDQpNakJTYjI5MEpUSXdRMlZ5ZEdsbWFXTmhkR2x2YmlVeU1FRjFkR2h2Y21sMGVTVXlNREl1WTNKc01JR0tCZ2dyDQpCZ0VGQlFjQkFRUitNSHd3ZWdZSUt3WUJCUVVITUFLR2JtaDBkSEE2THk5amNtd3VaWGgwWlhKdVlXd3ViRzFqDQpieTVqYjIwdlkzSnNMMk5sY25SMWNHUXZURTFTVUV0RFV6SmZURzlqYTJobFpXUWxNakJOWVhKMGFXNGxNakJTDQpiMjkwSlRJd1EyVnlkR2xtYVdOaGRHbHZiaVV5TUVGMWRHaHZjbWwwZVNVeU1ESXVjRGRqTUEwR0NTcUdTSWIzDQpEUUVCQ3dVQUE0SUJBUUJJTkpxcGR3alpsWm53bUhmRFVsMWpLMllsOFhiUW90ZlRielAxVndpQlNZT3MyQjV1DQpTZ0JsV0NQc1lEbGRwQmtLV2xNRG4xdW81WDBxQThqSEplWUFiREo5a3NmYytOOG1pbnFWVS93em4xaGJYaUVYDQoxbzBYWlQwa2twNDlEZXBGSHlnMEUrN1FocFpxeUtNOUlsM0ZmZ0s4dzE5SjZjT1RBSzlFY3htdks3SnhTVitWDQpsWVQvQ2duSU15VURERFlrT3hvRHBhcWx0a05URXAvVFRQcG1aRk94ODloaU1BRGxFQjZxbFZReFRKL1NmbmVQDQpmc2M3SUY2cVIxTzdwT1NPbG1uamJvaldMTGlrMkdCdWlGZWZMZW5WRUdIR1B0M2VDZGNjcDRPMzRqd0FDSkpEDQpMdlFEZUROY3lTc012N05FcWpDQ0F6b0NkZGZjRXU1V0ViZUMNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-netherlands-ministry-of-defence
  namespace: default
data:
  0-Staat_der_Nederlanden_Root_CA-G3.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGZERDQ0ExeWdBd0lCQWdJRUFKaWlPVEFOQmdrcWhraUc5dzBCQVFzRkFEQmFNUXN3Q1FZRFZRUUdFd0pPDQpUREVlTUJ3R0ExVUVDZ3dWVTNSaFlYUWdaR1Z5SUU1bFpHVnliR0Z1WkdWdU1Tc3dLUVlEVlFRRERDSlRkR0ZoDQpkQ0JrWlhJZ1RtVmtaWEpzWVc1a1pXNGdVbTl2ZENCRFFTQXRJRWN6TUI0WERURXpNVEV4TkRFeE1qZzBNbG9YDQpEVEk0TVRFeE16SXpNREF3TUZvd1dqRUxNQWtHQTFVRUJoTUNUa3d4SGpBY0JnTlZCQW9NRlZOMFlXRjBJR1JsDQpjaUJPWldSbGNteGhibVJsYmpFck1Da0dBMVVFQXd3aVUzUmhZWFFnWkdWeUlFNWxaR1Z5YkdGdVpHVnVJRkp2DQpiM1FnUTBFZ0xTQkhNekNDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFMNHlvbFFQDQpjUHNzWEZucmJNU2tVZWlGS3JQTVNqVHlzRi96RHNjY1BWTWVpQWhvMkc4OXJjS2V6SUpuQnllSGFIRTZuM1dXDQpJa1lGc08ydHgxdWVLdDZjL0RyR2xhZjFGMmNZNXk5SkNBeGN6K2JNTk8xNCsxQ3gzR3N5OEtMK3Rqems3RnFYDQp4ejhlY0Fnd29OekZzMjF2MElKeUVhdlNnV2haZ2hlM2VKSmcrc3plUDRUcmpUZ3prQXB5SS9vMXpDWnhNZEZ5DQpLSkxaV3lOdFpyVnRCMExycGpQT2t0dkE5bXhqZU0zS1RqMjE1VktiOGI0NzVsUmdzR1llQ2FzSC9sU0pFVUxSDQo5eVM2WUhnYW1QZkpFZjBXd1RVYVZIWHZROVBscms3TzUzdkR4azVoVVV1cm1rVkxvUjlCdlVoVEZYRmtDNGF6DQo1UzYrenFRYndTbUVvclhMQ0NOMlF5SWtIeGNFMUc2Y3h2eC9LMllhN0lybDFzOU45V01KdHhVNTFudXM2K044DQo2VTc4ZFVMSTdWaVZEQVpDb3B6MzVIQ3ozM0p2V2pkQWlkaUZwTmZ4Qzk1REdkUktXQ3lNaWptZXY0U0g4Ulk3DQpOZ3pwMDdUS2JCbEJVZ21oSGJCcXY0THZjRkVoTXR3RmRvekw5MlRrQTFDdmpKRm5xOFh5N2xqWTNyNzM1ekhQDQpiTWs3Y2NIVmlMVmx2TURvRnhjSEVyVmMwcXNnazdUbWdvTndOc1hObzQydGkreWp3VU9INWtQaU5MNlZpelh0DQpCem5hcUIxNm56YWVFckFNWlJLUUZXRFpKa0JFNDFaZ3BSRFVhano5UWR3T1drZTI3NWRoZFUvWi9zZXlIZFR0DQpYVW16cVdyTFpvUVQxVnlnM045dWR3YlJjWFhJVjIrdkQzZGJBZ01CQUFHalFqQkFNQThHQTFVZEV3RUIvd1FGDQpNQU1CQWY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWREZ1FXQkJSVXJmckhrbGV1eWpXY0xoTDc1THBkDQpJTnlVVnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQWdFQU1KbWRCVExJWGc0N21BRTZpcVRuQi9kNitPZWEzMUJEDQpVNWNxUGNvOFI1Z3U0UlY3OFpMellkcVFKUlpsd0o5VVhRNERPMXQzQXB5RXRnMllYelRkTzJQQ3d5aUJ3cHdwDQpMaW5peU1NQjhqUHFLcXJNQ1FqM1pXZkd6ZC9UdGl1bnZjelJEbkJmdUNQUnk1Rk9DdlRJZXVYWll6YkIxTi84DQpJcGYzWUYzcUtTOVlzcjFZdlkyV1R4QjF2MGg3UFZHSG9UeDBJc0w4QjMrQTNNU3MvbXJCY0RDdzZZNXA0aXhwDQpnWlFKdXQzK1RjQ0RqSlJZd0VZZ3I1d2ZBdmcxVlVrdlJ0VEE4S0NXQWc4enhYSHpuaU45bExmOU90TUpnd1loDQovV0E5cmpMQTB1Nk5wdkRudElKOENzeHd5WG1BK1A1TTl6V0VHWW94K3dyWjEzK2I4S0thYThNRlN1MUJZQlF3DQowYW9SUW03VEl3SUVDOFpsM2QxU2Q5cUJhN0tvK2dFNHVaYnFLbXhubDRtVW5yemhWTlhrYW5qdlNyMHJtajFBDQpmc2JBZGRKdSsyZ3c3T3lMbmZsSk5ab2FMTm16bFRuVkhwTDNwcmxsTCtVOWJUcElUQWpjNUNnU0tMNTlOVnpxDQo0QlorRXh0cTF6N1hudnd0ZGJMQkZOVWpBOXRiYndzK2VDOE4zak9ORnJkSTU0T2FnUTk3d1VOTlZRUVhPRXBSDQoxVm1paVhUVG43NGVTOWZHYmJlSUpHOWdrYVNDaFZ0V1FielFSS3RxRTc3UkxGaTNFak5Zc2pkajNCUDFsQjAvDQpRRkgxVC9VNjdjakY2OEllSFJhVmVzZCtRbkdUYmtzVnR6RGZxdTFYaFVpc0hXcmRPV25rNFhsNHZzNEZ2NkVNDQo5NEI3SVdjbk1Gaz0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
  1-Staat_der_Nederlanden_Organisatie_Persoon_CA-G3.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHU0RDQ0JEQ2dBd0lCQWdJRUFKaWlSakFOQmdrcWhraUc5dzBCQVFzRkFEQmFNUXN3Q1FZRFZRUUdFd0pPDQpUREVlTUJ3R0ExVUVDZ3dWVTNSaFlYUWdaR1Z5SUU1bFpHVnliR0Z1WkdWdU1Tc3dLUVlEVlFRRERDSlRkR0ZoDQpkQ0JrWlhJZ1RtVmtaWEpzWVc1a1pXNGdVbTl2ZENCRFFTQXRJRWN6TUI0WERURXpNVEV4TkRFMU1Ea3pOMW9YDQpEVEk0TVRFeE1qSXpNREF3TUZvd2FURUxNQWtHQTFVRUJoTUNUa3d4SGpBY0JnTlZCQW9NRlZOMFlXRjBJR1JsDQpjaUJPWldSbGNteGhibVJsYmpFNk1EZ0dBMVVFQXd3eFUzUmhZWFFnWkdWeUlFNWxaR1Z5YkdGdVpHVnVJRTl5DQpaMkZ1YVhOaGRHbGxJRkJsY25OdmIyNGdRMEVnTFNCSE16Q0NBaUl3RFFZSktvWklodmNOQVFFQkJRQURnZ0lQDQpBRENDQWdvQ2dnSUJBTDVpNkJrNmVpNis5NkhDZFMzRUJKR0JjTjlabjN2TlJSZXg0SVJqYndBV2VBVkk2U1IzDQo5UjZZTmlML2xPZVRRa3ZuV3NSYjFjcFdTRkNDTEV4WTY1VXpqd3hXVUQvUXc1NVl4LzZ1eG9KNGJZakkzM1VkDQpRWnVVeXgxdmJmOTdkNEthZFhMcGl4a3dic3dMTXVGNm8rUDR2ZDhLbDBaRWZvRkk3S3kzTHQ2WjFWMXMzQzJEDQowc0lIK0V2eEExNDNzNmltd2tSRnoxZmZLRWwzNEQyUUFGQmNJVXQ0aFJJVzg4ZW15MFFDRFkvclFqT0p2Zkd1DQpCcm5TUVhETFZEUUdoL3ZBTTJuTHo5aHI5cHo3c0srS3hKT2E0UFlxU3B3Z3lQVjFPMjVJUU5VOE0yMk9QYXNrDQpRNURoYVc3d2FoWFpWam9CaEpKcUl3bDVDVldUaWRPaDkvTjRKOWdrZmRMajhVbTk5QkFwZnlUTFNaZFh6SG05DQpGT3ZKQjJib1hKTHNPb25wTndXdHFkNjlDRGxHcWFYVm5BcFVLd1dOdkE4cHVsKys2SjZFcm9ySGxJU3VTbExEDQpVTGxEeUFrNksyemRxSzlPallJblVZMkJrSkZreWd6VGtPamcwb2E2M2tzbG4xTmVrTi90eVhERkZ2RlpCMUlRDQpRMjRSclhNWXFYTjhkWC93V3V4RERDaitsbVF5TWpmMGorUXpjVkpJR21nbTFlWkxBLzl3UVdSeXB6bHBieXloDQpZcDFTaFB6enM0Q3lRQjlEcXB6QW9obTM5VFIwRXdONjNBYVRObHlPN2M0ejdhSVZ1MmM3YllnSmRkMzBKNk1DDQpnVzBkNmUzZDcranRHdHlmNGpoT0NWSzBGKzJWbDVIcmVaSUd4VFlGREErRktzcE9Cc2U3eGQ2bkFnTUJBQUdqDQpnZ0VGTUlJQkFUQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01GMEdBMVVkSUFSV01GUXdEQVlLWUlRUUFZZHJBUUlGDQpBVEFNQmdwZ2hCQUJoMnNCQWdVQ01EWUdDbUNFRUFHSGF3RUNCUU13S0RBbUJnZ3JCZ0VGQlFjQ0FSWWFhSFIwDQpjSE02THk5amNITXVjR3RwYjNabGNtaGxhV1F1Ym13d0RnWURWUjBQQVFIL0JBUURBZ0VHTUI4R0ExVWRJd1FZDQpNQmFBRkZTdCtzZVNWNjdLTlp3dUV2dmt1bDBnM0pSWE1EOEdBMVVkSHdRNE1EWXdOS0F5b0RDR0xtaDBkSEE2DQpMeTlqY213dWNHdHBiM1psY21obGFXUXVibXd2VW05dmRFeGhkR1Z6ZEVOU1RDMUhNeTVqY213d0hRWURWUjBPDQpCQllFRk82c2JVRHExUVJxaHl4VmUvVS9MZHJ1MjZ6aU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQWMwU0ZzDQpLbEJGa3FCekxLNWxZcUVLMlFMc0ZSTDhMVXMvTTBsZ1BhZ1dWNnM4MjFuWGRwc2l6Wk41b2dYekh3c3BvK3Z3DQp3SGgwcTg4Q05aOHRzbTJwd1ZOejM2ZVFzUFJMMnNQbHo4MlZWVlpmNTlnWXNmb1RjSDJJRDduNW10VDBZZUhUDQprNUVTWUlKaFFmeHY5SkdhMjRRTU4zRVhQZXRQTnBKWWRXMHlRVWJlandwc0U0ZVNWOTVGUHdlYjdEcWZzRWZXDQoxa05nc1oybEYyQ0pRM0t2S09sSm11UUhSQ2lTOUZDMjc4eXNCSFFaSFVLNFdjYWJES2cyL0MzQjFKSDJRZWFJDQorUzFWZHkzaGxkeGdmcmhqMmppVUdiZGREdkxhaDN2eFdldTBGdXltQWZ5ejF4bVBTT3NsbEtxbXM2YWV2ZEY0DQpKVzhrQkJVYU5JNWQ4WCs5VHBSRk1yVjc5dWRQN2FtSHhwcmVYM1hSQnJGNG1HMUVLNHpDVlVEeFNtKzRCanZaDQp5MmNmTWRUVjZQcEF6SEkySTJsanF5N2VvZkRwaGxJTFVTdktCRC9PVW1hRnZ2R21qOC9uWFdqNGxvNlpqOFl3DQpodU0zL0IvaXZJVHVxZ3lKa0FYc0ZjNHI1MTM1VlQraDZVVkZrNkc5cnJNQmFxQkNPNW5Td3Q4d29YczllODVUDQp2N2tMQTFsU2V6YktDZUo2UVBvS0xRYlNKTC9hVk55djZCQVIvMXlTVUg1anNUZVhIZy95RUk0Mktmc3pMYU02DQpja0QxUStuWGxxc2NuMHRveWN3a0E5M210N3BmSHhvdGU4VUd2K3F5SWt5OE1XMStsRFhMamhxZkh0N0hrZGx2DQpuUmJzcnlZRys4WHdhYVVxWXlvNzRvVEM0NWM1NmV5NGdBR2dCUT09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
  2-Ministerie_van_Defensie_PKIoverheid_Organisatie_Persoon_CA-G3.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUhaRENDQlV5Z0F3SUJBZ0lVS2tFbGQzU2dyQ05KZC80NmQ3bm1mbm4xZlUwd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2FURUxNQWtHQTFVRUJoTUNUa3d4SGpBY0JnTlZCQW9NRlZOMFlXRjBJR1JsY2lCT1pXUmxjbXhoYm1SbApiakU2TURnR0ExVUVBd3d4VTNSaFlYUWdaR1Z5SUU1bFpHVnliR0Z1WkdWdUlFOXlaMkZ1YVhOaGRHbGxJRkJsCmNuTnZiMjRnUTBFZ0xTQkhNekFlRncweE9UQTJNamN3T0RRNU1EWmFGdzB5T0RFeE1USXdNREF3TURCYU1JR1MKTVFzd0NRWURWUVFHRXdKT1RERWdNQjRHQTFVRUNnd1hUV2x1YVhOMFpYSnBaU0IyWVc0Z1JHVm1aVzV6YVdVeApGekFWQmdOVkJHRU1EazVVVWs1TUxUSTNNemN3T1RnMU1VZ3dSZ1lEVlFRREREOU5hVzVwYzNSbGNtbGxJSFpoCmJpQkVaV1psYm5OcFpTQlFTMGx2ZG1WeWFHVnBaQ0JQY21kaGJtbHpZWFJwWlNCUVpYSnpiMjl1SUVOQklDMGcKUnpNd2dnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURJNFZQTndDZUpkRWVUSkNhRwpTLzR4ejUxcGJzL2U0Y0JDd1k0MEIvK1F6ZE16NHZITGI0UmN3NEJ4OWFqbWYyMnlBNllJN2ZCbUdnS2ZnTmZEClhKeDJZWGN1WDlSVzRzaWdrSnVtbDY2a2hXSmtUM3o4Y01La0xvVlRvWExHb2VwcjhVNUh1dGJwWW1mdE9CakcKb1grdkVzVHEvM1NxYnVqY0lxb21oNnJoanBRT3BaWWpWM2FCU1VTcEpZUVVJN25jYXZESCtnS0tsNDVPY2ROdwpTVytoMzliSGZ1ZzR6bndLTCtXYjRHbnczNTQzdXFHRWVaQWV1eUFxMlBsOVlXNDJscUV1cG83aEZlT09oQmlHCnBPU29BQ1Q5bVpqZ2I2VFd3SWJLUkdjZDMyOEtSaVcvcVRUSEhIV0ZXRHN6ZkxlRW1FVjZ1YjNpYkJqVDVHdmUKR2JNUmpZNXQzV1FlQWl0eTRUREd4UUtZTEZ4QnZIaEppV3J5dWFpVWR4MlpHTUVxMmlUVFdlZjZjKzhJMzdDMgpvbzhncTdyK2dpS25XbmZtcERKc0NQYXFQZ3RZd3E1eUppVGprNjUrd3NHVDA5RXpvai8xT0RCNmJobWc4M0xXCmY1cjFQQXRqVlJVZks4OUd5MHRJQUlpOGVrdHl3eUQrVEdoMTBrVnlGTnhzWXppbzNWODl1NXFsT2d3SnJObzUKdXR2ODhZQkZ6VkJSYWozaUhMR0lnUnpxQjBJcHhPcTlGYTU1UkgxMFgxY0E2NVdHY25leHQ3cFVrU1BLTnVuYQpHbmxFdTJuTmZuWk1qV2VuUzhzbDZ4MGlzRVpsL3hTTzE2SkJDL0FoN1RNVHNtRDRSamxtV2MvUFNRenQxdkdFClZXMUdOVlhpbVo3dkE1VmEzR0h3WjVlQmxRSURBUUFCbzRJQjJEQ0NBZFF3VlFZSUt3WUJCUVVIQVFFRVNUQkgKTUVVR0NDc0dBUVVGQnpBQ2hqbG9kSFJ3T2k4dlkyVnlkQzV3YTJsdmRtVnlhR1ZwWkM1dWJDOUViMjFQY21kaApibWx6WVhScFpWQmxjbk52YjI1RFFTMUhNeTVqWlhJd0hRWURWUjBPQkJZRUZDTzcrZCtBaVJPamR5ZnB4bWxECk00MUpCOEpxTUJJR0ExVWRFd0VCL3dRSU1BWUJBZjhDQVFBd0h3WURWUjBqQkJnd0ZvQVU3cXh0UU9yVkJHcUgKTEZWNzlUOHQydTdick9Jd0pRWUlLd1lCQlFVSEFRTUVHVEFYTUJVR0NDc0dBUVVGQndzQ01Ba0dCd1FBaSt4SgpBUUl3WFFZRFZSMGdCRll3VkRBTUJncGdoQkFCaDJzQkFnVUJNRFlHQ21DRUVBR0hhd0VDQlFJd0tEQW1CZ2dyCkJnRUZCUWNDQVJZYWFIUjBjSE02THk5amNITXVjR3RwYjNabGNtaGxhV1F1Ym13d0RBWUtZSVFRQVlkckFRSUYKQXpCUUJnTlZIUjhFU1RCSE1FV2dRNkJCaGo5b2RIUndPaTh2WTNKc0xuQnJhVzkyWlhKb1pXbGtMbTVzTDBSdgpiVTl5WjJGdWFYTmhkR2xsVUdWeWMyOXZia3hoZEdWemRFTlNUQzFITXk1amNtd3dEZ1lEVlIwUEFRSC9CQVFECkFnRUdNRDhHQTFVZEpRUTRNRFlHQ0NzR0FRVUZCd01DQmdnckJnRUZCUWNEQkFZS0t3WUJCQUdDTndvRERBWUsKS3dZQkJBR0NOd29EQkFZSUt3WUJCUVVIQXdrd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFJV2FYdzVxSDMrawpqT2NpQVlyNG9ua2V1NjdPOEdWV1M4d1d4SllvenNmakRnVHFPcVJ5SGVqTWpVaitDZU1lcHNMMlhLWHJwV1Q5Ck5BSXRlVFpwV2Jwd1JFTlFROHlWbkFkaVFoUDAzd1I3ajVXb1E4M1BRUTJ2NWRLMHVFU2xNd0RpZEVMRUxHRUwKek5Tc2ZiV2FYWGQyZEUyWGpTNk56cS9XQjgrMlUyQUhoZloxM2xQemJ1U21PakNXRjIyUUZKcnVNTndDdVJBKwpKbmZDVFJacG1qTDh4NWVGbjlTaVp2TjFsRHNDaDA2QUw0d1NyVGorUnNKNzNmUGpxZ1duM2hWVjhPQ21XZmpVCldCYUZiOE9JV0J5aXRpSnBqVlE1V1RSVzB4YVdjTlBOR1hNQ0dQY2dwNTBJNTkxanJjUS9YQUk2Um1YelRNV3AKN25xNHU0Um82dW1UZDVsUG9CdHpUMFFLZ3dRWEsrMGUvSi9iRE1oUXVWcnp0dlNhbm5yL3JxZXA5Y1R2NjFLSgprd0h4MHJudVpBd0lvdCtWei9iN09Zcm5OMEVPL0VGMk1RTnBSSXArODF1Tkl4NmhqbUdYOFFidlQ5bS8xSlJ3Cm1CVjFsRmQvSktrRWUzZU4walVzdlVHNm1vaW1yRTQ2VWVuZFZ2U1hBbEcwak1tdzRDS0drRm9lYjdadU9kemQKaS80eFNybFJVSDRscVdhQlVsS0Uzb2ZKSlJwSzNsWkRqNERDR1VpR3YzZ1NGQXQrYzltekljSjhrOUhReTdhawpFKy9rT2NNamRSZ0RFU1h2aExGMkVVOHZIT3NxcDB6dDBCazBkMmZsYXhLSm02MXk4VzByTm5rbmxvdmVGQzRRCjJXaW1tVjdJMWJUd3p2VDQvZ016ci9MUFQ0VzdmSEVECi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-northrop-grumman
  namespace: default
data:
  0-Northrop_Grumman_Corporate_Root_CA-G2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGZURDQ0ErQ2dBd0lCQWdJUU1xMnB1QXkxanF4RDNIYjRyUXdNK3pBTkJna3Foa2lHOXcwQkFRc0ZBRENCDQpsakVMTUFrR0ExVUVCaE1DVlZNeEpUQWpCZ05WQkFvVEhFNXZjblJvY205d0lFZHlkVzF0WVc0Z1EyOXljRzl5DQpZWFJwYjI0eE1EQXVCZ05WQkFzVEowNXZjblJvY205d0lFZHlkVzF0WVc0Z1NXNW1iM0p0WVhScGIyNGdWR1ZqDQphRzV2Ykc5bmVURXVNQ3dHQTFVRUF4TWxUbTl5ZEdoeWIzQWdSM0oxYlcxaGJpQkRiM0p3YjNKaGRHVWdVbTl2DQpkQ0JEUVMxSE1qQWVGdzB4TXpFd01URXhOakEzTURsYUZ3MHpNekV3TVRFeE5qQTNNRGxhTUlHV01Rc3dDUVlEDQpWUVFHRXdKVlV6RWxNQ01HQTFVRUNoTWNUbTl5ZEdoeWIzQWdSM0oxYlcxaGJpQkRiM0p3YjNKaGRHbHZiakV3DQpNQzRHQTFVRUN4TW5UbTl5ZEdoeWIzQWdSM0oxYlcxaGJpQkpibVp2Y20xaGRHbHZiaUJVWldOb2JtOXNiMmQ1DQpNUzR3TEFZRFZRUURFeVZPYjNKMGFISnZjQ0JIY25WdGJXRnVJRU52Y25CdmNtRjBaU0JTYjI5MElFTkJMVWN5DQpNSUlCb2pBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVk4QU1JSUJpZ0tDQVlFQW9kZlU3TG83NFBGcjRSa3BHc1FHDQpXdS9DaHdVTVlST2MvbEY0N3FvMlFtUjhWMXRjZlg1MzI5clZJaE53emxrOUI5YW1reGRDL3RsQUo2aGtvb3duDQoxZTR0d2x6Unl5eWQ2anVjdkNaSVdJb2VSaVhxakJpL0c1ekcwa29pRGUxcjZuQXNzUjI4bTRjWXA4SlcxQmpkDQppR0hnVXRPQ21ubk8zQm1zeVRQR21oZVVNS0VKSnFISmV3UW1aUlZJSjQ0MU9wMUMyVkZIZVdvVFErL3NYMzJkDQpaZU1PSDZDMHVSMWhPc1ZQcyttY29PWnZ4Zm4zZUhzclpoaHlwV2V3RzlFaGdDNDhZVm0rOEdIMCtObXlCQThKDQpZUVQvRXI2Ny9hLzFtcGljZmdLRHVVblhETUlWWjR3UTFqRURNdlhiSmpxMWlqbHp6M1RKbWV2S2t6M0hCSXl3DQpqOTI5d2dZTmovT1NONk9rQmVia3diSk5OUW1MZkZjWjB4RTYzVjJtWmxDaWxSMG1peHU3V096V3FOL0liUyszDQpORlFqdnpTQ2ZSTVcweUV4Z1hoYWpWbFlzSjczaXgyOGZTRUxJeFRNTHVaYTNGMk9kK2wyYkJ4WThwZjB4dkk0DQo2YzNMdWh0M0dUN2tWNytSQk9RS0dsa2ZZbExIVnFlUmdrTEpGTmdQc0RwQkFnTUJBQUdqZ2I4d2did3dlZ1lJDQpLd1lCQlFVSEFRc0ViakJzTUdvR0NDc0dBUVVGQnpBRmhsNW9kSFJ3T2k4dlkyVnlkR1JoZEdFdWJtOXlkR2h5DQpiM0JuY25WdGJXRnVMbU52YlM5alpYSjBaR0YwWVM5d04yTXZTWE56ZFdWa1FubE9iM0owYUhKdmNFZHlkVzF0DQpZVzVEYjNKd2IzSmhkR1ZTYjI5MFEwRXRSekl1Y0Rkak1BNEdBMVVkRHdFQi93UUVBd0lCQmpBUEJnTlZIUk1CDQpBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlIvUStvOElIYytrc3VOaGFLSUJqQmVIa00rdHpBTkJna3Foa2lHDQo5dzBCQVFzRkFBT0NBWUVBTk9OQWtXK20yQWJ3V3VMUlFpTnprWUQzTm04TzNMWWgrdWNyNUZwWFR1Z2sxVEJzDQpKQm9PRUk4U2p5Y2dIK0QvWUp5b3pzbkNWYmFnNUh2YkV0ZS9SN3FJWitOc0Y5T1VzSGtGN2lHT1JoSnU0aS9CDQptU0N4QnVaU0JwZVZKYTFPZ0UxbVRRVEl5NkpyZm1Od0ExME1FNWdLTFc5dGlTTVY5WW1zenRZVW10SUZUcmcxDQpGa3NlODh1ZkNlRjk4bWJaOEExU1p6Qm1HanNKUU50b1YycTNVa2IvaldWSllKeHhiUDRqbVJFSDNDQ0oxZ0tFDQpWR0htSm1hc2NRZHp0b21OcC96bUxDS1QzbUdHejcxOEMwSEVHTiswZG1LWkZsd3JmeE4wMGNDSUFsSEhPa3c3DQpTTktTbGJwYWsxY1ZPd0xWK2FBb09wUUVmYkVIV3d2N0pxa1J4S0RyMlNRa3dwR1NkcXlWWHE2UHdSZEp4QVNPDQpRZnd0T3JFRzlDUUlITzhBbXBmQTBVZXhVeXMvbVExYXpja0lnMEszSFBQSGtxSWgydTBZK0wxY05NTEhUUTE3DQpWc2VXeE1GOWMvTWZKRDIzZ2F0MlJaOVBkblk4ZXE5UXVJZnlrazJVSFpwdEhKb2RzTDJKOXZMY2h0MU9QQ3p4DQpiZVNlWFhLaDBBUFI5dW9xDQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
  1-Northrop_Grumman_Corporate_Signing_CA-G2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlJRXpDQ0JudWdBd0lCQWdJS1lZU0VBQUFBQUFBQUFqQU5CZ2txaGtpRzl3MEJBUXNGQURDQmxqRUxNQWtHDQpBMVVFQmhNQ1ZWTXhKVEFqQmdOVkJBb1RIRTV2Y25Sb2NtOXdJRWR5ZFcxdFlXNGdRMjl5Y0c5eVlYUnBiMjR4DQpNREF1QmdOVkJBc1RKMDV2Y25Sb2NtOXdJRWR5ZFcxdFlXNGdTVzVtYjNKdFlYUnBiMjRnVkdWamFHNXZiRzluDQplVEV1TUN3R0ExVUVBeE1sVG05eWRHaHliM0FnUjNKMWJXMWhiaUJEYjNKd2IzSmhkR1VnVW05dmRDQkRRUzFIDQpNakFlRncweE16RXdNVEV4T0RVMk16WmFGdzB5TmpFd01URXhPVEEyTXpaYU1JR1pNUXN3Q1FZRFZRUUdFd0pWDQpVekVsTUNNR0ExVUVDaE1jVG05eWRHaHliM0FnUjNKMWJXMWhiaUJEYjNKd2IzSmhkR2x2YmpFd01DNEdBMVVFDQpDeE1uVG05eWRHaHliM0FnUjNKMWJXMWhiaUJKYm1admNtMWhkR2x2YmlCVVpXTm9ibTlzYjJkNU1URXdMd1lEDQpWUVFERXloT2IzSjBhSEp2Y0NCSGNuVnRiV0Z1SUVOdmNuQnZjbUYwWlNCVGFXZHVhVzVuSUVOQkxVY3lNSUlCDQpvakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBWThBTUlJQmlnS0NBWUVBNlpqSHdydTV3a1lNS05Nd3lkVkd1aXJXDQpEYzVRbWNNTnR1OWJjVVAzVmVuaW1sZmZ0d2VGSW4wU3FwdjZhYk9lSENsT1ZyUWV5d0p6dFhHaEl4SGpHa2NnDQppaWYxU2hIYnRPOW1wUFdEa3o5WVNNQ2pJS3ZBWk14am00UXd4cmVNQkpXNkt0RE5lbFpwQ0FWQnJ6b0dPR3JFDQpEY2VkS0xTMC9QWFhseE5tYmNpUWZvOURDZ3VKb1Mxb0FTSFB3YVVwaEpBZHVLV1Q1dVZDTThUNzVaeFEvczVDDQpQamh4c0tXT1ZDVlpFV1RZRjlsbkZBQ2licmVHdGltZjMrbEhsc0ZjRjBVYlNMRVJDU2M1RE1NT2hlSEVwcFFHDQpTVUdYQ0pGcFVqeFk4dXFHRWxUcEVOZnJ3ZzY0a3NjbCtjcmZKSS9VU2NGZ21WcHFuSldERW9ocUppRlQyWFdiDQptQnIvUTIrWE11V2hLNFlpNURRNXpaMm5rU2krUUl0K2RTcTI2enVYbldTbkdWQ3Z2VVlISnBnOHppcEFabk9TDQpiUDJEZjluZzFIL01NbDBYcEh1NnN0dzdSUzNNc0YzTTdXNDVBa2dlQzNoeXdYK0xKMEhzVGZERWo0bDRhcHhuDQpmSmovQTRZV2lqWXJHWU82NzhsVnZVekdVbVBNdGxjeGF2ZGpCQ3NEQWdNQkFBR2pnZ05jTUlJRFdEQU9CZ05WDQpIUThCQWY4RUJBTUNBUVl3SFFZRFZSME9CQllFRlBQQy8vcE1XZjI0aG5ReEY1WVNZeWlnb0tnb01JSUNBUVlEDQpWUjBnQklJQitEQ0NBZlF3WWdZTEt3WUJCQUgvVG9OOUFnY3dVekJSQmdnckJnRUZCUWNDQVJaRmFIUjBjRG92DQpMMk5sY25Sa1lYUmhMbTV2Y25Sb2NtOXdaM0oxYlcxaGJpNWpiMjB2WTJWeWRHUmhkR0V2WTNBdmJtOXlkR2h5DQpiM0JuY25WdGJXRnVZM0F1Y0dSbU1HSUdDeXNHQVFRQi8wNkRmUUlJTUZNd1VRWUlLd1lCQlFVSEFnRVdSV2gwDQpkSEE2THk5alpYSjBaR0YwWVM1dWIzSjBhSEp2Y0dkeWRXMXRZVzR1WTI5dEwyTmxjblJrWVhSaEwyTndMMjV2DQpjblJvY205d1ozSjFiVzFoYm1Od0xuQmtaakJpQmdzckJnRUVBZjlPZzMwQ0NUQlRNRkVHQ0NzR0FRVUZCd0lCDQpGa1ZvZEhSd09pOHZZMlZ5ZEdSaGRHRXVibTl5ZEdoeWIzQm5jblZ0YldGdUxtTnZiUzlqWlhKMFpHRjBZUzlqDQpjQzl1YjNKMGFISnZjR2R5ZFcxdFlXNWpjQzV3WkdZd1lnWUxLd1lCQkFIL1RvTjlBZ293VXpCUkJnZ3JCZ0VGDQpCUWNDQVJaRmFIUjBjRG92TDJObGNuUmtZWFJoTG01dmNuUm9jbTl3WjNKMWJXMWhiaTVqYjIwdlkyVnlkR1JoDQpkR0V2WTNBdmJtOXlkR2h5YjNCbmNuVnRiV0Z1WTNBdWNHUm1NR0lHQ3lzR0FRUUIvMDZEZlFJTE1GTXdVUVlJDQpLd1lCQlFVSEFnRVdSV2gwZEhBNkx5OWpaWEowWkdGMFlTNXViM0owYUhKdmNHZHlkVzF0WVc0dVkyOXRMMk5sDQpjblJrWVhSaEwyTndMMjV2Y25Sb2NtOXdaM0oxYlcxaGJtTndMbkJrWmpBU0JnTlZIUk1CQWY4RUNEQUdBUUgvDQpBZ0VBTUI4R0ExVWRJd1FZTUJhQUZIOUQ2andnZHo2U3k0MkZvb2dHTUY0ZVF6NjNNSEVHQTFVZEh3UnFNR2d3DQpacUJrb0dLR1lHaDBkSEE2THk5alpYSjBaR0YwWVM1dWIzSjBhSEp2Y0dkeWRXMXRZVzR1WTI5dEwyTmxjblJrDQpZWFJoTDJOeWJITXZVbVYyYjJ0bFpFSjVUbTl5ZEdoeWIzQkhjblZ0YldGdVEyOXljRzl5WVhSbFVtOXZkRU5CDQpMVWN5TG1OeWJEQjZCZ2dyQmdFRkJRY0JBUVJ1TUd3d2FnWUlLd1lCQlFVSE1BS0dYbWgwZEhBNkx5OWpaWEowDQpaR0YwWVM1dWIzSjBhSEp2Y0dkeWRXMXRZVzR1WTI5dEwyTmxjblJrWVhSaEwzQTNZeTlKYzNOMVpXUlViMDV2DQpjblJvY205d1IzSjFiVzFoYmtOdmNuQnZjbUYwWlZKdmIzUkRRUzFITWk1d04yTXdEUVlKS29aSWh2Y05BUUVMDQpCUUFEZ2dHQkFFQXk2Vi8yaUJRVmlKQmNXVEtKdnhrUm1SZHFWeHhRbGM0eTVaSlNmQU5xM0ZDSVJkT1ZhRFZZDQpSZ3lXRE5kcmROVGZTSG9iS2RPY1hFcVJUMllQbVNWQjArZ3J1MmIyNzhHUlNGTjRmQVhQWElDelJhVy9ITXp4DQpYZk0yYXNXQjkwT2Ywakp1WitUSi9SSGR0SXhiYmt2c0k4NkpNbSt6cW1VbzNad2d6TXNjTXJ2c0lsNDl4cWhODQpEQTUwN2Yycm04RzhyNHZKb3dxSTlvR21veENBb2F6blNBN050OENEajVvUDhRRXBycXZET3gyRE10UlFXeUdwDQpHdXFhYzBuUklqOFR3YVMzbmNHbzhGS1UySmJ1Z0Q5aHB0TC9CS1prMDdZcHFwZnVHcnpHUFJpcW9zOFE3OGUxDQpXbk5KWi9SejlzSXpMRUIxOWlEVE9RbGU2QWVsV2xQNEV3K3FOVmgvUEdobnNhV0dueDE4clJTcW5Pcy9YL3pHDQordW9WREFrcE5pb3hLTGM2Ni95Zk1yaUlqRFg4ZE1QSXlyU3AxN2M3OXdqalpmdHY3bExKYTVaQnRWRElydGZUDQpwNTFsS0hlY3ZlTDkwWWpVejVueWlIYXNHNGNWbTBkRWJ1WEhQM0xQRHJsbmFEMkUxMm8vU1I5RVRkTXJTQlRrDQp3cnJUVGtqbGRnPT0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-raytheon-trust-chain-1
  namespace: default
data:
  0-Raytheon_Root_G2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlFd3pDQ0F5dWdBd0lCQWdJRVZSTWxOakFOQmdrcWhraUc5dzBCQVFzRkFEQnlNUk13RVFZS0NaSW1pWlB5DQpMR1FCR1JZRFkyOXRNUmd3RmdZS0NaSW1pWlB5TEdRQkdSWUljbUY1ZEdobGIyNHhEREFLQmdOVkJBb1RBME5CDQpjekVZTUJZR0ExVUVDeE1QVW1GNWRHaGxiMjVTYjI5MExXY3lNUmt3RndZRFZRUURFeEJTWVhsMGFHVnZiaUJTDQpiMjkwSUVOQk1CNFhEVEUxTURNeU5USXdORFV4T0ZvWERUTTFNRE15TlRJeE1UVXhPRm93Y2pFVE1CRUdDZ21TDQpKb21UOGl4a0FSa1dBMk52YlRFWU1CWUdDZ21TSm9tVDhpeGtBUmtXQ0hKaGVYUm9aVzl1TVF3d0NnWURWUVFLDQpFd05EUVhNeEdEQVdCZ05WQkFzVEQxSmhlWFJvWlc5dVVtOXZkQzFuTWpFWk1CY0dBMVVFQXhNUVVtRjVkR2hsDQpiMjRnVW05dmRDQkRRVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFMQ212VUthDQpLWWN3anJDTzdXdGtoVnl1V2RRREprck1yNGJpYXFqQTdVUGdoWVhWdjR5ZzFMYXNicTlBcGc5eVYyVWR5K2tRDQpMaWtKWEhVdlVHQlRGY21LaDB4dmhib2tSTFZVbFEvZ2VtQ2xtMVl4ZitveDRZRENqby9Jc2JteXhVMFc2Qnl1DQpNVkJtejgyOE5LRkRMV21YYkdyTjRaSE9nK2VGRDhhUE4xWEdnZkVXeHg0MTRVbjcrUWp4ajJyT3E5alcvZlJjDQp1OWtHSjRMdzZpdEh3MkUyNCtiR3lleDVON2ZmREJrY1B2OHFOa1grTHlHekVJT3p0alBzMnRWa1VnQWUwMlZQDQoraEFPUHRtWjAwUnNKWkZBNXBYZFBMNnAyRTZnbDdwRzVpanlXd3NDeU81VDBWQWtjZzM4S0FIMXV3TTVWV2tiDQpRM1lWZWgzYksyenlBMjNpdDE4MXFTOEkwUG41UFlNdFhyeDIyTWVRRnZOenl0bVp0R1Q5ZmpxbE00Rmlja3dFDQptSDVCSS9lWklYblJYZDFaZ1Mxd0c3dUpSSjVXZ1RyZk5ER0xsNUhUOUtSS0ZZSU1YRVBIUml4SlYwd2VhVHJzDQpTNjB0ZUtlQjRWY3BCZWNURXVqZ1FFZ0xXQVp0RXJDOEtYcWd6K3I5VTM0Z2hkWUFKTFBBQVRZVk1RSURBUUFCDQpvMkV3WHpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRUF3SUJCakFkQmdOVkhRNEVGZ1FVDQpZWmNEcDNzelk4SDVRRkdVUGp0UEVEMFlQRVV3SFFZSktvWklodlo5QjBFQUJCQXdEaHNJVmpndU1UbzBMakFEDQpBZ1NRTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCZ1FCeW9IMjdrdTA1OTJxU3BTQVQ0YWp5MHArcDdod3dUaWVODQpsalZxYko3SERmMTZsZmJxck40WFA4RFNITlphUkFGUmIyaVprUTBGSHFZeFVqc0NvbG9RUUJaNmNNYnJuK1h5DQowV2tMRFZqUXlJcVpURnZuZmM4eGs2YkJ1TU5zQnNtc2pydGIrS2hqUGxRZE9lVFo1MGdZakNoTVdZaDVyWHc2DQpxMVp2bmJLZkQ0dVpPZ2xzZ3Y4aUprbDRIWXJ6SnEyeEh0VHNBOGRkc1NXakxQRnY2c2x2VXNtMDJ1ajJIRFZMDQpuTGNGQkZPZmsxUWgzeDdXN3R5K09PWENGQTlGZllmZ0xwd1Ftc0ZwaVAycS83Z0M5ZTgzdWJxZmhuQ1hxTis0DQoyYW9CWVVoSENMYTU2Sm9iNjBMc1BXcEZnV0pNR091K2dFbHJTMkhwOWR0dVc0aFp3NjU3bHRjUFNrOFVteUxwDQovRm56SW4wWTh2dDhmeUVWdU9FNmtWS3JhVVovdmxEUzZlNlV2NXFkblJYNitwVUJtR1locDBRTERHNlRhYXF4DQpSTWFPNXVDejJHNlpJT21UN2NNellSY0luaWFMWnAzNlRMQ2g2Z3ZVVmpYVVZVV1hUNmxHL0ZMNjZlQ0t4OVQwDQpVaFdQY1EyWmtmNENHTE8wSWFNREdFdG5oK1JFQ0tJPQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  1-Raytheon_Class3_G2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHWURDQ0JNaWdBd0lCQWdJRVZSTW01ekFOQmdrcWhraUc5dzBCQVFzRkFEQnlNUk13RVFZS0NaSW1pWlB5DQpMR1FCR1JZRFkyOXRNUmd3RmdZS0NaSW1pWlB5TEdRQkdSWUljbUY1ZEdobGIyNHhEREFLQmdOVkJBb1RBME5CDQpjekVZTUJZR0ExVUVDeE1QVW1GNWRHaGxiMjVTYjI5MExXY3lNUmt3RndZRFZRUURFeEJTWVhsMGFHVnZiaUJTDQpiMjkwSUVOQk1CNFhEVEUxTURVeU5qRTFNVEV3TkZvWERUSXpNRFV5TmpFMU5ERXdORm93Y2pFVE1CRUdDZ21TDQpKb21UOGl4a0FSa1dBMk52YlRFWU1CWUdDZ21TSm9tVDhpeGtBUmtXQ0hKaGVYUm9aVzl1TVF3d0NnWURWUVFLDQpFd05qWVhNeEVqQVFCZ05WQkFzVENVTnNZWE56TXkxbk1qRWZNQjBHQTFVRUF4TVdVbUY1ZEdobGIyNGdRMnhoDQpjM01nTXlCTlFWTkRRVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFPWlhGL2hhDQpubnJuUUY5MFk4V0dDRVRIYzVmWmVPemsyc0Vxem5MZnFHNXVwWi9raEVNdjhZVmQwZHR0K1BJc0o4bGZMMHdzDQpRQW9ucEVvcTM0V2dDcS9OQ1p6ejBaaG14NGRGNTBKZDQ0cGxLOFdXTVNtTGtnblppc3FVTjM4bmQzN3g0VnYrDQpNRGtGYnN0L3doS2hORTNBWEFRb1doeERyeXJZZGlBTjh6Q2RhekZSNkNWcUVqNDNUZ0NlT1JCK0pTY1NQaEVLDQpkdy9RemdtbEJaa21vYkVkcXdyYkpnWTFuQng0d3ZXR2pEcHlQWW9uVnVQNVJBQmR4d0VFNzRrSzF2TGxOTWowDQp3SXMvVUNlSTlXQS9DVGdna0JQV2htNVpobXgybXJ4YzcySHZzZ1oyQytYOHl4SUVQRUk5cHB6dXFHNlpaSWVSDQpPMU0zQkh4aklvcHl0ZU1DQXdFQUFhT0NBbnd3Z2dKNE1BNEdBMVVkRHdFQi93UUVBd0lCQmpBU0JnTlZIUk1CDQpBZjhFQ0RBR0FRSC9BZ0VBTUZFR0NDc0dBUVVGQndFQkJFVXdRekJCQmdnckJnRUZCUWN3QW9ZMWFIUjBjRG92DQpMM0JyYVM1eVlYbDBhR1Z2Ymk1amIyMHZSekl2WVdsaEwxSmhlWFJvWlc5dVVtOXZkQzFITWw4d01TNXdOMk13DQpRUVlEVlIwZ0JEb3dPREFNQmdvckJnRUVBWXdoQ2dFTU1Bd0dDaXNHQVFRQmpDRUtBUTB3REFZS0t3WUJCQUdNDQpJUW9CRGpBTUJnb3JCZ0VFQVl3aENnRVBNSUlCWHdZRFZSMGZCSUlCVmpDQ0FWSXdnYitnZ2J5Z2dibUdPV2gwDQpkSEE2THk5d2Eya3VjbUY1ZEdobGIyNHVZMjl0TDBjeUwwTlNUSE12VW1GNWRHaGxiMjVmVW05dmRDMUhNbDlHDQpkV3hzTG1OeWJJWjhiR1JoY0RvdkwzQnJhUzV5WVhsMGFHVnZiaTVqYjIwdlkyNDlVbUY1ZEdobGIyNGxNakJTDQpiMjkwSlRJd1EwRXNiM1U5VW1GNWRHaGxiMjVTYjI5MExXY3lMRzg5UTBGekxHUmpQWEpoZVhSb1pXOXVMR1JqDQpQV052YlQ5alpYSjBhV1pwWTJGMFpWSmxkbTlqWVhScGIyNU1hWE4wTzJKcGJtRnllVENCamFDQmlxQ0JoNlNCDQpoRENCZ1RFVE1CRUdDZ21TSm9tVDhpeGtBUmtXQTJOdmJURVlNQllHQ2dtU0pvbVQ4aXhrQVJrV0NISmhlWFJvDQpaVzl1TVF3d0NnWURWUVFLRXdORFFYTXhHREFXQmdOVkJBc1REMUpoZVhSb1pXOXVVbTl2ZEMxbk1qRVpNQmNHDQpBMVVFQXhNUVVtRjVkR2hsYjI0Z1VtOXZkQ0JEUVRFTk1Bc0dBMVVFQXhNRVExSk1NVEFmQmdOVkhTTUVHREFXDQpnQlJobHdPbmV6Tmp3ZmxBVVpRK08wOFFQUmc4UlRBZEJnTlZIUTRFRmdRVU14YXFtZXBiNW1RUjdURlZ2QXY2DQpYbWtJR293d0dRWUpLb1pJaHZaOUIwRUFCQXd3Q2hzRVZqZ3VNUU1DQUlFd0RRWUpLb1pJaHZjTkFRRUxCUUFEDQpnZ0dCQURzZVRSY3VLV3JsN2MrcGhMYnhWR0NRVVB3L3dsaTZYdmJEN2czeHBxOE8vVUJBZmpxMFFPT3NSQUl3DQpRYUo3d0ZlRVBpNUphVEppYmtMUitESUlEUFhuZXg1SWk2MGxTcGpBa1FMQk9uS29sckVUQm1NWDdFNTVrNjZODQppOStNUmw3QTExRVZHd1pHQm85NEN0VEtZdHh2Q1owNDFZZWNtQk0vTFBMRmpPenZJN29henNid2RweTV1STd2DQpiU1NiekpWRVBqMWFqYmlJN0psYXZxbldGNG5ZS3ZTWFQzYmxUMDFjOGZ6U0dhVHVhRzA0RFN0T0k1YXVYbWVHDQpUMHNoTTJ0WVNMUVAydnVCaUoyaVBNRUM3WXlQTmtkTmVuYURHSUFPSFZsWFBBSWs0OUpLSENCSk0rdWNERWVHDQpvRGpwOW5lczZKdlZ6anhFRlg0V0ZSWVpnR3hwcFNUeExvN0VLUW5TYWU1aFY3OHFjY0QwTmZzbDFHY2FhSmp4DQpocS9CUDdhS0dQZTFpL3kzaTBLVTBxRHpVbWx5M1lrOG5nOUs4aVpSS3haM2xlV1l3bGRWejQzVHZUNURVN2FIDQp3cFB2aHE1U0l3OUNEVTlBRDRyWmlEVXFlK2VySnV1clJPVWRyVTRCaWpLOEVEdXZCNk8xKzBORldsQ2VHU2FIDQpoa0dLU1E9PQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-raytheon-trust-chain-2
  namespace: default
data:
  0-Raytheon_Root_G3.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGcERDQ0E0eWdBd0lCQWdJRVg0ZExQakFOQmdrcWhraUc5dzBCQVFzRkFEQnlNUk13RVFZS0NaSW1pWlB5DQpMR1FCR1JZRFkyOXRNUk13RVFZS0NaSW1pWlB5TEdRQkdSWURjblI0TVF3d0NnWURWUVFLRXdORFFYTXhFREFPDQpCZ05WQkFzVEIxSnZiM1F0UnpNeEpqQWtCZ05WQkFNVEhWSmhlWFJvWlc5dUlGUmxZMmh1YjJ4dloybGxjeUJTDQpiMjkwSUVOQk1CNFhEVEl3TVRBeE5ERTRNek0xTUZvWERUUXdNVEF4TkRFNU1ETTFNRm93Y2pFVE1CRUdDZ21TDQpKb21UOGl4a0FSa1dBMk52YlRFVE1CRUdDZ21TSm9tVDhpeGtBUmtXQTNKMGVERU1NQW9HQTFVRUNoTURRMEZ6DQpNUkF3RGdZRFZRUUxFd2RTYjI5MExVY3pNU1l3SkFZRFZRUURFeDFTWVhsMGFHVnZiaUJVWldOb2JtOXNiMmRwDQpaWE1nVW05dmRDQkRRVENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFLOTU1andBDQptcGN0bWxtalpEWlJ5R3IxNEkvNHM1YXA4QnVOZ29EU3dGdXVrUVJUdmQwQW1yU0d1RHJtSGw2MEFlQmd6eHIvDQpkbEpEZ2NKWkJ5dTE1ZFF3MHN1UmZXaVkxOXZLTTZXMHgrWnVReG1uQ1gvN0t1eFE4ZFJUYkVIVG9JSjk5bHpTDQpuWkxNNkZFMUhXUVZhN25VSFZZM3ROb3B2MGVPNnJUdUlrcVRDaXpSdiswa2RudDl2ZFFtbzhjRTkvS0dwU0pWDQpNRmV3SXFwZkt2cnQwWmF6WWxXcHVuOEQyUWdxY2xJd1FFc000ckhoVkdUcVlRd2dDNmhRV1YwcS85TnpMWS91DQpidU1BdVU1bCt4MzlRMkI4cEU1Y1pjczN4cWYwcDIydHpGZEkxRTYvTW5BdkF4cjByZWNOSjdSWWFqVURRQit3DQo0bDkzYnJRR0k3d3FwYlVlVWtGdHFINnpzQ1oyWWlIUHV0SXpQSlZUTktsZ1YzRTB3dmdJQ3RoSndiU0wzYUFoDQprMURYUjgwVHRQa2FhY1c1L2dZaWYrdWI0T2V2cVh6K2dISll3NUNWTmNkWTA4MVZjWW4xYzRYM0Erb2lLMW1rDQp3RjRqams2eGgzV3hFdGxsMmVjZzVGalNuVXFkOE0wQW9CMkZVa213bVFlbFNaNE1jME5Sd05NT1VabzNlNElRDQpaM3NUbDVnQkdMeGVjTUxiWmlMY0o0SlJTR0dmaGNlN3p5SEgyOG5kc1BSZHlDZFV6R2MrQ09UNlV6aHZYQjBiDQo3QjNxZ1E1cXFubUdJVnR3SnNwdGlYa052aHdZYi9QTDNDVGJLRlBPNjZldXhpSkQwaDR2a1lINlYwR3hzQWwvDQozMWtUd2JBSldrR1VPbWNEdHdOWW9VbXEzT3lTb0lEMWIwTkpBZ01CQUFHalFqQkFNQThHQTFVZEV3RUIvd1FGDQpNQU1CQWY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWREZ1FXQkJSVk5zdVZJZ0o5UWMzL1dDcTZ6NTUwDQpxYzNFR0RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQWdFQWxMZmc4OVcwL29PdCtaMU5XOUw2a3BHdkgxcjluckJrDQpsTUFRU0lPRjB1bXJDaGh4RlRSbERkY1FsMkxndUZvWDFlWkw1NmkyS0VYZEg5ajNuYnJHZ3ZEYmFKU3o3YXRKDQpSS0pPQzRIQTk1MCtPNW9YNG5KUGNDbEtaM1ZRZGxTZUd6M01FQWh0dHltNGppRktiSzZ4TGdsdnhkU0RTU0lZDQp4cUJiSWZ3Ui9YdUZodFhMRDRUbjhacUp5ZnlrN2ZWWm9HdHFhMG5HQy9TeXFZRXBOMDFKOWhMemJVZUcrK1pFDQp1UXhDbDRYdXFhRUpEbUFOMFgySjhTdloyZWg3dUEzcTQveTlrazNJZE94MXY2c0lYRDNKam9GdVJFeHA3YkhrDQpEdnlocjIxVENmWHRIVyt4QjJVT0pURm5Ud1JXNXNXOEQwQ216QnR2NmFuYmNxSDV0NDNXVGdCcGFxK0ZsUzJ6DQp0U3VXUWNIWThmNUxlRlNyVWFUSTlhLzlmcVlBU2x5NE5LaVVRLzBHZGlPR0p5VTFxZ2lnd2ZZVXBHY2FRTlkvDQpGdVMrRU1JKzQ4Nzk4bkxOYW0wR2hhOTM2LzlReW1EUDljaVFabzZ1aml3c1VlN3FuallLblIrZlBrZVhsZ3B6DQpaVVhQazhDajNKZUxLMEFidzhRNGdhaEs2NTR6Tko2ZGwxcmxBbUxtK0orWTQrVS9Na29JWURuRUdHeElJZmFaDQpxTU9KS3Bta0pBN2NNZmZTc24yUjVlTFdUYU1CdHFGTElxdjUvVGdVYUZMOUpOZjZMS3ZLekYwbEJUY1J4dm9yDQorOUVxL1A3RWllamVaYUl3M043VTRoN1oraHFLRkF2eDd1bEdYb2dQRDVRb2NyLzFHQ3pDUUYxK0IvMG5sUVVMDQpxM3l0czRleVZEcz0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  1-Raytheon_Class3_G3.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHUkRDQ0JDeWdBd0lCQWdJRVg0ZExxREFOQmdrcWhraUc5dzBCQVFzRkFEQnlNUk13RVFZS0NaSW1pWlB5DQpMR1FCR1JZRFkyOXRNUk13RVFZS0NaSW1pWlB5TEdRQkdSWURjblI0TVF3d0NnWURWUVFLRXdORFFYTXhFREFPDQpCZ05WQkFzVEIxSnZiM1F0UnpNeEpqQWtCZ05WQkFNVEhWSmhlWFJvWlc5dUlGUmxZMmh1YjJ4dloybGxjeUJTDQpiMjkwSUVOQk1CNFhEVEl3TVRBeE5URTBNVEF3TTFvWERUTXdNVEF4TlRFME5EQXdNMW93Z1lBeEV6QVJCZ29KDQpraWFKay9Jc1pBRVpGZ05qYjIweEV6QVJCZ29Ka2lhSmsvSXNaQUVaRmdOeWRIZ3hEREFLQmdOVkJBb1RBME5CDQpjekVTTUJBR0ExVUVDeE1KUTJ4aGMzTXpMVWN6TVRJd01BWURWUVFERXlsU1lYbDBhR1Z2YmlCVVpXTm9ibTlzDQpiMmRwWlhNZ1RXVmthWFZ0SUVGemMzVnlZVzVqWlNCRFFUQ0NBYUl3RFFZSktvWklodmNOQVFFQkJRQURnZ0dQDQpBRENDQVlvQ2dnR0JBSk1meEJJSnhkZFBTQUxFZGlVZEVpTkc1Zkt0SUxneVpTc21qaFF0Um8yY3RRZWN0OXhYDQpYUkR5WFVkclFkTENBSkl0Z29sbUtjdDVDZURQTk0wWkoxaWZsb1N4ZUJXQWpjNmc5WTczMzU3eGxIQnFaelU0DQpuM3lLdjJ1eXUxYmJCSVl3a0NMcG9FbzByTVVlU0hhVEc0N0tZdm1RbnJTOFM5MUVYVHlKYmN0S0ZiWnh3UkIvDQo3VURtZmJ1UmhjdXJjbkFBdDFxclR4NmRVbVkzbEJyRFF5bkxCZWlyY3NYbGNiNStBalhHbmFlSFJtODhWT3VWDQozSVVaSHFZL21YRWJmTDB0dnBYdkk4VldEZUN3dERaK3MwTGx1NE5tVDh0bDBGckhxcTlvWld2ZjEyNDd6UkVvDQozNHNRMEZRYkJkM1ZTamVhRVlsS2VCTFFTWXExeVBvcTdRUVVuWGhuaGNLbHVWRkdpMXYwK2xrd09iWTRBa3gyDQpERSszcGpoRjAzdHFQcUxMdlhNRFZ6WThXWDcvMHltRFhmd2F1TEhYOUcxeXgyZEt6NlVnSnFiZXFtS1h2ajcrDQpUM0dmd1k1ZmNhRzJRcmRKTTBNdm1pT0FEZmRWNDd5dkxrSG5VNGlNVi9lOVAxdkxSS2hWS09WQXByVU9tOFVjDQpaeDd0S2Q4bm1JYTBPd0lEQVFBQm80SUJVVENDQVUwd0RnWURWUjBQQVFIL0JBUURBZ0VHTUJJR0ExVWRFd0VCDQovd1FJTUFZQkFmOENBUUF3UkFZSUt3WUJCUVVIQVFFRU9EQTJNRFFHQ0NzR0FRVUZCekFDaGlob2RIUndPaTh2DQpjR3RwTG5KMGVDNWpiMjB2UnpNdllXbGhMMUp2YjNRdFJ6TmZNREV1Y0Rkak1HTUdBMVVkSUFSY01Gb3dEUVlMDQpLd1lCQkFHQjBSRUtBUXd3RFFZTEt3WUJCQUdCMFJFS0FRMHdEUVlMS3dZQkJBR0IwUkVLQVE0d0RRWUxLd1lCDQpCQUdCMFJFS0FROHdEUVlMS3dZQkJBR0IwUkVLQVJJd0RRWUxLd1lCQkFHQjBSRUtBUk13UEFZRFZSMGZCRFV3DQpNekF4b0MrZ0xZWXJhSFIwY0RvdkwzQnJhUzV5ZEhndVkyOXRMMGN6TDBOU1RITXZVbTl2ZEMxSE0xOUdkV3hzDQpMbU55YkRBZkJnTlZIU01FR0RBV2dCUlZOc3VWSWdKOVFjMy9XQ3E2ejU1MHFjM0VHREFkQmdOVkhRNEVGZ1FVDQpsMmx0L1g0cjVhZnlZcjExNnBZZTRBekFxVVl3RFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUgxS05qd1l4ZDg5DQo4bmNzSW8wRTFTZGwxWXBXbVNhS2xSam9oRHlITWE2NWFPbXlEQ3l6NW01RHNqc3RxTUc3ck84Ynp6eHcweFczDQpPbC9uK2piZ0VXeGN2TjBGeFEvR25VNXRTcXBERjRNZCs1cHVlZTRlOXdiTmx6RU1ibmRKVzVkR0dHMUs4Znp1DQpReks0cUJIeWdIa0cxWUZHaS8weDJCTWhXNk96VC93SlpmWFVOVXljN05vM2JUSUNabjF0N25jMThPS1dYcE1nDQpHTDF1R0NpdEtocnFyK2FtWjZVaWFiNmZoVlRPNlNyWlZOd3kyWEc4d2JFWDU0Rmp4OWYvQ1BhQkc2QjFuY0pVDQpDWDZTNkVMRVNQUVFkYkk5K3JBU1JUWDZTTHR0R21nWG1VZEtia2I0SGpUc0FUQzJwaXQxRkVnc0lOb1dzQkhEDQo1UUVKUVNWdEJYbE1KOEcrdjFkMGg0NS8rd3E1c0RVOVpoeW93c2o2bXVqcTFyODBlSkszamg1Y2k3ekZlTFdFDQpOWXFoc3JaTEJSR3RGOUh3dU5ZZDVoU1c4VzBDM3BjWlY4N1J3eDdQaWtoK2xDQnl2WXF2RXJKVkVRK2xzTDltDQo1OVh0UWhLcXl5cTh6aC9uTzVtMy9teWlhZVhjVUtmUGdRMWprNnRjKzd3Y1dURWNTWHhNNXBnUjFFaDEyZ3N3DQpmaXdGWXNvbjF0WkhlUzIxSXRldFhZZlpQYVNXbXZTMUlyeWdLN3JMNHlOMlh2djQzem5IYm94ZTkwTVQrak5tDQpEcEE4eExhamNDZm1rZHl4M0I3eFgyOC91NHYxS2xqWjdwSWVMVnZkMGZmWE9FellCVkozOUhBeXNVSkl0VDcrDQpLdnhxNDAzYnF5VXgwNEQ5d3hqUWsycjRkUTc5Y0VDcA0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-us-treasury-ssp-trust-chain-1
  namespace: default
data:
  0-US_Treasury_Root_CA_0x443EA73A.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGVkRDQ0JEeWdBd0lCQWdJRVJENm5PakFOQmdrcWhraUc5dzBCQVFVRkFEQ0JqakVMTUFrR0ExVUVCaE1DDQpWVk14R0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVqTUNFR0ExVUVDeE1hUkdWd1lYSjBiV1Z1DQpkQ0J2WmlCMGFHVWdWSEpsWVhOMWNua3hJakFnQmdOVkJBc1RHVU5sY25ScFptbGpZWFJwYjI0Z1FYVjBhRzl5DQphWFJwWlhNeEhEQWFCZ05WQkFzVEUxVlRJRlJ5WldGemRYSjVJRkp2YjNRZ1EwRXdIaGNOTURZd09EQTFNVFF4DQpOak13V2hjTk1qWXdPREExTVRRME5qTXdXakNCampFTE1Ba0dBMVVFQmhNQ1ZWTXhHREFXQmdOVkJBb1REMVV1DQpVeTRnUjI5MlpYSnViV1Z1ZERFak1DRUdBMVVFQ3hNYVJHVndZWEowYldWdWRDQnZaaUIwYUdVZ1ZISmxZWE4xDQpjbmt4SWpBZ0JnTlZCQXNUR1VObGNuUnBabWxqWVhScGIyNGdRWFYwYUc5eWFYUnBaWE14SERBYUJnTlZCQXNUDQpFMVZUSUZSeVpXRnpkWEo1SUZKdmIzUWdRMEV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLDQpBb0lCQVFEb0pBUlp6SmpIZkdTeGF0YzdLVWpIdTFqcTM2TEVLcFBSYU5hTGc4SXFRT1pxN0c0YTMra2o3MVJoDQoydVdpN1hZQWFRVFZUUEsveEJ0b2hWR3VCNmM0MlFxelVoRTJueUtCM2dSSWQ3Nm9yN0x4ZUM2c3hGaUhVSVlDDQpESHMzYUFpZFlrMjFDYmZ4Rm5QYkJPaEc2WWlUSmNqYWJhT29qQ0hmeHRjMldDRGJyZmFNRW9BaWwxajA0MEtMDQpmZEgwZnJsL1Z1KzZNYnhKN0JLdkNJQzU0cGRpWUgvdmcvbGozdXR3YnF2RVR3ODBFcWJMclNaRHk0OER4dk9lDQpKQjRxZzdCcTVpbi9WeDZ4Ymw5UFFOVkN0YXJWdEZIa3NudGJCdnlDb3N5eEZyOCtSTWVqWkxlQzltaHkyK2IrDQplMkhiL3E1MWRzemNiRkxadkFlb09XYnJqNXJMQWdNQkFBR2pnZ0cyTUlJQnNqQU9CZ05WSFE4QkFmOEVCQU1DDQpBUVl3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekNDQVE4R0NDc0dBUVVGQndFTEJJSUJBVENCL2pBdEJnZ3JCZ0VGDQpCUWN3QllZaGFIUjBjRG92TDNCcmFTNTBjbVZoY3k1bmIzWXZjbTl2ZEY5emFXRXVjRGRqTUlITUJnZ3JCZ0VGDQpCUWN3QllhQnYyeGtZWEE2THk5c1pHRndMblJ5WldGekxtZHZkaTl2ZFQxVlV5VXlNRlJ5WldGemRYSjVKVEl3DQpVbTl2ZENVeU1FTkJMRzkxUFVObGNuUnBabWxqWVhScGIyNGxNakJCZFhSb2IzSnBkR2xsY3l4dmRUMUVaWEJoDQpjblJ0Wlc1MEpUSXdiMllsTWpCMGFHVWxNakJVY21WaGMzVnllU3h2UFZVdVV5NGxNakJIYjNabGNtNXRaVzUwDQpMR005VlZNL1kwRkRaWEowYVdacFkyRjBaVHRpYVc1aGNua3NZM0p2YzNORFpYSjBhV1pwWTJGMFpWQmhhWEk3DQpZbWx1WVhKNU1CRUdDV0NHU0FHRytFSUJBUVFFQXdJQUJ6QXJCZ05WSFJBRUpEQWlnQTh5TURBMk1EZ3dOVEUwDQpNVFl6TUZxQkR6SXdNVFl3T0RBMU1ESTBOak13V2pBZEJnTlZIUTRFRmdRVWFJUVZTSXhVY0g4dEVsZ083Qng0DQo3end1V1dRd0hRWUpLb1pJaHZaOUIwRUFCQkF3RGhzSVZqY3VNVG8wTGpBREFnU1FNQTBHQ1NxR1NJYjNEUUVCDQpCUVVBQTRJQkFRQnBWMENieTJoS3dDWmkvZXBJZVpycTFxaGgxUk9xN0JBSE5zaC8xYmp6YjJONnllRHV1R0pKDQoyY2lMSGw3bnVGK1FmOUlVTzNkeEI4QktSdFhrMkZHU21YYzU0WllQL0hadVZlS1lma0FEVytaZzAyQmZaRTF3DQpFMDhQUG4rVHg2U0pNQ3VmWGMva2VxYzZEQ01MOEQ4V3FFOFQwazk4QWFnbXFSQlBpMElpRHBYVWZickVNOXVBDQpUc3pjRWdUMVJ6bjIzd3drakZaajVFSk15SFlXSk13V1g5ZktkRkp3bFY1S3ZleVJlT3g4TElBM1diZVRWMjlsDQpvNG1BWXNRMXpUclRFVDY5U1JtSjFGR3hxaFR3UGk3V085NWU2dTZuam4yWTQ1cmhNSUdQOG5iMlMxR0pHL3ZYDQpzQkkzZFRLaTNTV21nVFE5UFM4YXlBYTFXYkJydm1ONw0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
  1-DHS_CA4_0x4E398128.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHRFRDQ0JQV2dBd0lCQWdJRVRqbUJLREFOQmdrcWhraUc5dzBCQVFzRkFEQ0JqakVMTUFrR0ExVUVCaE1DDQpWVk14R0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVqTUNFR0ExVUVDeE1hUkdWd1lYSjBiV1Z1DQpkQ0J2WmlCMGFHVWdWSEpsWVhOMWNua3hJakFnQmdOVkJBc1RHVU5sY25ScFptbGpZWFJwYjI0Z1FYVjBhRzl5DQphWFJwWlhNeEhEQWFCZ05WQkFzVEUxVlRJRlJ5WldGemRYSjVJRkp2YjNRZ1EwRXdIaGNOTVRVd05qRXpNVFF6DQpOVEEwV2hjTk1qVXdOakV6TVRVd05UQTBXakNCaHpFTE1Ba0dBMVVFQmhNQ1ZWTXhHREFXQmdOVkJBb1REMVV1DQpVeTRnUjI5MlpYSnViV1Z1ZERFb01DWUdBMVVFQ3hNZlJHVndZWEowYldWdWRDQnZaaUJJYjIxbGJHRnVaQ0JUDQpaV04xY21sMGVURWlNQ0FHQTFVRUN4TVpRMlZ5ZEdsbWFXTmhkR2x2YmlCQmRYUm9iM0pwZEdsbGN6RVFNQTRHDQpBMVVFQ3hNSFJFaFRJRU5CTkRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSjZ6DQo1UUtBMmhqT1N2d1Z1MFNXZC9USnNKdjJYZDJXTjd5VG85T0NTUGlRK1U4OW9BRTh4bElwbys5N21NSzNEandVDQo0R2RlTVAwY2RwS2FyY0w3QkJTUENLMmoxZjNvNVBOaVlVNlJESkJSNnBnZnV2RTZMSkRBbXBLWkdjSklUbkxqDQp1aTI1YU1BeTZkbE5YMGFORnUySkFwQjl5REU5VnJJT0ROaFpzRDZMRzRpQ2ExbUFUeHRHUWZJcWZaaFQvYVNODQpuZmNieklkZFpZdmhRbFlNRjUzUzkrb0FKdjIxWHlITEhPOTFQVzc1VXRlV1Z4V1p2eExmUVpta3d6ZUF4SkkzDQo3WW5wUnJIR3Z0amplUlZndFVLaTN3ajNDcHZSU1ZMTXkwNUNBS2xnc0c1NnZ2RzNsZ2tlSW9KcndpQlYrc1k0DQpHM2FvVDcrZWZKZ1JuSnB4Q1ljQ0F3RUFBYU9DQW5Zd2dnSnlNQTRHQTFVZER3RUIvd1FFQXdJQkJqQVBCZ05WDQpIUk1CQWY4RUJUQURBUUgvTUlHWEJnTlZIU0FFZ1k4d2dZd3dEQVlLWUlaSUFXVURBZ0VEQmpBTUJncGdoa2dCDQpaUU1DQVFNSE1Bd0dDbUNHU0FGbEF3SUJBd2d3REFZS1lJWklBV1VEQWdFRERUQU1CZ3BnaGtnQlpRTUNBUU1RDQpNQXdHQ21DR1NBRmxBd0lCQXhFd0RBWUtZSVpJQVdVREFnRURKREFNQmdwZ2hrZ0JaUU1DQVFNbk1Bd0dDbUNHDQpTQUZsQXdJQkF5Z3dEQVlLWUlaSUFXVURBZ0VES1RCQkJnZ3JCZ0VGQlFjQkFRUTFNRE13TVFZSUt3WUJCUVVIDQpNQUtHSldoMGRIQTZMeTl3YTJrdWRISmxZWE4xY25rdVoyOTJMMlJvYzJOaFgyRnBZUzV3TjJNd1FRWUlLd1lCDQpCUVVIQVFzRU5UQXpNREVHQ0NzR0FRVUZCekFGaGlWb2RIUndPaTh2Y0d0cExuUnlaV0Z6ZFhKNUxtZHZkaTlrDQphSE5qWVY5emFXRXVjRGRqTUlIdUJnTlZIUjhFZ2VZd2dlTXdOYUF6b0RHR0wyaDBkSEE2THk5d2Eya3VkSEpsDQpZWE4xY25rdVoyOTJMMVZUWDFSeVpXRnpkWEo1WDFKdmIzUmZRMEV1WTNKc01JR3BvSUdtb0lHanBJR2dNSUdkDQpNUXN3Q1FZRFZRUUdFd0pWVXpFWU1CWUdBMVVFQ2hNUFZTNVRMaUJIYjNabGNtNXRaVzUwTVNNd0lRWURWUVFMDQpFeHBFWlhCaGNuUnRaVzUwSUc5bUlIUm9aU0JVY21WaGMzVnllVEVpTUNBR0ExVUVDeE1aUTJWeWRHbG1hV05oDQpkR2x2YmlCQmRYUm9iM0pwZEdsbGN6RWNNQm9HQTFVRUN4TVRWVk1nVkhKbFlYTjFjbmtnVW05dmRDQkRRVEVODQpNQXNHQTFVRUF4TUVRMUpNTVRBZkJnTlZIU01FR0RBV2dCUm9oQlZJakZSd2Z5MFNXQTdzSEhqdlBDNVpaREFkDQpCZ05WSFE0RUZnUVVmTU5LWExvZk5xdURVWDMwNE9VT2tIOGNFMEV3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCDQpBRk9Rd0lRV2hJekxOYnpreWE4WitVN0JvRlNyc2crYVZYVDRTdE5KamRXUENaTzVmUDZLVTlPVzJnY0hBei9HDQp5bEM2NUpyYkZNNldvN1puK3JyVHJaWnZEbmQ3dXlqYWZlVURubkk0VndQd1lyUFVRbGx5cnU3WUM5YVpqcDZmDQpNbThTK01VTjY5RHBiN05NRkh0Mjg3NkNZUmNvK3EwdC9FU04xVCtZTHJxR0FoUGp3ejErb3BUeXJoWTNOU0JSDQp0Sjh4VXpOSWNEUDM0cjl0ZDBTWHRpaWRteFgvZERMaUdpMFl2ekQ5MHNTV05BS09BTmwzTXloSVBlckN1QURGDQpxcEFMVWtrWTV6VGErWmxQSERmLzRwZmVkWk40Y0pEcHY5WDQ5L1J0ZXJZSWowY0d3OFV5V0ZhT2JTQU9WRUJyDQpZZStUeitsMFJRM0dWUThtaHBCSzJZST0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
  1-Fiscal_Service_0x4E398167.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHN3pDQ0JkZWdBd0lCQWdJRVRqbUJaekFOQmdrcWhraUc5dzBCQVFzRkFEQ0JqakVMTUFrR0ExVUVCaE1DDQpWVk14R0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVqTUNFR0ExVUVDeE1hUkdWd1lYSjBiV1Z1DQpkQ0J2WmlCMGFHVWdWSEpsWVhOMWNua3hJakFnQmdOVkJBc1RHVU5sY25ScFptbGpZWFJwYjI0Z1FYVjBhRzl5DQphWFJwWlhNeEhEQWFCZ05WQkFzVEUxVlRJRlJ5WldGemRYSjVJRkp2YjNRZ1EwRXdIaGNOTVRVeE1ERTNNVE16DQpOekkyV2hjTk1qVXhNREUzTVRRd056STJXakJsTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUDQpMaUJIYjNabGNtNXRaVzUwTVNNd0lRWURWUVFMRXhwRVpYQmhjblJ0Wlc1MElHOW1JSFJvWlNCVWNtVmhjM1Z5DQplVEVYTUJVR0ExVUVDeE1PUm1selkyRnNJRk5sY25acFkyVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCDQpEd0F3Z2dFS0FvSUJBUURQK25IQ1h6UkcwdkhvazA5ZnUzUi9NNS8vaUQrMU84bDVrUW1oaXpDNG52NnRZcUJPDQp5d21FZlJuQXlFZ0pteU5PTzhaVGhTdWZjdmRvcHZaRE1oNG10Wjc3aHh3KzQ4RkMyWWIxTGV4V2hiMkc1ZjlHDQpVN0hpM0hYcWwxVkdtdEFNb0QzUUUyZ21qQkZ0VkFSY3dhSitIK2hock1BNWI2aUxNb3dndDd1OTJLa2xoZjM3DQpvMGNmcGQzOWlDWEcvR1QwdzZVYkxGdG9SM2Fvd2sxZTRjTE5sV1R2VUN4RWRBVHVwNWVrUFRCR0hjdHNoZStTDQp5NUhEU1BuaHNEZnpxZWpqR2RkcXBHQWFNRHErSTNGQm1xWFd3YXRzTm9NVCt4VFJWaFBJSm1DdXVVYktVU1BKDQpYTWo0dWxiUERGdjZhL2krYzB4SVpHYnpWMjlRRmxERUU4Ty9BZ01CQUFHamdnTjdNSUlEZHpBT0JnTlZIUThCDQpBZjhFQkFNQ0FRWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QkJCZ05WSFNBRU9qQTRNQXdHQ21DR1NBRmxBd0lCDQpCUVF3REFZS1lJWklBV1VEQWdFRkJ6QU1CZ3BnaGtnQlpRTUNBUVVETUF3R0NtQ0dTQUZsQXdJQkJRSXdnZ0VQDQpCZ2dyQmdFRkJRY0JBUVNDQVFFd2dmNHdMUVlJS3dZQkJRVUhNQUtHSVdoMGRIQTZMeTl3YTJrdWRISmxZWE11DQpaMjkyTDJaelkyRmZZV2xoTG5BM1l6Q0J6QVlJS3dZQkJRVUhNQUtHZ2I5c1pHRndPaTh2YkdSaGNDNTBjbVZoDQpjeTVuYjNZdmIzVTlWVk1sTWpCVWNtVmhjM1Z5ZVNVeU1GSnZiM1FsTWpCRFFTeHZkVDFEWlhKMGFXWnBZMkYwDQphVzl1SlRJd1FYVjBhRzl5YVhScFpYTXNiM1U5UkdWd1lYSjBiV1Z1ZENVeU1HOW1KVEl3ZEdobEpUSXdWSEpsDQpZWE4xY25rc2J6MVZMbE11SlRJd1IyOTJaWEp1YldWdWRDeGpQVlZUUDJOQlEyVnlkR2xtYVdOaGRHVTdZbWx1DQpZWEo1TEdOeWIzTnpRMlZ5ZEdsbWFXTmhkR1ZRWVdseU8ySnBibUZ5ZVRDQ0FhRUdBMVVkSHdTQ0FaZ3dnZ0dVDQpNSUlCWEtDQ0FWaWdnZ0ZVcElHZ01JR2RNUXN3Q1FZRFZRUUdFd0pWVXpFWU1CWUdBMVVFQ2hNUFZTNVRMaUJIDQpiM1psY201dFpXNTBNU013SVFZRFZRUUxFeHBFWlhCaGNuUnRaVzUwSUc5bUlIUm9aU0JVY21WaGMzVnllVEVpDQpNQ0FHQTFVRUN4TVpRMlZ5ZEdsbWFXTmhkR2x2YmlCQmRYUm9iM0pwZEdsbGN6RWNNQm9HQTFVRUN4TVRWVk1nDQpWSEpsWVhOMWNua2dVbTl2ZENCRFFURU5NQXNHQTFVRUF4TUVRMUpNTVlhQnJteGtZWEE2THk5c1pHRndMblJ5DQpaV0Z6TG1kdmRpOWpiajFEVWt3eExHOTFQVlZUSlRJd1ZISmxZWE4xY25rbE1qQlNiMjkwSlRJd1EwRXNiM1U5DQpRMlZ5ZEdsbWFXTmhkR2x2YmlVeU1FRjFkR2h2Y21sMGFXVnpMRzkxUFVSbGNHRnlkRzFsYm5RbE1qQnZaaVV5DQpNSFJvWlNVeU1GUnlaV0Z6ZFhKNUxHODlWUzVUTGlVeU1FZHZkbVZ5Ym0xbGJuUXNZejFWVXo5aGRYUm9iM0pwDQpkSGxTWlhadlkyRjBhVzl1VEdsemREQXlvRENnTG9Zc2FIUjBjRG92TDNCcmFTNTBjbVZoY3k1bmIzWXZWVk5mDQpWSEpsWVhOMWNubGZVbTl2ZEY5RFFTNWpjbXd3SHdZRFZSMGpCQmd3Rm9BVWFJUVZTSXhVY0g4dEVsZ083Qng0DQo3end1V1dRd0hRWURWUjBPQkJZRUZBU0dvR3cwb2F4R0JSclkrbzIrY3REcmswaHBNQmtHQ1NxR1NJYjJmUWRCDQpBQVFNTUFvYkJGWTNMakVEQWdDQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQy9SOUxybXZzMTRLWFpYakFDDQpVb3ZHUjhGdWc4cGNuaEErUDBrRjNiTVN1YThVVHAzdlRkKzBrejN3dTFqYVhDekt4RkM3R0l5a1VFcVNNbzUzDQpObk9MU1dZdmVqcHVEQzRCekdJakFHUGZHb3NvWEtoMnd4dCtMUUFjZm54TzdPSVJhaDh1QTc4WVpzam9FamJPDQpZTnh5T1NSL0JxT3JocGhxSmpLVXhla0JmMi9ETVcyVWVyN3A4UGwrU1p3OXJRNjY0YUJKTmpaRjdra0s3MzNJDQpjbUZiSTNFVHErSFJvZHRvdGNnQUxtcDVXc3REL3dCbnByaFlmZ1dLR2U0andlT1ZJYXBna1RhYWhKTEl3SWVnDQpEblVwbjF2c3pzUFo5Wm4xMUtRTzhCWUxOelh1eGlHL0N4MHk4M3FtK3lhaXY4LytCcnBidEU2U3lKblRaN3FqDQpkSjYvDQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
  1-NASA_0x4E398116.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGK3pDQ0JPT2dBd0lCQWdJRVRqbUJGakFOQmdrcWhraUc5dzBCQVFzRkFEQ0JqakVMTUFrR0ExVUVCaE1DDQpWVk14R0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVqTUNFR0ExVUVDeE1hUkdWd1lYSjBiV1Z1DQpkQ0J2WmlCMGFHVWdWSEpsWVhOMWNua3hJakFnQmdOVkJBc1RHVU5sY25ScFptbGpZWFJwYjI0Z1FYVjBhRzl5DQphWFJwWlhNeEhEQWFCZ05WQkFzVEUxVlRJRlJ5WldGemRYSjVJRkp2YjNRZ1EwRXdIaGNOTVRVd05qRXpNVFF5DQpORFV5V2hjTk1qVXdOakV6TVRRMU5EVXlXakI0TVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUDQpMaUJIYjNabGNtNXRaVzUwTVEwd0N3WURWUVFMRXdST1FWTkJNU0l3SUFZRFZRUUxFeGxEWlhKMGFXWnBZMkYwDQphVzl1SUVGMWRHaHZjbWwwYVdWek1Sd3dHZ1lEVlFRTEV4Tk9RVk5CSUU5d1pYSmhkR2x2Ym1Gc0lFTkJNSUlCDQpJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdFpUY0RhZk1NQzFTQlphSTQvOW1YWDlCDQpKT2grbytNMzRFSXVXa0I3VVc0ak4vNnFvLzFxcDJkWU9qZzNaSmJyeHYyNVg1SzJmTGJFcHEvSldJT1FrVEw0DQpHZkpaeHMxMXk4bkdYQ3ErNWluTUFnRmdUOEZkRkxxN3lJQk5IakJ6K0RtVzBmSCt2aVVkMHNrWk5sV0hvNG9GDQpjam01bCs1TGtoUk1KUzV2RkFJd0l5b3N1NTArazJ5V3JRc3p6dXE5MGM4QUwzSHdZUzlicFRoR1hLVU9jUC9pDQo2eTJhQVZUcFQ2TDl4RE9pMUZZcCtRZHVmbVRMa0I2bVBBWnUzL3dZUTZrLzkydWRwNWpwbFZtWnFBWjNmVnNjDQppdi9neUc3Y2FncS9EYVArTG92L2VkYmxyRHR1K0ZhMk15dmlKRUd6SU40dlhpZ1RpUTF0cTVKU2lzbFkyUUlEDQpBUUFCbzRJQ2REQ0NBbkF3RGdZRFZSMFBBUUgvQkFRREFnRUdNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdnWmNHDQpBMVVkSUFTQmp6Q0JqREFNQmdwZ2hrZ0JaUU1DQVFNR01Bd0dDbUNHU0FGbEF3SUJBd2N3REFZS1lJWklBV1VEDQpBZ0VEQ0RBTUJncGdoa2dCWlFNQ0FRTU5NQXdHQ21DR1NBRmxBd0lCQXhBd0RBWUtZSVpJQVdVREFnRURFVEFNDQpCZ3BnaGtnQlpRTUNBUU1rTUF3R0NtQ0dTQUZsQXdJQkF5Y3dEQVlLWUlaSUFXVURBZ0VES0RBTUJncGdoa2dCDQpaUU1DQVFNcE1FQUdDQ3NHQVFVRkJ3RUJCRFF3TWpBd0JnZ3JCZ0VGQlFjd0FvWWthSFIwY0RvdkwzQnJhUzUwDQpjbVZoYzNWeWVTNW5iM1l2Ym05allWOWhhV0V1Y0Rkak1FQUdDQ3NHQVFVRkJ3RUxCRFF3TWpBd0JnZ3JCZ0VGDQpCUWN3QllZa2FIUjBjRG92TDNCcmFTNTBjbVZoYzNWeWVTNW5iM1l2Ym05allWOXphV0V1Y0Rkak1JSHVCZ05WDQpIUjhFZ2VZd2dlTXdOYUF6b0RHR0wyaDBkSEE2THk5d2Eya3VkSEpsWVhOMWNua3VaMjkyTDFWVFgxUnlaV0Z6DQpkWEo1WDFKdmIzUmZRMEV1WTNKc01JR3BvSUdtb0lHanBJR2dNSUdkTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHDQpBMVVFQ2hNUFZTNVRMaUJIYjNabGNtNXRaVzUwTVNNd0lRWURWUVFMRXhwRVpYQmhjblJ0Wlc1MElHOW1JSFJvDQpaU0JVY21WaGMzVnllVEVpTUNBR0ExVUVDeE1aUTJWeWRHbG1hV05oZEdsdmJpQkJkWFJvYjNKcGRHbGxjekVjDQpNQm9HQTFVRUN4TVRWVk1nVkhKbFlYTjFjbmtnVW05dmRDQkRRVEVOTUFzR0ExVUVBeE1FUTFKTU1UQWZCZ05WDQpIU01FR0RBV2dCUm9oQlZJakZSd2Z5MFNXQTdzSEhqdlBDNVpaREFkQmdOVkhRNEVGZ1FVaFQ5MzVOSjZVZWxXDQpUbzFOeEozSVh0WFlSSFV3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUhOdXdsN0J3ZklqZ3U1T3lkNkVkOGVMDQp4UEhlajJxV1Q0U1ZyOE01TjBteGE5dFc3TitiRWNjY3RrU2EwczBzdkw1V2dYQkw4cERha29PWFd4Ykk3YUJKDQpmU0czK0FmN25SRTEwVTFoTUJsaHhxZCtHbFFIaUlnakplSVhOMjBXd3VSZlV3RlI3emU0NXJHbXFPekYyR0VpDQpDSUEvZWVhVHRRU2lDczdPQ3FwZi9DeDdTaFAzMzVYSWs1RnQ5RW0rUlhMQmQ3VlZacGo3V09sZkpBUmEzaHR3DQp0cHF0ai9aU3dZRUZacGVjYldaanh2VFZobXJBUXYrOWsxRk80emNwU3RZWSt0RDYyZWlSZEVuSGFuTjVNUjNxDQpFK3pMaFNvdy94czZLNXVUSkN1VkVpYWFsTStIQkRKMTBVRGp3S0dNbFVYMUg2YkkxaUVuay9kWWJjNlB2djg9DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
  1-OCIO_0x4E398101.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHRkRDQ0JQeWdBd0lCQWdJRVRqbUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQ0JqakVMTUFrR0ExVUVCaE1DDQpWVk14R0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVqTUNFR0ExVUVDeE1hUkdWd1lYSjBiV1Z1DQpkQ0J2WmlCMGFHVWdWSEpsWVhOMWNua3hJakFnQmdOVkJBc1RHVU5sY25ScFptbGpZWFJwYjI0Z1FYVjBhRzl5DQphWFJwWlhNeEhEQWFCZ05WQkFzVEUxVlRJRlJ5WldGemRYSjVJRkp2YjNRZ1EwRXdIaGNOTVRVd05ERTVNVFV4DQpOelExV2hjTk1qVXdOREU1TVRVME56UTFXakNCZ2pFTE1Ba0dBMVVFQmhNQ1ZWTXhHREFXQmdOVkJBb1REMVV1DQpVeTRnUjI5MlpYSnViV1Z1ZERFak1DRUdBMVVFQ3hNYVJHVndZWEowYldWdWRDQnZaaUIwYUdVZ1ZISmxZWE4xDQpjbmt4SWpBZ0JnTlZCQXNUR1VObGNuUnBabWxqWVhScGIyNGdRWFYwYUc5eWFYUnBaWE14RURBT0JnTlZCQXNUDQpCMDlEU1U4Z1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDOENqV3ZHNENaDQprV0t2dndvSld3VVlqVFpDYWRnTTB1UGpvUlVhSWk5aU1tMlh6aWlWWGJKUjRtK2czOFFCMXk1c1JLTHRiRkJTDQo4S3IwZVBsT3loamZBbkoxMWpQYXArajNDMm1NNi9sRkZaYjJOLzB6T3VnRUtTcjdJU01KZTF4TXlhNkc4UnZaDQpiVFVDTkN0ZTZvTW5OYnJNK2VtenBwdXZ0bUZjeW9kNnQ4dnN2UTJJM1pvbytMOXVBV2pxamlJQisxbkloelljDQprZGRKQUN0Y2NwY3hzZWVJZlczM0RPNU9JVGI5VXFJVno2TGR4YXJuNXpBV01LZWUxYnRjK3QvVXp6NDNldURkDQpac282d3IxK0UzSkIxZE10R0RTQVVxQ2RlQnF6THllK253dyt2SUlQb3Z1N29kdVQrdFAyMFp5NldRaFV6REp0DQp0TTNyS3FNQW1XTjNBZ01CQUFHamdnS0NNSUlDZmpBT0JnTlZIUThCQWY4RUJBTUNBUVl3RHdZRFZSMFRBUUgvDQpCQVV3QXdFQi96Q0JwUVlEVlIwZ0JJR2RNSUdhTUF3R0NtQ0dTQUZsQXdJQkJRSXdEQVlLWUlaSUFXVURBZ0VGDQpBekFNQmdwZ2hrZ0JaUU1DQVFVSE1Bd0dDbUNHU0FGbEF3SUJCUVF3REFZS1lJWklBV1VEQWdFRENEQU1CZ3BnDQpoa2dCWlFNQ0FRTU5NQXdHQ21DR1NBRmxBd0lCQXhFd0RBWUtZSVpJQVdVREFnRURKekFNQmdwZ2hrZ0JaUU1DDQpBUU1rTUF3R0NtQ0dTQUZsQXdJQkF5Z3dEQVlLWUlaSUFXVURBZ0VES1RCQUJnZ3JCZ0VGQlFjQkFRUTBNREl3DQpNQVlJS3dZQkJRVUhNQUtHSkdoMGRIQTZMeTl3YTJrdWRISmxZWE4xY25rdVoyOTJMM1J2WTJGZllXbGhMbkEzDQpZekJBQmdnckJnRUZCUWNCQ3dRME1ESXdNQVlJS3dZQkJRVUhNQVdHSkdoMGRIQTZMeTl3YTJrdWRISmxZWE4xDQpjbmt1WjI5MkwzUnZZMkZmYzJsaExuQTNZekNCN2dZRFZSMGZCSUhtTUlIak1EV2dNNkF4aGk5b2RIUndPaTh2DQpjR3RwTG5SeVpXRnpkWEo1TG1kdmRpOVZVMTlVY21WaGMzVnllVjlTYjI5MFgwTkJMbU55YkRDQnFhQ0JwcUNCDQpvNlNCb0RDQm5URUxNQWtHQTFVRUJoTUNWVk14R0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVqDQpNQ0VHQTFVRUN4TWFSR1Z3WVhKMGJXVnVkQ0J2WmlCMGFHVWdWSEpsWVhOMWNua3hJakFnQmdOVkJBc1RHVU5sDQpjblJwWm1sallYUnBiMjRnUVhWMGFHOXlhWFJwWlhNeEhEQWFCZ05WQkFzVEUxVlRJRlJ5WldGemRYSjVJRkp2DQpiM1FnUTBFeERUQUxCZ05WQkFNVEJFTlNUREV3SHdZRFZSMGpCQmd3Rm9BVWFJUVZTSXhVY0g4dEVsZ083Qng0DQo3end1V1dRd0hRWURWUjBPQkJZRUZOZk9LRXpJSkdwV1JsdDFaWXRueFBySTRJaWxNQTBHQ1NxR1NJYjNEUUVCDQpDd1VBQTRJQkFRQW1HQ1hDWnVKZjB0aEF5V1g5cnlMdWlNZHlad0M2Vy9zZlhScFl6ZlFLd21tcU1ub1U1NWxzDQpDTGxGQ29OalM3RE42VnAzRmRzeG9SZ3NaRzBqdXUyZmJ6TzMxR2tKaXl6aEFIVlIycTRZVXRvbzhGaTg2ckcwDQpiTlVYbXRKQjNDOExGT0ZIcDgzdzl6UEtDcnBFRkV1ek8wQ1RUcmpIbXBNZ2pPZmxIT0tCbk15dllTcTN3TmJmDQpxMXEvWFlDbHYvM0wwTDhsdmFHODIrSVpwUUl6R3JwaElGbXV3MjVuTWFVa1QzTnpSUWFJUGFaeFJSelhPRnZoDQp1aDh2dVd6bzRZUDJoUE9mVk8xOEVNWEgwTTYzOVJFS3RxRE1Ja2xsQnVOT0hEOFJjTXUrQ0oveFN4ZFVycmE1DQpLYW82VEtJamJpbzkvSmhDcjVYTDdlZTNhMHRqa3Q5cA0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
  1-SSA_0x4E3980EF.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHRnpDQ0JQK2dBd0lCQWdJRVRqbUE3ekFOQmdrcWhraUc5dzBCQVFzRkFEQ0JqakVMTUFrR0ExVUVCaE1DDQpWVk14R0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVqTUNFR0ExVUVDeE1hUkdWd1lYSjBiV1Z1DQpkQ0J2WmlCMGFHVWdWSEpsWVhOMWNua3hJakFnQmdOVkJBc1RHVU5sY25ScFptbGpZWFJwYjI0Z1FYVjBhRzl5DQphWFJwWlhNeEhEQWFCZ05WQkFzVEUxVlRJRlJ5WldGemRYSjVJRkp2YjNRZ1EwRXdIaGNOTVRVd05ERTVNVFV3DQpOREk1V2hjTk1qVXdOREU1TVRVek5ESTVXakIyTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUDQpMaUJIYjNabGNtNXRaVzUwTVF3d0NnWURWUVFMRXdOVFUwRXhQekE5QmdOVkJBc1RObE52WTJsaGJDQlRaV04xDQpjbWwwZVNCQlpHMXBibWx6ZEhKaGRHbHZiaUJEWlhKMGFXWnBZMkYwYVc5dUlFRjFkR2h2Y21sMGVUQ0NBU0l3DQpEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTlRwYTdEQ045Vm1qajhCbGtROVBaYmlRbEJMDQp5UFl0N3dsMVNkcjM1RmM1QVBjR1ZqN2tmcE94QWNwT043dGFYekFSREZ6WGpvNFdSY2xuVmM2clcrbW43VUo5DQpyUDZlVElnSlVFak41aVVqZnV6MXlmckRjTURqQ29pZEZBbWw1bkY4bUducStvRlBhS3llNmF2aUY5ZzBvOEEyDQpVdFFMbHVNNjYrMUIxNzBPR211WStoR2RwWVpBQ1ZDOTRvMGhROHMxdG5qMzI0Q1BUZERNWEZjbGNuL0U2MTlYDQoxOUJsRUpXZEFsRXp6a1ZpZW9aaTdKQkpKWG1nellJdTY3MmdRSGZWMkYwNmRYV3ZyNjJSbnlmNDBuMHB3enBODQpZMXNxWXY4MHpvZ2s1dGZQbSszSW5BWHlqRlN6L1kzMFFJbUZDUFJGdkFzTmRWZFV5VUpVakhWbXBmc0NBd0VBDQpBYU9DQXBJd2dnS09NQTRHQTFVZER3RUIvd1FFQXdJQkJqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01JR3pCZ05WDQpIU0FFZ2Fzd2dhZ3dEQVlLWUlaSUFXVURBZ0VEQmpBTUJncGdoa2dCWlFNQ0FRTUlNQXdHQ21DR1NBRmxBd0lCDQpBd2N3REFZS1lJWklBV1VEQWdFRERUQU1CZ3BnaGtnQlpRTUNBUU1STUF3R0NtQ0dTQUZsQXdJQkF4QXdEQVlLDQpZSVpJQVdVREFnRURKREFNQmdwZ2hrZ0JaUU1DQVFNbk1Bd0dDbUNHU0FGbEF3SUJBeWd3REFZS1lJWklBV1VEDQpBZ0VES1RBTUJncGdoa2dCWlFNQ0FRVUNNQXdHQ21DR1NBRmxBd0lCQlFNd1FRWUlLd1lCQlFVSEFRRUVOVEF6DQpNREVHQ0NzR0FRVUZCekFDaGlWb2RIUndPaTh2Y0d0cExuUnlaV0Z6ZFhKNUxtZHZkaTl6YzJGallWOWhhV0V1DQpjRGRqTUVFR0NDc0dBUVVGQndFTEJEVXdNekF4QmdnckJnRUZCUWN3QllZbGFIUjBjRG92TDNCcmFTNTBjbVZoDQpjM1Z5ZVM1bmIzWXZjM05oWTJGZmMybGhMbkEzWXpDQjdnWURWUjBmQklIbU1JSGpNRFdnTTZBeGhpOW9kSFJ3DQpPaTh2Y0d0cExuUnlaV0Z6ZFhKNUxtZHZkaTlWVTE5VWNtVmhjM1Z5ZVY5U2IyOTBYME5CTG1OeWJEQ0JxYUNCDQpwcUNCbzZTQm9EQ0JuVEVMTUFrR0ExVUVCaE1DVlZNeEdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1DQpkREVqTUNFR0ExVUVDeE1hUkdWd1lYSjBiV1Z1ZENCdlppQjBhR1VnVkhKbFlYTjFjbmt4SWpBZ0JnTlZCQXNUDQpHVU5sY25ScFptbGpZWFJwYjI0Z1FYVjBhRzl5YVhScFpYTXhIREFhQmdOVkJBc1RFMVZUSUZSeVpXRnpkWEo1DQpJRkp2YjNRZ1EwRXhEVEFMQmdOVkJBTVRCRU5TVERFd0h3WURWUjBqQkJnd0ZvQVVhSVFWU0l4VWNIOHRFbGdPDQo3Qng0N3p3dVdXUXdIUVlEVlIwT0JCWUVGQmJOMXM1L3p4ZjVmaUdGOUxIbkxEUC9FRVVKTUEwR0NTcUdTSWIzDQpEUUVCQ3dVQUE0SUJBUUE5Z0RoK3oxeGJ0RFhjVmF4Z2x5NlZJMUVGaGdqaUJUbXdla2JpOSt1WDhoeHgzaTFjDQpFMmt0OHp3R2JyTjRKVzBWQTZMREpZOFRwR3lSQ2hQMmg3cnhJQ1RqR3RRaUxieTNYNmZWY1E5QUw2Q0VXNldvDQo5MlJPaHRYd1FJelpmazNMRkZwYktZeFNZRnphOUFJODlOWWZZaWdHRHhrNE91UHVWRFRyWFpRWGw3ZkRhYnBxDQpFTkhNc0IzWDBNSkR4VjhKbXFUM3NKMGVMR0ZmLzRpRUVaQ3VqNUJ3azNieWRkbkppbXhYZGs1NFR4ZCt2Q2cxDQoreVJMelU2eHdlcCtTaUZtWk1kN2tqU3EzalgzWTRJMnhpTHB5bUlnWDRxdzI4ZlhqQTJZcTdKQ2IwbE5USHZaDQpvcnEzRE4vc2FKRTNMMXlpQXJrUEd1ZzhOUVdYeUZoSWNFUCsNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-us-treasury-ssp-trust-chain-2
  namespace: default
data:
  0-US_Treasury_Root_CA_Rekey_0x570D2BFF.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHSWpDQ0JBcWdBd0lCQWdJRVZ3MHIvekFOQmdrcWhraUc5dzBCQVFzRkFEQ0JqakVMTUFrR0ExVUVCaE1DDQpWVk14R0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVqTUNFR0ExVUVDeE1hUkdWd1lYSjBiV1Z1DQpkQ0J2WmlCMGFHVWdWSEpsWVhOMWNua3hJakFnQmdOVkJBc1RHVU5sY25ScFptbGpZWFJwYjI0Z1FYVjBhRzl5DQphWFJwWlhNeEhEQWFCZ05WQkFzVEUxVlRJRlJ5WldGemRYSjVJRkp2YjNRZ1EwRXdIaGNOTVRZd056RXpNVE13DQpNekkyV2hjTk16WXdOekV6TVRNek16STJXakNCampFTE1Ba0dBMVVFQmhNQ1ZWTXhHREFXQmdOVkJBb1REMVV1DQpVeTRnUjI5MlpYSnViV1Z1ZERFak1DRUdBMVVFQ3hNYVJHVndZWEowYldWdWRDQnZaaUIwYUdVZ1ZISmxZWE4xDQpjbmt4SWpBZ0JnTlZCQXNUR1VObGNuUnBabWxqWVhScGIyNGdRWFYwYUc5eWFYUnBaWE14SERBYUJnTlZCQXNUDQpFMVZUSUZSeVpXRnpkWEo1SUZKdmIzUWdRMEV3Z2dJaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQ0R3QXdnZ0lLDQpBb0lDQVFEc1BtZk5DQVlsWnNETVVJeS9uSHVkdnR0blVSRnNvWVI4cFV1RHRkWlB6Rk93dndKb2kyVjFhMU1ZDQpiQnVPSk1mNnhzdWFUWDJPUjhKRHRDSEtLa3djTitZWEVRQnI5cE56YnlkYXE1UDg2YTNYSVM2ZGZhcEFydGNEDQpqYUFaZ3RGK1NOeFh6Q3YrQndlSjVBTVJGUXBSSmcrajk1eXZOOXdudEx2RkdrZ3FxSUUrVVBtYXhZbU1FY0d5DQpCbGE4eW05UGExbTQ1VGVjcmp1aERjVTFtMGRTSlNSaFMxQ0o0eEhDVHhORHhqUjkxbjZ2QW5GWk9qamd0UW1uDQppRmMrQzExSko3NE1VTW0vNlY3dzF5L1BEVndmeVVueXlNK01XOFVLTjVaVmxVV0VNTDhkSFlHcWNMdStweElEDQpKWUxDd2hvMDErZlhXU3U0c3gvenRKUjJvckJaNHNmN0VrNkhteVVwWDNYNmw1N3NlcFJnaHJBN2Rzc0o0ZG5aDQpOZEIrZzNmdWZiYmdoNFdET2xIYTNoOVZFdVZoaDVtNFhGRnZpOGljSWdVekMrV2FpczVlSzFVSjlwbDN2VmF6DQowWW83ZEtEZTZ2MncyOHFBRjRUc0RpYWJsc1JWRUZMUWFtajZ6b3YyTjFROWkrdk5YVnRISFYvZ2g4akM1SnZHDQpYM2N5ZlVrc3MwVTlMV2NBZUZFNXpVM05OLy9WcWVkV2M5YTNqM0c4bDk0cVlWcURDUXdxL2ZBV3ByUlFjWDFNDQo3eE5odzdtTzU0N0IrSWRqcDcwQklTVlBSNi9sYVRlUnFnL25BOVo0L3hHR1MzVWVjUDJtNksyQUNKUTBld1NpDQpYdWl4NmFoRkIyWE9hRG1Oa1RmVG9vYlBDTnVBMTFmaEEzeUlhbisrM2V1RDdTd1ZXUUlEQVFBQm80R0ZNSUdDDQpNQTRHQTFVZER3RUIvd1FFQXdJQkJqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01FQUdDQ3NHQVFVRkJ3RUxCRFF3DQpNakF3QmdnckJnRUZCUWN3QllZa2FIUjBjRG92TDNCcmFTNTBjbVZoYzNWeWVTNW5iM1l2Y205dmRGOXphV0V1DQpjRGRqTUIwR0ExVWREZ1FXQkJRWFM3Z211bWw2clJKUVYwVXhubGU3ZEtYYUx6QU5CZ2txaGtpRzl3MEJBUXNGDQpBQU9DQWdFQU9MWitiUHJ3YVlnUDR5dGFLS0VLYjcxcVdGU3BRYlVWWlZWK2E1K2FJRmU2WDVTUC9JK1A3NURNDQozbjQ0UzdGZjdGcW1GalpkRDcyOG9LQXkwL3Q3NnQvRDFYM201NTlWb1hjRURaWWtlV0lOcUhucGtRSEJkTzNRDQoxb1dHV0s2UkIwRm1lejhRWW5MaE8ra2RLdDFBbkZoOVBIQ1lqNkkvcjFUdDlGOERqVE9ZeFBqSjc3UDFtZWc2DQpKNVVXZFdLTlBod1htWEM2KzBnMnV3cW9Hd1A1eEJYTk1GWW9RYUF6WXhvaXF4NlVWWmpwOURRTEl4ZHYyVFR3DQpOamZyZUJvd1kxQmVSS0lpWkVSZ2p2U2U2aWtWRXJwdDJqTXNuSFF1U1ZkdUprZ0hBQk55TWI4VmpKQTN2RDU0DQpHejU3V09HSGJNSG1ydzJ6ZUQwMEJoRFNWaGhjdGpUYUJ4ZDFGUlRtY3hacldnd2RiZ1Z4QksyNVhEY2VHelNjDQpqVC9ZbVZkT2VXbTgxQUNyMWozQkNmcnVvVHdVL1VncFJKRGVzM2pWVnJMT2RxUm5FRzJjV2crNUd3L281eWNTDQpHWVdxRHM4NDk1NVk3eVVQR1FvYjdBRUMvS0h4NWVXTDBRMjRTT0gyRHF0WUxnbE8wVXpMd2dWN1lXYWNvVzNhDQphbWZJTHVZdXJUc25xaE9QbFFuUDNxNXhKL3lPTTlxdE1qWVVKdWIreHdML3Z2MER0a0ZyMWI0TTNGbllnZjJ2DQo5Y0g2S2NGaDVwOHJ2YS9NaGlZTDVLTkpXTHJuR09HOFN2QTZVZlF3WlAycDVMb3hFaFJGdVdOakxScms3SktxDQpnYUovejZOUzRQK2RKOUtYZ2pZblVpTlQzNTViekhUVnBrcDNmaUN0cExXZ1llR1VGU009DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
  1-DHS_CA4_0x5CCB31CA.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlIT0RDQ0JTQ2dBd0lCQWdJRVhNc3h5akFOQmdrcWhraUc5dzBCQVFzRkFEQ0JqakVMTUFrR0ExVUVCaE1DDQpWVk14R0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVqTUNFR0ExVUVDeE1hUkdWd1lYSjBiV1Z1DQpkQ0J2WmlCMGFHVWdWSEpsWVhOMWNua3hJakFnQmdOVkJBc1RHVU5sY25ScFptbGpZWFJwYjI0Z1FYVjBhRzl5DQphWFJwWlhNeEhEQWFCZ05WQkFzVEUxVlRJRlJ5WldGemRYSjVJRkp2YjNRZ1EwRXdIaGNOTVRrd05qQTJNVEV4DQpNVEUyV2hjTk1qa3dOakEyTVRFME1URTJXakNCaHpFTE1Ba0dBMVVFQmhNQ1ZWTXhHREFXQmdOVkJBb1REMVV1DQpVeTRnUjI5MlpYSnViV1Z1ZERFb01DWUdBMVVFQ3hNZlJHVndZWEowYldWdWRDQnZaaUJJYjIxbGJHRnVaQ0JUDQpaV04xY21sMGVURWlNQ0FHQTFVRUN4TVpRMlZ5ZEdsbWFXTmhkR2x2YmlCQmRYUm9iM0pwZEdsbGN6RVFNQTRHDQpBMVVFQ3hNSFJFaFRJRU5CTkRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS3JaDQp0WlBna1lTOXhPU21qNTM0Y090Y1l1aTFxRElqeFdXSUN6aGlhdUZYOXNOUjhpeFlqNWhXTXY4Mzk4WWg0VHdVDQpmeE5aT0F2b0dqemdhZ1B1U0I0MVg2di8vVy9FV1ZELzBTQ3FRdVhmT2JEVTI0WGdsSDBzRzRyZ1pZMXdlbnUyDQowNGZ5V2VaYXIwOHFlT0VFUXhHVnRCSUkxRG02em5oR1VLWEJZQVdvT3NBSlh6cFZXMEY0bktLZG5TYU1ZV0FTDQpibFZ3NENqcHIzeENIcGhmUThaT1FhRHY0NlJxN05BUkhMTlVVZTNTYmYwYjJrdEFZejd5SjU4bG9EejFjL0JxDQp1cE5EQ0wxTUdMMnNYbnRRbU1NM2I0N0FpdlQzeDU3T0YyWlRvMU9Ma0VhZWJLNnJWWmZpSWxIdUErTzBQTEhBDQpGRTQvWXJFcWZUd3JCT1lIUGdNQ0F3RUFBYU9DQXFFd2dnS2RNQTRHQTFVZER3RUIvd1FFQXdJQkJqQVBCZ05WDQpIUk1CQWY4RUJUQURBUUgvTUlIQkJnTlZIU0FFZ2Jrd2diWXdEQVlLWUlaSUFXVURBZ0VEQmpBTUJncGdoa2dCDQpaUU1DQVFNSE1Bd0dDbUNHU0FGbEF3SUJBd2d3REFZS1lJWklBV1VEQWdFRERUQU1CZ3BnaGtnQlpRTUNBUU1RDQpNQXdHQ21DR1NBRmxBd0lCQXhFd0RBWUtZSVpJQVdVREFnRURKREFNQmdwZ2hrZ0JaUU1DQVFNbk1Bd0dDbUNHDQpTQUZsQXdJQkF5Z3dEQVlLWUlaSUFXVURBZ0VES1RBTUJncGdoa2dCWlFNQ0FRVUtNQXdHQ21DR1NBRmxBd0lCDQpCUXN3REFZS1lJWklBV1VEQWdFRkREQkJCZ2dyQmdFRkJRY0JBUVExTURNd01RWUlLd1lCQlFVSE1BS0dKV2gwDQpkSEE2THk5d2Eya3VkSEpsWVhOMWNua3VaMjkyTDJSb2MyTmhYMkZwWVM1d04yTXdRUVlJS3dZQkJRVUhBUXNFDQpOVEF6TURFR0NDc0dBUVVGQnpBRmhpVm9kSFJ3T2k4dmNHdHBMblJ5WldGemRYSjVMbWR2ZGk5a2FITmpZVjl6DQphV0V1Y0Rkak1JSHZCZ05WSFI4RWdlY3dnZVF3TnFBMG9ES0dNR2gwZEhBNkx5OXdhMmt1ZEhKbFlYTjFjbmt1DQpaMjkyTDFWVFgxUnlaV0Z6ZFhKNVgxSnZiM1JmUTBFeExtTnliRENCcWFDQnBxQ0JvNlNCb0RDQm5URUxNQWtHDQpBMVVFQmhNQ1ZWTXhHREFXQmdOVkJBb1REMVV1VXk0Z1IyOTJaWEp1YldWdWRERWpNQ0VHQTFVRUN4TWFSR1Z3DQpZWEowYldWdWRDQnZaaUIwYUdVZ1ZISmxZWE4xY25reElqQWdCZ05WQkFzVEdVTmxjblJwWm1sallYUnBiMjRnDQpRWFYwYUc5eWFYUnBaWE14SERBYUJnTlZCQXNURTFWVElGUnlaV0Z6ZFhKNUlGSnZiM1FnUTBFeERUQUxCZ05WDQpCQU1UQkVOU1RERXdId1lEVlIwakJCZ3dGb0FVRjB1NEpycHBlcTBTVUZkRk1aNVh1M1NsMmk4d0hRWURWUjBPDQpCQllFRkY1Um5abnJnbk4vaGhCTVhQalFOc2FXOUM2WE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQ0l4aXdJDQprbFBtUkhqd1lBei9ZcDNtMTA3cXdWcXV4N3lwRnZlOTZsV3BydmczTmwyU1hsN3l1SlQwcU85SzZsZ3hnVlg5DQo2bVNCc3Z4ZlEvK1dBZmVDWEdBQTBDcjBYNFZrZHlERDZuVDFSRjdEeFZRaDhPM0U3cDhmZlQxQlMybmxVdEphDQphTExCWDNaNzZReDFGcU1iM1NDWkF5SjIyZTZnWjNuRnFaV3ZaUmpMSW1JbWVVUnJYbyt3eTc5bHZKK3N4b3NqDQpIR05XZCt1R3VzeVZhTThsTnZLdE5wS0ZYMU81WitxeU1nZElFQmRucDNJVEdhdWp5cG5NL1dyaURoa212eG1iDQo0MCsrc0p5Y280WGd2L3NzdU1OL0hRL1pzMnFVWTZVV0JNV0VPdzNwVm5pckprQjNEbDJTOXY5RzJvelQ4M1Z6DQpWdDF6Zy8xY25FUkVPdmQybm54VWw0UjhYdUF1WFhpZzJyZjZLL0tHVFVsbWM2NjgxRzRpQVRabWljL21DWjZFDQpvRG9VZUhKR2xidFJaekhxVXd2V2tZZEFIK0VCQzhSbmZ6eGhIRlJ2aUJ6MU11UUczWlFHdGF5b2E2LzRRVTBLDQpRQWJxVS9jNk1TR1ZoOG94NEVYSnR5aDBFb1dxM0JuU0hkamMxdnpnMkVJUTR0Rnlib2NoT0VjV2I1VDNEN0xzDQorVllJNmkxa3NMMitiRmhBQjFHNS8rMisvb2pHUWc4cFBFUis1WDR0YjROc2tIQ213eTROYXBKTFdPOTVPSXhrDQpvK25JK0hBS1owdmlOMkJNMGJlMWN2ZEM5TCs2ZFRvOUdRd2hKc0RkVmVmUlJzOGRMY2JDTEJVOHAydUovTHpxDQpvc3lTeFBHcmpQK1hRVlhOVHpQNGNmTHI5TUhuTERiTnhWWm51Zz09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
  1-Department_of_Veterans_Affairs_CA_0x5CCB3215.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlIVHpDQ0JUZWdBd0lCQWdJRVhNc3lGVEFOQmdrcWhraUc5dzBCQVFzRkFEQ0JqakVMTUFrR0ExVUVCaE1DDQpWVk14R0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVqTUNFR0ExVUVDeE1hUkdWd1lYSjBiV1Z1DQpkQ0J2WmlCMGFHVWdWSEpsWVhOMWNua3hJakFnQmdOVkJBc1RHVU5sY25ScFptbGpZWFJwYjI0Z1FYVjBhRzl5DQphWFJwWlhNeEhEQWFCZ05WQkFzVEUxVlRJRlJ5WldGemRYSjVJRkp2YjNRZ1EwRXdIaGNOTVRrd05qSXlNVE15DQpNekl5V2hjTk1qa3dOakl5TVRNMU16SXlXakNCb0RFTE1Ba0dBMVVFQmhNQ1ZWTXhHREFXQmdOVkJBb1REMVV1DQpVeTRnUjI5MlpYSnViV1Z1ZERFbk1DVUdBMVVFQ3hNZVJHVndZWEowYldWdWRDQnZaaUJXWlhSbGNtRnVjeUJCDQpabVpoYVhKek1TSXdJQVlEVlFRTEV4bERaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwYVdWek1Tb3dLQVlEDQpWUVFMRXlGRVpYQmhjblJ0Wlc1MElHOW1JRlpsZEdWeVlXNXpJRUZtWm1GcGNuTWdRMEV3Z2dFaU1BMEdDU3FHDQpTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETVdEU3RkdDRDSmk3TERxMWJZalVWWkMwRGhETTVQVWZwDQpvZzduNkRjRk1abUFiNk1kR3hLN25mbEtxQkdaQlc5bi9yTjg4LzZaMXkvcHZDZTZmTDg1c0hZeEg2UjBlVHdUDQoyZUFISWtFOHRYTUoydEtvcG9mS1R2eHg5d3pLS280cHo1L29NeW9MYlh4TEtpa1Y3RUNkVjZIY210VUhoWTd4DQordDZPRzV2TXJSa2lER3dlNkJqQkFXSWJKa0pJOUNCOE5RVlUxTHczaDJIV0tPb0lXQ2k3TlFtVFZaY1hENWE1DQpEYjBpREM1cUdwTjdydVlSaVhjWitaOWlUaTVaS3lsN2p6SFZ1eFlTQnMveEQ1Q1F1Wk9lSmVHTDhmWlRBZ2hSDQo2bmlaWHZDY3NjTndQTDNScXZGaXYzTlkwYVFOeTRTWVIrbzlTSTJnOEk1TS9JMVdmZGYxQWdNQkFBR2pnZ0tmDQpNSUlDbXpBT0JnTlZIUThCQWY4RUJBTUNBUVl3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekNCd1FZRFZSMGdCSUc1DQpNSUcyTUF3R0NtQ0dTQUZsQXdJQkF3WXdEQVlLWUlaSUFXVURBZ0VEQnpBTUJncGdoa2dCWlFNQ0FRTUlNQXdHDQpDbUNHU0FGbEF3SUJBdzB3REFZS1lJWklBV1VEQWdFREVEQU1CZ3BnaGtnQlpRTUNBUU1STUF3R0NtQ0dTQUZsDQpBd0lCQXlRd0RBWUtZSVpJQVdVREFnRURKekFNQmdwZ2hrZ0JaUU1DQVFNb01Bd0dDbUNHU0FGbEF3SUJBeWt3DQpEQVlLWUlaSUFXVURBZ0VGQ2pBTUJncGdoa2dCWlFNQ0FRVUxNQXdHQ21DR1NBRmxBd0lCQlF3d1FBWUlLd1lCDQpCUVVIQVFFRU5EQXlNREFHQ0NzR0FRVUZCekFDaGlSb2RIUndPaTh2Y0d0cExuUnlaV0Z6ZFhKNUxtZHZkaTkyDQpZV05oWDJGcFlTNXdOMk13UUFZSUt3WUJCUVVIQVFzRU5EQXlNREFHQ0NzR0FRVUZCekFGaGlSb2RIUndPaTh2DQpjR3RwTG5SeVpXRnpkWEo1TG1kdmRpOTJZV05oWDNOcFlTNXdOMk13Z2U4R0ExVWRId1NCNXpDQjVEQTJvRFNnDQpNb1l3YUhSMGNEb3ZMM0JyYVM1MGNtVmhjM1Z5ZVM1bmIzWXZWVk5mVkhKbFlYTjFjbmxmVW05dmRGOURRVEV1DQpZM0pzTUlHcG9JR21vSUdqcElHZ01JR2RNUXN3Q1FZRFZRUUdFd0pWVXpFWU1CWUdBMVVFQ2hNUFZTNVRMaUJIDQpiM1psY201dFpXNTBNU013SVFZRFZRUUxFeHBFWlhCaGNuUnRaVzUwSUc5bUlIUm9aU0JVY21WaGMzVnllVEVpDQpNQ0FHQTFVRUN4TVpRMlZ5ZEdsbWFXTmhkR2x2YmlCQmRYUm9iM0pwZEdsbGN6RWNNQm9HQTFVRUN4TVRWVk1nDQpWSEpsWVhOMWNua2dVbTl2ZENCRFFURU5NQXNHQTFVRUF4TUVRMUpNTVRBZkJnTlZIU01FR0RBV2dCUVhTN2dtDQp1bWw2clJKUVYwVXhubGU3ZEtYYUx6QWRCZ05WSFE0RUZnUVUycHkySC85bm5VZVJEU2JuS1dZVVpaZm1nRmd3DQpEUVlKS29aSWh2Y05BUUVMQlFBRGdnSUJBSHl5TnpkV2RoZlJhd3Q0WnBXLzVuUm83V1JkN0R4T0dPbzQ4V0xnDQp0QzlOeUF6QUt2NzJPNU1KbzFhaVNHVzNWbVBjS3pGcFBhTUF3Y0RpV0Nta2Ntb3ViTlZ3b1creEF4Rnc2STBYDQpma3Y4Z3FKN2dNZTlwaFUrQ3MxNlU5Y2ZxdnRWdExNaHlWVjVnRVRFOCtnR2NWTXhGdVVEbHh2QzZPQnZQbXZ5DQpnUzZPZk16dGowaDVaOGZYSnhsYUJOVHExZWd4cVYwdUl2ZGhMdmU5SUFWdDYyNHRhSFArV2ZjdGlDcjU4ZGQyDQpWeE9RMVRyYzJRdXIzVVEwWFJldWdrZ3pVVXZjMGw3Mldha3hLZC9wOEVLR09KN2Q2ZmlWVXJaL3BJb1NYeVAzDQpSRlF0L1QwQ0JuNGl5YXR0bVR0cTJwTnB2d05GWVpLdCtlLzNCcFlFd0VKNjZLYnY0U1pXMUJxdVpWajJBWEYvDQpXVEZQK2tRS0d6eStnaEk1TGtWeDQ2SHpJanBnMU4wWjhLK2NzekJ6cW9jbWxuS0dDRUd0Y0hSMFd4aHBBV3N6DQpiODFJaDJIbFJzalhCejQ3YTZhM1p2ai9COHRtek8yY202R0hvZnl2RXFiNkJhc1FGRHc5bWhhRXhtLzJFaWVuDQpGZ3UrREd0ZTlDbG1ocDdublJHUzRvNEZZd0d1S3Z4SjdOYnJDQ2JaOWh2S204L3lVRk41cndhVFQzblJLcHhVDQpWVlFqTUxwNjQrSU8vNHRpRzlNZktyUWdlVkM2RXlOVTNicGg0d29od2JhTkltUU0yWG9TMGsyRUdDZnJscHRXDQpSck1WMUhUdi9uVW1oZWh6Q0ltdUh5QXBoVHNEdTdhaExyd2FXdVRCM1ZiQTZEa1pacUpLTzBnQTdIWkVvNEFEDQpiSXoyDQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
  1-NASA_0x5CCB3196.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlISmpDQ0JRNmdBd0lCQWdJRVhNc3hsakFOQmdrcWhraUc5dzBCQVFzRkFEQ0JqakVMTUFrR0ExVUVCaE1DDQpWVk14R0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVqTUNFR0ExVUVDeE1hUkdWd1lYSjBiV1Z1DQpkQ0J2WmlCMGFHVWdWSEpsWVhOMWNua3hJakFnQmdOVkJBc1RHVU5sY25ScFptbGpZWFJwYjI0Z1FYVjBhRzl5DQphWFJwWlhNeEhEQWFCZ05WQkFzVEUxVlRJRlJ5WldGemRYSjVJRkp2YjNRZ1EwRXdIaGNOTVRrd05UQTBNVEkwDQpNRFUxV2hjTk1qa3dOVEEwTVRNeE1EVTFXakI0TVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUDQpMaUJIYjNabGNtNXRaVzUwTVEwd0N3WURWUVFMRXdST1FWTkJNU0l3SUFZRFZRUUxFeGxEWlhKMGFXWnBZMkYwDQphVzl1SUVGMWRHaHZjbWwwYVdWek1Sd3dHZ1lEVlFRTEV4Tk9RVk5CSUU5d1pYSmhkR2x2Ym1Gc0lFTkJNSUlCDQpJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBN1Y5R3V6TVZvOUdUV0M5d2psY0VCd1JmDQpOanZadFdCTnQxVkl5YmtVcXFsVFRmTE8zdFhZWmVrem1neXU5UjZ1SjMwU2pOTkdDbS9vaW9NYXhacmU4Mlk1DQowVEJXNS9DTFVTOWhFbVdoVGdTaTJOdWhpUFJ2SUJITUxhQTNWWjhEWEJMdGF0OFlSUitKbldBTkJTbkl2bkUxDQpqNllFTDBBM0lzUmx1ZUlBeHpvMEl3VzNsVy9xQkxtS3dicWprYWcxSHhuWm9UVVNBdDNqNU43TVRhNmo0S3BQDQoyK3ZXb2tUeTZZVnFSbDZoMXE3YjFiS0NESWxzaHoxdlByM1hLWE9FNXRScEtCTjdYUWZkbHY4N0o4RmJDZzBVDQpCNndWZ29OckVXbGo1QTZtNnJEWFRFdGEzUFlmUmNGZXNhY0ZHdkR4ZVoveU9aQ2xBa0RTbHlaZGY5WjFKd0lEDQpBUUFCbzRJQ256Q0NBcHN3RGdZRFZSMFBBUUgvQkFRREFnRUdNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdnY0VHDQpBMVVkSUFTQnVUQ0J0akFNQmdwZ2hrZ0JaUU1DQVFNR01Bd0dDbUNHU0FGbEF3SUJBd2N3REFZS1lJWklBV1VEDQpBZ0VEQ0RBTUJncGdoa2dCWlFNQ0FRTU5NQXdHQ21DR1NBRmxBd0lCQXhBd0RBWUtZSVpJQVdVREFnRURFVEFNDQpCZ3BnaGtnQlpRTUNBUU1rTUF3R0NtQ0dTQUZsQXdJQkF5Y3dEQVlLWUlaSUFXVURBZ0VES0RBTUJncGdoa2dCDQpaUU1DQVFNcE1Bd0dDbUNHU0FGbEF3SUJCUW93REFZS1lJWklBV1VEQWdFRkN6QU1CZ3BnaGtnQlpRTUNBUVVNDQpNRUFHQ0NzR0FRVUZCd0VCQkRRd01qQXdCZ2dyQmdFRkJRY3dBb1lrYUhSMGNEb3ZMM0JyYVM1MGNtVmhjM1Z5DQplUzVuYjNZdmJtOWpZVjloYVdFdWNEZGpNRUFHQ0NzR0FRVUZCd0VMQkRRd01qQXdCZ2dyQmdFRkJRY3dCWVlrDQphSFIwY0RvdkwzQnJhUzUwY21WaGMzVnllUzVuYjNZdmJtOWpZVjl6YVdFdWNEZGpNSUh2QmdOVkhSOEVnZWN3DQpnZVF3TnFBMG9ES0dNR2gwZEhBNkx5OXdhMmt1ZEhKbFlYTjFjbmt1WjI5MkwxVlRYMVJ5WldGemRYSjVYMUp2DQpiM1JmUTBFeExtTnliRENCcWFDQnBxQ0JvNlNCb0RDQm5URUxNQWtHQTFVRUJoTUNWVk14R0RBV0JnTlZCQW9UDQpEMVV1VXk0Z1IyOTJaWEp1YldWdWRERWpNQ0VHQTFVRUN4TWFSR1Z3WVhKMGJXVnVkQ0J2WmlCMGFHVWdWSEpsDQpZWE4xY25reElqQWdCZ05WQkFzVEdVTmxjblJwWm1sallYUnBiMjRnUVhWMGFHOXlhWFJwWlhNeEhEQWFCZ05WDQpCQXNURTFWVElGUnlaV0Z6ZFhKNUlGSnZiM1FnUTBFeERUQUxCZ05WQkFNVEJFTlNUREV3SHdZRFZSMGpCQmd3DQpGb0FVRjB1NEpycHBlcTBTVUZkRk1aNVh1M1NsMmk4d0hRWURWUjBPQkJZRUZBS2t2SC9jTkVQWTZ6dzducERXDQo5MWVwR0c5UU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQnJZbUR6M1ZRalRJZitYQzc4ZXJSTjVvMytabUsvDQowZVMxWUgwbUhQem9ZRXM4S1hXNUFGb0NaT24xM2U4VXVUYlQxN3U2dldoMHc0aEZnc3k0Mm9TYmsrOWNjcWdJDQp0eXdLVmUvS1N4cDJTcnVpMGZIWlpJRFQxRWZFMzVNUC9rbDlOR0xidE16T1dGdklPSG15Q2hlMUcwNU16dWQ2DQpXSkVOUXZTZ3NzTUpVRHJFZll0VENLREgxdllqQU5nbjBVYlUvMTBkNXVPSUxOMVk1bjR3STNyeE9EU1lNYnMrDQpHc1N5ZUY1aHRvY2h3SThhcmNva2R3cFJrWHZSakEwUHRwTmVUbGxraE9SM0NnUm83b3FHZDh1b09yeEllcVd5DQpmUXh2eUpzQlJGc2cxRmZWd2JFa0l0bHRWTzUzQTJKZTRqSmtjRE1QdVpHdEc1V2gxUzNxYTJjZHJXdTBHSzd1DQpSb0VrRWJxQkdpL2Z3S2xGbnR4dEVoQzQvMXcrY0NVRW05VU84ek95d0dBQkJqRVVjeGswTHovZWsvYzNEekViDQpmL3g0aHB2aUhQRWJGWVlCSkpQVk4xL3VkTVZ2UE54azYxRG9WaDBKRmdXakNydWZwZzJXUUhEYWZxWTFCQ0lEDQovYjdwUWx5VGNla3JjM0hGN0h3Y1J4Z1VNbmphRGYrTFR2eEMzcnVkeUNCODE5ZzgwSDM2dzVydzFrRUptcU1PDQp2c2JTWHFZam52MHk3ejMycmJmd0M2SjJXaWhxb1o1WUFUU1dRZnRzVDlCbTNidnNEL2xxWGFlRjRRa0dEYldpDQpzYTF3YXNWLzhsUitOVWhZRWx3bnc4VTI2Y3l6c3BHUkw1bnVQN2tna2xGWE9TV2ZzTndBL1FPVjN3elZEa0NlDQpvc0s5ZnVTa0VSSklZdz09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-verizon-cybertrust-federal-ssp
  namespace: default
data:
  0-Federal_Common_Policy_CA_G2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGM1RDQ0E4V2dBd0lCQWdJVUllVzVvTXlWYmVKNHlnRXJxUDNGaXBpeisrb3dEUVlKS29aSWh2Y05BUUVNDQpCUUF3WERFTE1Ba0dBMVVFQmhNQ1ZWTXhHREFXQmdOVkJBb1REMVV1VXk0Z1IyOTJaWEp1YldWdWRERU5NQXNHDQpBMVVFQ3hNRVJsQkxTVEVrTUNJR0ExVUVBeE1iUm1Wa1pYSmhiQ0JEYjIxdGIyNGdVRzlzYVdONUlFTkJJRWN5DQpNQjRYRFRJd01UQXhOREV6TXpVeE1sb1hEVFF3TVRBeE5ERXpNelV4TWxvd1hERUxNQWtHQTFVRUJoTUNWVk14DQpHREFXQmdOVkJBb1REMVV1VXk0Z1IyOTJaWEp1YldWdWRERU5NQXNHQTFVRUN4TUVSbEJMU1RFa01DSUdBMVVFDQpBeE1iUm1Wa1pYSmhiQ0JEYjIxdGIyNGdVRzlzYVdONUlFTkJJRWN5TUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGDQpBQU9DQWc4QU1JSUNDZ0tDQWdFQTE5ZlRGekVtSVJnUUtrRnR5Nis5OXNSUmpDVFlCWWg3TGxvUnBDWnM0cmdwDQpCaysvNVA0YVpZZDV2MDFHWUJmT0t5d0dKeUZoNHhrMzMvUTR5QUNvT1QxdVpPbG9OcS9xaGhUMHI5MlVvZ0tmDQo3N241SmdNaHZnL2JUaFZCM2x4eGFoWlFNTTBZcVVoZzFydGFLUktzWG0wQXBsaGFsTlQ2YzNtQTNZRFN0NCs3DQo1aTEwNW9FM0pic0ZqRFk1RHRHTVlCOUpJaHhvYnRXVFNuaEw1RTVIek8wR1ZJOVV2aFdBUFZBaHhtOG9UNHd4DQpTT0lqWi9NeXdYZmxmQnJEa3RadTFQTnNKa2tZSnB2RmdEbVNGdUVQeml2Y09yeXRvUGlQZmdYTXFZL1A3ek80DQpvcExyaDJFVjV5QTRYWUVkb3lBMmRWRDhqbW0rTGs3emdSRmFoLzg0UDJndXhOdFdwWkF0UTlOc2FnNHc0RW10DQpScTgySkxxWlFseXJNYnZMdmhXRmVjRWt5ZkR6d0drRlJJT0JuMUliVWZLVHRONUdXcG5kbDhIQ1VQYlIyaTdoDQpwVjlDRmZrWFRnc0xHVHdNTlYyeFB6MnhUaHJMRHUwanJERyszL2s0MmpCN0tIM1NRc2U3MnlvNk15TkY0NnV1DQptTzd2T1JIbGhPVFZrV3l4b3RCVTMyN1haZnEzQk51cFVETDYrUjRkVUcrcFFBRFNzdFJKNjBnZVBwMElBdFFTDQpIWllkMWlSaVhLcFRMbDBrb2ZCMlkzTGdBRk5kWW1hSHJicmlkMGRsS0lzOVFpb0R3am0rd3JETEFtdVQ0YmpMDQpaZVBoYzNxdDh1YmpoWk4yTmF6KzRZUDUrbmZTUFBDbExpeU0vVVQyZWw3ZVk0bDZPYXFYTUlSZkp4TklId2NDDQpBd0VBQWFPQmxqQ0JrekFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIvd1FFQXdJQkJqQWRCZ05WDQpIUTRFRmdRVTlDZGNxY044Ui9UNnBxZXdXWmVxM1RVbUYrTXdVUVlJS3dZQkJRVUhBUXNFUlRCRE1FRUdDQ3NHDQpBUVVGQnpBRmhqVm9kSFJ3T2k4dmNtVndieTVtY0d0cExtZHZkaTltWTNCallTOWpZVU5sY25SelNYTnpkV1ZrDQpRbmxtWTNCallXY3lMbkEzWXpBTkJna3Foa2lHOXcwQkFRd0ZBQU9DQWdFQUFXUTNNQXp3enIzTzFSU0JrZzA2DQpOQ2o3ZUlMNy9JNWZ3VEJMaHBvTWhFMFhvYW9QVWllMGdxUm8zS08yTWh1QnRhY2p5NTVpaElZODdoU2hHb0tRDQpjYkExZmg3ZTRDbHk1UWtPWStLYlFzbHRrS3pnb2Qyem1QeUMwYkVPWUQyTE8xNDFIeWVEV2RRNmREWER6NmRyDQo4T2JudE9mTXpnZG83dm9kQ011S1U4K3lzVGR4UnhUQ2k2QVZ6M3VxZTVrK09iSllwQzBhWEhOTXkxT25GZ0w2DQpveE1lR01sU2VjVS9RVUFJZjBuY0R1cllGU2N0RndYaXRUQzBDcmNMTzkvQUdIcVRGU0h6VXJJbGJyZ2QvYUdPDQorRTNvM1FvVStUaENQUG51MUsyS1pMRzRweU1xZEJtNHk3clZHUFJpa0xtRmhJdi9iNmIyQ0w4eWlZTDArbUpEDQpjclRWczBQWWZBTHRReE1wU0E4bjA1M2dhamxQd2hHM081amNMOFN6cWxhR1BtR3FwbkVpOWFXQVlISlhUemJqDQp6R1VBYzJ1OCtLdzhYdjRKZmZoVldJeFZLSDROUzVQQ3RnWHd4aWZncm1QaTAvdVUxdzBjcmNsRXNTc3lhN0ZJDQpCVlJUVVJvU3d3ZGEyNXdJSVdQSWtRc1FLMXNuSnhnRXlVelhpMTBNVURSMFdTRHFRQWRoYk9MY21jeWhFRDVoDQpwaFlRbmY4c0Q4RnBvVURqb0xDUGtVL3l0ZlpvcGxtY0JNNFNRNEVqZ2p5azYzdk1xQkRjQ01YVEhjaUZUc1YyDQplK2FSZUx2SXZVNFltYUJRUWwzdkNGajFxTVBJa1JzVGJ5MUZmOGhSRFFHM2tIMHZlZmNWdGNpY3NkVThrVjJNDQplZS94Si9jMGNJSFpXTXcwSG9SWlBibz0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
  1-Verizon_SSP_CA_A2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlHRnpDQ0EvK2dBd0lCQWdJVUpmeW9OSzJpU2tSVm90c1A5TTczeEJFWmpqb3dEUVlKS29aSWh2Y05BUUVNDQpCUUF3WERFTE1Ba0dBMVVFQmhNQ1ZWTXhHREFXQmdOVkJBb1REMVV1VXk0Z1IyOTJaWEp1YldWdWRERU5NQXNHDQpBMVVFQ3hNRVJsQkxTVEVrTUNJR0ExVUVBeE1iUm1Wa1pYSmhiQ0JEYjIxdGIyNGdVRzlzYVdONUlFTkJJRWN5DQpNQjRYRFRJd01URXhPREUwTlRZeE9Gb1hEVEkyTVRJd05qRTBOVFl4T0Zvd1NURUxNQWtHQTFVRUJoTUNWVk14DQpFREFPQmdOVkJBb1RCMVpsY21sNmIyNHhEREFLQmdOVkJBc1RBMU5UVURFYU1CZ0dBMVVFQXhNUlZtVnlhWHB2DQpiaUJUVTFBZ1EwRWdRVEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ1QwV000DQpPL1pGWTh1cnJzU0lBblRnTXFvUEsxT1pKNmlHV1BKRklPTENHY09YSDY5WmRaaDVXRjBSWEx0VmlheExnaDlSDQoxR2lDVG1INmI3OW9rdkF4dlhPQXN3b3crZVVxOUVYajlwMzdVbnpSQjhRVUpGMVdaRFF2dTRXMHpwS0VnaGhCDQpWbkdxemtFT1YvUUVZZi9hYXd1WkdZL1lzdndyVWJqNmwwaGpwQ2NCSzd3OE94QTg4NWJDdEJycmpubUZDYkxoDQpHa0IrQTU2N2xjY0xSTFZXOTRvT1NlWXgzQkIyeUNyZkVJVkltN21IeUI1Rkc5WExXbXY3RlpQUWd5NnljbFlaDQp0cnBseFM3SmpoNkEybHVJUUhWMkc1eDhTVytRd3pGTTR1STFJTTQzTTUxbXJiME4zQThnZzU5Smw4bUJIakxkDQpxbU1mY2k2L1F1WEkxNWpEQWdNQkFBR2pnZ0hpTUlJQjNqQWRCZ05WSFE0RUZnUVUremZkUjBFL1BYRWlZSCtmDQpnb1FDUUFtcXlvc3dId1lEVlIwakJCZ3dGb0FVOUNkY3FjTjhSL1Q2cHFld1daZXEzVFVtRitNd0RnWURWUjBQDQpBUUgvQkFRREFnRUdNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdlUVlEVlIwZ0JISXdjREFNQmdwZ2hrZ0JaUU1DDQpBUU1HTUF3R0NtQ0dTQUZsQXdJQkF3Y3dEQVlLWUlaSUFXVURBZ0VEQ0RBTUJncGdoa2dCWlFNQ0FRTU5NQXdHDQpDbUNHU0FGbEF3SUJBeEV3REFZS1lJWklBV1VEQWdFREp6QU1CZ3BnaGtnQlpRTUNBUU1vTUF3R0NtQ0dTQUZsDQpBd0lCQXlrd1VRWUlLd1lCQlFVSEFRc0VSVEJETUVFR0NDc0dBUVVGQnpBRmhqVm9kSFJ3T2k4dmMybGhNUzV6DQpjM0F0YzNSeWIyNW5MV2xrTG01bGRDOURRUzlXV2kxVFUxQXRRMEV0UVRJdFUwbEJMbkEzWXpBU0JnTlZIU1FCDQpBZjhFQ0RBR2dBRUFnUUVBTUEwR0ExVWROZ0VCL3dRREFnRUFNRkVHQ0NzR0FRVUZCd0VCQkVVd1F6QkJCZ2dyDQpCZ0VGQlFjd0FvWTFhSFIwY0RvdkwzSmxjRzh1Wm5CcmFTNW5iM1l2Wm1Od1kyRXZZMkZEWlhKMGMwbHpjM1ZsDQpaRlJ2Wm1Od1kyRm5NaTV3TjJNd053WURWUjBmQkRBd0xqQXNvQ3FnS0lZbWFIUjBjRG92TDNKbGNHOHVabkJyDQphUzVuYjNZdlptTndZMkV2Wm1Od1kyRm5NaTVqY213d0RRWUpLb1pJaHZjTkFRRU1CUUFEZ2dJQkFHMDRMMU1yDQpRRmRTWVVMa0NNNk94UkRLVmpaQjN4TzRsSmgzUUxRbElsL2JRNFdiL3MxRVlzZFVFU2k1VCtZaWNBMG1yVDBTDQpOQmxvOHlaQmxaaTM1OS80U0FEY2RvRjUya0NnQVQzUmFmWVZaVjFVYmIwRjdqS0xrOFR4RHVjN3NXekVSQUh1DQpNS0FIeTlEMFk3ZU9HRG1US25LUTl5TytBZENJdFFVN2lEUnJhRnUySjRwSnU2cmZjd0VldzdwMDJ6dFRoNjZ2DQpCYWpZeUZrNURwQmJTWGw5Tlg2OHBBYkhpWThWbWFpQ1VxbWtNOExOdWV4RkxYaFJ4RTY1ZWhxQWxlVlZYVVVHDQpvSUVrVEszWjhVY0grbkxTcllOVG91TlJFNVV5L2pSQ3F5aGQrYVgxdW1qekZHY04zTmZ2VXZBUWNWdU1pMXpYDQpaUDg3RjlXbkxQc1dja2wzc1g0VTdXcllSTEg3L1UyVHczWjVuK3VzN0lQd0ltMlZ6VUMvM3pQRldXcy8xaWcvDQppMFNjNVZSUW52cGp6enpSalNGbEdmZE9YbEUwTnZHS1QzNG13UDNXU0s3c0UvRDZKTjA3QnJRVFlHS3VjMkQyDQpjRmlJZmRPcko3QXAyemZGV3RPTHJqdHhLdmZQQWtldmdHa0hJcm93WDNMRkl2dTlsWGJUTUhXcnl3ditBcGc4DQpvUnBYSDlETDl1alRCVE53cUljNkNVVWlLUHJMU3lVcHhYUlZmMDdRa3BKdGNHc1VYVTNPcHN3NHBINUdTYjlvDQphdHZzTmcxVjErdW45VUVrbE8wWDhqN1BLOXh5OVFWNjdjOVE3YlJmdVFSSUcrRzZlMUJod1RXK3dXdWM2L3U0DQpNcXRGdnNIajNHVDd4Q3VRd1k5Q2VLMXRLdkFOYWZXUnJ1TWMNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
  2-Veterans_Affairs_User_CA_B1.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGSmpDQ0JBNmdBd0lCQWdJVUpSNmpaVGJQNjdEcDBUTk5ETGxoQXJxeFpZa3dEUVlKS29aSWh2Y05BUUVMDQpCUUF3U1RFTE1Ba0dBMVVFQmhNQ1ZWTXhFREFPQmdOVkJBb1RCMVpsY21sNmIyNHhEREFLQmdOVkJBc1RBMU5UDQpVREVhTUJnR0ExVUVBeE1SVm1WeWFYcHZiaUJUVTFBZ1EwRWdRVEl3SGhjTk1UY3dNVEkxTURRMU9URTFXaGNODQpNamN3TVRJMU1EUTFPVEUxV2pCd01STXdFUVlLQ1pJbWlaUHlMR1FCR1JZRFoyOTJNUkl3RUFZS0NaSW1pWlB5DQpMR1FCR1JZQ2RtRXhFVEFQQmdOVkJBc01DRk5sY25acFkyVnpNUXd3Q2dZRFZRUUxEQU5RUzBreEpEQWlCZ05WDQpCQU1NRzFabGRHVnlZVzV6SUVGbVptRnBjbk1nVlhObGNpQkRRU0JDTVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCDQpCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOMTFieEhYc1RLdWV2ZElGK1F6K1QxZTZ0dXllU0U5dzJGTU5VRERCY3NMDQo4ckEyTitYUHNYVkxUVmMyQ0tXUkRZVXBaazQ1VFBtYVVyK21WR3lMOVJRN1EwbSt2UTlIbmpETC9aRWdrUlhvDQpCQ0RycEU1MUV6aVJtVDg2T3dnMmZuWHNlUmZweHo1ajJJN2NwdDR6UFg2NXJRVHFuWHZFeXJlY1NQZFpadEtlDQpWVkkyVGhZNlJzbVA3RVlVdklZNzc1M3BzK3l0alY3NFd1QUhsUFEyaGpDVi9WclFsaE5TRHN6VXVQL3pIUXlRDQpBN21lNmk4V1hHRTlKTG1LS2N1ZkxhWmNPcndkVTBncDEySGZTbGNVa2t4d1dHM0o5cncveDZoSG1HOUErWVFiDQo1STdkOTFYZ3c2Y2Z1bFBxdW5VamFicjEwR2NKbFJteWNYUjViOEtpcjZVQ0F3RUFBYU9DQWQwd2dnSFpNQThHDQpBMVVkRXdFQi93UUZNQU1CQWY4d1hRWURWUjBnQkZZd1ZEQU1CZ3BnaGtnQlpRTUNBUU1HTUF3R0NtQ0dTQUZsDQpBd0lCQXdjd0RBWUtZSVpJQVdVREFnRURDREFNQmdwZ2hrZ0JaUU1DQVFNTk1Bd0dDbUNHU0FGbEF3SUJBeEV3DQpEQVlLWUlaSUFXVURBZ0VESnpDQmhnWUlLd1lCQlFVSEFRRUVlakI0TUQwR0NDc0dBUVVGQnpBQ2hqRm9kSFJ3DQpPaTh2WVdsaE1TNXpjM0F0YzNSeWIyNW5MV2xrTG01bGRDOURRUzlXV2kxVFUxQXRRMEV0UVRJdWNEZGpNRGNHDQpDQ3NHQVFVRkJ6QUJoaXRvZEhSd09pOHZiMk56Y0RFdWMzTndMWE4wY205dVp5MXBaQzV1WlhRdlZsb3RVMU5RDQpMVU5CTFVFeU1Fa0dDQ3NHQVFVRkJ3RUxCRDB3T3pBNUJnZ3JCZ0VGQlFjd0JZWXRhSFIwY0RvdkwyRnBZVEV1DQpjM053TFhOMGNtOXVaeTFwWkM1dVpYUXZRMEV2VmtGMWMyVnlRMEV1Y0Rkak1BNEdBMVVkRHdFQi93UUVBd0lCDQp4akFmQmdOVkhTTUVHREFXZ0JUN045MUhRVDg5Y1NKZ2Y1K0NoQUpBQ2FyS2l6QkRCZ05WSFI4RVBEQTZNRGlnDQpOcUEwaGpKb2RIUndPaTh2WTJSd01TNXpjM0F0YzNSeWIyNW5MV2xrTG01bGRDOURSRkF2VmxvdFUxTlFMVU5CDQpMVUV5TG1OeWJEQWRCZ05WSFE0RUZnUVVyNW9oeGJNWEthdW9PWlUrY1JWMW9mRDFGZ2N3RFFZSktvWklodmNODQpBUUVMQlFBRGdnRUJBRjNhNjNIdG1xYWhMcS9UMWRoWXJ5bkRBdjJqSWNzNW5wTnp4WUtxbys2WVVSVTF3VVBDDQpiR0V5YnNycDk4L3lCdXZkeitWd3FVY3g1Wlp4aHA1M0ZUbUF6K0VIUWNwSHJEdW44OG4xcTRtaDJWcXZXai9NDQpGdStNTSs2M2pmQk8vVEpSSmJxNnkvTDFSM2dwK0xMZzNvZFNuM2JSU1QxTkhVaTlxRjFYby9CZXlMcXdYNkY4DQo3dlpvTExLQU1iRU5XUGphTHZwbjhnbDhZU3hEejZMUjVVV1BHSVY1Um9VUlBtcld2MkxzSGxCRjhmZHpwQlVEDQpzMExvN1gxaC9haHVnRFRPVlM0Q3VEdmxhcWdTdktwNitWVXFhbllkTEh0bHViMzcxa0VsczJpeTVueDZDTUF2DQpaUEl6Zkp0bksxcXRmMXVIcVJXeTN1MGlzRHB5eVJwdUdYcz0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-widepoint-federal-ssp-trust-chain-1
  namespace: default
data:
  0-Federal_Common_Policy_CA_G2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGM1RDQ0E4V2dBd0lCQWdJVUllVzVvTXlWYmVKNHlnRXJxUDNGaXBpeisrb3dEUVlKS29aSWh2Y05BUUVNDQpCUUF3WERFTE1Ba0dBMVVFQmhNQ1ZWTXhHREFXQmdOVkJBb1REMVV1VXk0Z1IyOTJaWEp1YldWdWRERU5NQXNHDQpBMVVFQ3hNRVJsQkxTVEVrTUNJR0ExVUVBeE1iUm1Wa1pYSmhiQ0JEYjIxdGIyNGdVRzlzYVdONUlFTkJJRWN5DQpNQjRYRFRJd01UQXhOREV6TXpVeE1sb1hEVFF3TVRBeE5ERXpNelV4TWxvd1hERUxNQWtHQTFVRUJoTUNWVk14DQpHREFXQmdOVkJBb1REMVV1VXk0Z1IyOTJaWEp1YldWdWRERU5NQXNHQTFVRUN4TUVSbEJMU1RFa01DSUdBMVVFDQpBeE1iUm1Wa1pYSmhiQ0JEYjIxdGIyNGdVRzlzYVdONUlFTkJJRWN5TUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGDQpBQU9DQWc4QU1JSUNDZ0tDQWdFQTE5ZlRGekVtSVJnUUtrRnR5Nis5OXNSUmpDVFlCWWg3TGxvUnBDWnM0cmdwDQpCaysvNVA0YVpZZDV2MDFHWUJmT0t5d0dKeUZoNHhrMzMvUTR5QUNvT1QxdVpPbG9OcS9xaGhUMHI5MlVvZ0tmDQo3N241SmdNaHZnL2JUaFZCM2x4eGFoWlFNTTBZcVVoZzFydGFLUktzWG0wQXBsaGFsTlQ2YzNtQTNZRFN0NCs3DQo1aTEwNW9FM0pic0ZqRFk1RHRHTVlCOUpJaHhvYnRXVFNuaEw1RTVIek8wR1ZJOVV2aFdBUFZBaHhtOG9UNHd4DQpTT0lqWi9NeXdYZmxmQnJEa3RadTFQTnNKa2tZSnB2RmdEbVNGdUVQeml2Y09yeXRvUGlQZmdYTXFZL1A3ek80DQpvcExyaDJFVjV5QTRYWUVkb3lBMmRWRDhqbW0rTGs3emdSRmFoLzg0UDJndXhOdFdwWkF0UTlOc2FnNHc0RW10DQpScTgySkxxWlFseXJNYnZMdmhXRmVjRWt5ZkR6d0drRlJJT0JuMUliVWZLVHRONUdXcG5kbDhIQ1VQYlIyaTdoDQpwVjlDRmZrWFRnc0xHVHdNTlYyeFB6MnhUaHJMRHUwanJERyszL2s0MmpCN0tIM1NRc2U3MnlvNk15TkY0NnV1DQptTzd2T1JIbGhPVFZrV3l4b3RCVTMyN1haZnEzQk51cFVETDYrUjRkVUcrcFFBRFNzdFJKNjBnZVBwMElBdFFTDQpIWllkMWlSaVhLcFRMbDBrb2ZCMlkzTGdBRk5kWW1hSHJicmlkMGRsS0lzOVFpb0R3am0rd3JETEFtdVQ0YmpMDQpaZVBoYzNxdDh1YmpoWk4yTmF6KzRZUDUrbmZTUFBDbExpeU0vVVQyZWw3ZVk0bDZPYXFYTUlSZkp4TklId2NDDQpBd0VBQWFPQmxqQ0JrekFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIvd1FFQXdJQkJqQWRCZ05WDQpIUTRFRmdRVTlDZGNxY044Ui9UNnBxZXdXWmVxM1RVbUYrTXdVUVlJS3dZQkJRVUhBUXNFUlRCRE1FRUdDQ3NHDQpBUVVGQnpBRmhqVm9kSFJ3T2k4dmNtVndieTVtY0d0cExtZHZkaTltWTNCallTOWpZVU5sY25SelNYTnpkV1ZrDQpRbmxtWTNCallXY3lMbkEzWXpBTkJna3Foa2lHOXcwQkFRd0ZBQU9DQWdFQUFXUTNNQXp3enIzTzFSU0JrZzA2DQpOQ2o3ZUlMNy9JNWZ3VEJMaHBvTWhFMFhvYW9QVWllMGdxUm8zS08yTWh1QnRhY2p5NTVpaElZODdoU2hHb0tRDQpjYkExZmg3ZTRDbHk1UWtPWStLYlFzbHRrS3pnb2Qyem1QeUMwYkVPWUQyTE8xNDFIeWVEV2RRNmREWER6NmRyDQo4T2JudE9mTXpnZG83dm9kQ011S1U4K3lzVGR4UnhUQ2k2QVZ6M3VxZTVrK09iSllwQzBhWEhOTXkxT25GZ0w2DQpveE1lR01sU2VjVS9RVUFJZjBuY0R1cllGU2N0RndYaXRUQzBDcmNMTzkvQUdIcVRGU0h6VXJJbGJyZ2QvYUdPDQorRTNvM1FvVStUaENQUG51MUsyS1pMRzRweU1xZEJtNHk3clZHUFJpa0xtRmhJdi9iNmIyQ0w4eWlZTDArbUpEDQpjclRWczBQWWZBTHRReE1wU0E4bjA1M2dhamxQd2hHM081amNMOFN6cWxhR1BtR3FwbkVpOWFXQVlISlhUemJqDQp6R1VBYzJ1OCtLdzhYdjRKZmZoVldJeFZLSDROUzVQQ3RnWHd4aWZncm1QaTAvdVUxdzBjcmNsRXNTc3lhN0ZJDQpCVlJUVVJvU3d3ZGEyNXdJSVdQSWtRc1FLMXNuSnhnRXlVelhpMTBNVURSMFdTRHFRQWRoYk9MY21jeWhFRDVoDQpwaFlRbmY4c0Q4RnBvVURqb0xDUGtVL3l0ZlpvcGxtY0JNNFNRNEVqZ2p5azYzdk1xQkRjQ01YVEhjaUZUc1YyDQplK2FSZUx2SXZVNFltYUJRUWwzdkNGajFxTVBJa1JzVGJ5MUZmOGhSRFFHM2tIMHZlZmNWdGNpY3NkVThrVjJNDQplZS94Si9jMGNJSFpXTXcwSG9SWlBibz0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-widepoint-federal-ssp-trust-chain-2
  namespace: default
data:
  0-Federal_Common_Policy_CA_G2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGM1RDQ0E4V2dBd0lCQWdJVUllVzVvTXlWYmVKNHlnRXJxUDNGaXBpeisrb3dEUVlKS29aSWh2Y05BUUVNDQpCUUF3WERFTE1Ba0dBMVVFQmhNQ1ZWTXhHREFXQmdOVkJBb1REMVV1VXk0Z1IyOTJaWEp1YldWdWRERU5NQXNHDQpBMVVFQ3hNRVJsQkxTVEVrTUNJR0ExVUVBeE1iUm1Wa1pYSmhiQ0JEYjIxdGIyNGdVRzlzYVdONUlFTkJJRWN5DQpNQjRYRFRJd01UQXhOREV6TXpVeE1sb1hEVFF3TVRBeE5ERXpNelV4TWxvd1hERUxNQWtHQTFVRUJoTUNWVk14DQpHREFXQmdOVkJBb1REMVV1VXk0Z1IyOTJaWEp1YldWdWRERU5NQXNHQTFVRUN4TUVSbEJMU1RFa01DSUdBMVVFDQpBeE1iUm1Wa1pYSmhiQ0JEYjIxdGIyNGdVRzlzYVdONUlFTkJJRWN5TUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGDQpBQU9DQWc4QU1JSUNDZ0tDQWdFQTE5ZlRGekVtSVJnUUtrRnR5Nis5OXNSUmpDVFlCWWg3TGxvUnBDWnM0cmdwDQpCaysvNVA0YVpZZDV2MDFHWUJmT0t5d0dKeUZoNHhrMzMvUTR5QUNvT1QxdVpPbG9OcS9xaGhUMHI5MlVvZ0tmDQo3N241SmdNaHZnL2JUaFZCM2x4eGFoWlFNTTBZcVVoZzFydGFLUktzWG0wQXBsaGFsTlQ2YzNtQTNZRFN0NCs3DQo1aTEwNW9FM0pic0ZqRFk1RHRHTVlCOUpJaHhvYnRXVFNuaEw1RTVIek8wR1ZJOVV2aFdBUFZBaHhtOG9UNHd4DQpTT0lqWi9NeXdYZmxmQnJEa3RadTFQTnNKa2tZSnB2RmdEbVNGdUVQeml2Y09yeXRvUGlQZmdYTXFZL1A3ek80DQpvcExyaDJFVjV5QTRYWUVkb3lBMmRWRDhqbW0rTGs3emdSRmFoLzg0UDJndXhOdFdwWkF0UTlOc2FnNHc0RW10DQpScTgySkxxWlFseXJNYnZMdmhXRmVjRWt5ZkR6d0drRlJJT0JuMUliVWZLVHRONUdXcG5kbDhIQ1VQYlIyaTdoDQpwVjlDRmZrWFRnc0xHVHdNTlYyeFB6MnhUaHJMRHUwanJERyszL2s0MmpCN0tIM1NRc2U3MnlvNk15TkY0NnV1DQptTzd2T1JIbGhPVFZrV3l4b3RCVTMyN1haZnEzQk51cFVETDYrUjRkVUcrcFFBRFNzdFJKNjBnZVBwMElBdFFTDQpIWllkMWlSaVhLcFRMbDBrb2ZCMlkzTGdBRk5kWW1hSHJicmlkMGRsS0lzOVFpb0R3am0rd3JETEFtdVQ0YmpMDQpaZVBoYzNxdDh1YmpoWk4yTmF6KzRZUDUrbmZTUFBDbExpeU0vVVQyZWw3ZVk0bDZPYXFYTUlSZkp4TklId2NDDQpBd0VBQWFPQmxqQ0JrekFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIvd1FFQXdJQkJqQWRCZ05WDQpIUTRFRmdRVTlDZGNxY044Ui9UNnBxZXdXWmVxM1RVbUYrTXdVUVlJS3dZQkJRVUhBUXNFUlRCRE1FRUdDQ3NHDQpBUVVGQnpBRmhqVm9kSFJ3T2k4dmNtVndieTVtY0d0cExtZHZkaTltWTNCallTOWpZVU5sY25SelNYTnpkV1ZrDQpRbmxtWTNCallXY3lMbkEzWXpBTkJna3Foa2lHOXcwQkFRd0ZBQU9DQWdFQUFXUTNNQXp3enIzTzFSU0JrZzA2DQpOQ2o3ZUlMNy9JNWZ3VEJMaHBvTWhFMFhvYW9QVWllMGdxUm8zS08yTWh1QnRhY2p5NTVpaElZODdoU2hHb0tRDQpjYkExZmg3ZTRDbHk1UWtPWStLYlFzbHRrS3pnb2Qyem1QeUMwYkVPWUQyTE8xNDFIeWVEV2RRNmREWER6NmRyDQo4T2JudE9mTXpnZG83dm9kQ011S1U4K3lzVGR4UnhUQ2k2QVZ6M3VxZTVrK09iSllwQzBhWEhOTXkxT25GZ0w2DQpveE1lR01sU2VjVS9RVUFJZjBuY0R1cllGU2N0RndYaXRUQzBDcmNMTzkvQUdIcVRGU0h6VXJJbGJyZ2QvYUdPDQorRTNvM1FvVStUaENQUG51MUsyS1pMRzRweU1xZEJtNHk3clZHUFJpa0xtRmhJdi9iNmIyQ0w4eWlZTDArbUpEDQpjclRWczBQWWZBTHRReE1wU0E4bjA1M2dhamxQd2hHM081amNMOFN6cWxhR1BtR3FwbkVpOWFXQVlISlhUemJqDQp6R1VBYzJ1OCtLdzhYdjRKZmZoVldJeFZLSDROUzVQQ3RnWHd4aWZncm1QaTAvdVUxdzBjcmNsRXNTc3lhN0ZJDQpCVlJUVVJvU3d3ZGEyNXdJSVdQSWtRc1FLMXNuSnhnRXlVelhpMTBNVURSMFdTRHFRQWRoYk9MY21jeWhFRDVoDQpwaFlRbmY4c0Q4RnBvVURqb0xDUGtVL3l0ZlpvcGxtY0JNNFNRNEVqZ2p5azYzdk1xQkRjQ01YVEhjaUZUc1YyDQplK2FSZUx2SXZVNFltYUJRUWwzdkNGajFxTVBJa1JzVGJ5MUZmOGhSRFFHM2tIMHZlZmNWdGNpY3NkVThrVjJNDQplZS94Si9jMGNJSFpXTXcwSG9SWlBibz0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-widepoint-nfi
  namespace: default
data:
  0-WidePoint_NFI_Root_2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZ1VENDQTZHZ0F3SUJBZ0lVUDBvWTJtcDF1WGxOYkpoMXViMWJiZTRDaG5Rd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pERUxNQWtHQTFVRUJoTUNWVk14RWpBUUJnTlZCQW9UQ1ZkcFpHVlFiMmx1ZERFaU1DQUdBMVVFQ3hNWgpRMlZ5ZEdsbWFXTmhkR2x2YmlCQmRYUm9iM0pwZEdsbGN6RWRNQnNHQTFVRUF4TVVWMmxrWlZCdmFXNTBJRTVHClNTQlNiMjkwSURJd0hoY05NakF3TVRFMk1qQTBOek14V2hjTk5EVXdNVEE1TWpBME56TXhXakJrTVFzd0NRWUQKVlFRR0V3SlZVekVTTUJBR0ExVUVDaE1KVjJsa1pWQnZhVzUwTVNJd0lBWURWUVFMRXhsRFpYSjBhV1pwWTJGMAphVzl1SUVGMWRHaHZjbWwwYVdWek1SMHdHd1lEVlFRREV4UlhhV1JsVUc5cGJuUWdUa1pKSUZKdmIzUWdNakNDCkFpSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnSVBBRENDQWdvQ2dnSUJBTDBBY251bnFIUVNGVnBqa1ZoemMrakUKR0h3WkdUSytRU0oweklCeDBwZFZZVGswWVlhMmpxVHgrZU1aUDF0WEk1UDRpRnJXcjFDVFRZSU42Z2hEVWpOdgpvbk92bHVqbU9aTytjNi9zM1JkSWFVTTUzNDlhYzlYMFNjcU5saWszcGNUN1JRS1VDVFJSTXhTdW0vUUNnUTF6CmpEWmZmUlR5VStkWGkzQXdpOG1Ba3hESXZqWlNNbDR0UU56SjZUenBzcm4ySTZ3ODVSNjlHcU15RzVUdFFlYjkKaXdHekVuWWxsTHVlT1g2eUNCQlQ5QWNoUmwzSWZGOVpvazhHaC8veHl4dnlZM2R5N0RJL0pVdFBsbUlreHRmbQpHQXJmZjAzR2tpaWl3RXQ3b0M3eUNtM3JBYmVzdmpNd0hnNlF4cDk1em41ZEdDblRjWEgxbnVUVm9OQVFmczBFCnQrcFRueG15dDZWNTRzaSt0clZYRjJxOFMwWWZ0OWpwR3IrL3ErTEJLYnFXZ2R3bVBaUldGQ3o0VXVDSUFBcmoKVFlZcGRldmZvM1VMYzh4R3dxbGRCSVhXd3c0Z1BUa1VkbDJSWjJjMVM4K0I0VFNkNXkxaW83aWp3RTZtdHZyKwp0WHQzNkNuWmdtUVZUZEhXbjRTQ3N1bUNzcTcxNTd4d0lKdnE4QnZ4QWZZVnMrTmY3ZHZDNVZHVnZ0WHA3aDNVCmh4dm9aeDk4TFJUaEZiM3YyMXdLSnBvSUNLSzVZUk93Y0cvNXV0dnFxRTFoaWRWTExxWklEZXlMRWUzeCs3dHMKdFlLbUo5SGgvQVZSMHhkVUhEWXdTQXVMR3lzNEt1OWVNMU1qYURINDhFR2pBRFZiMUhOZFdrZ3p2L0tQTEVlTAo5T1RYTjNITEpIZEFOZnVZZ2oxekFnTUJBQUdqWXpCaE1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0h3WURWUjBqCkJCZ3dGb0FVblRtdFpyRHlvN1ovNEVCWmtybFJkVkdpaEQ0d0hRWURWUjBPQkJZRUZKMDVyV2F3OHFPMmYrQkEKV1pLNVVYVlJvb1ErTUE0R0ExVWREd0VCL3dRRUF3SUJoakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBZjBiKwpUZzB2azNac1k4RHVLNCtCNmxaRXUwbllFL3BSNGxQRFArNHZEMXVoV0ptZy9OZ1gvNmwyTHRRMmw2VEs1UnVvClpWT2NQVnl3WlljYjJCL29yV0ZXekNSQXVlWUVWNHdhZ2EzRTBmZStsc2ZRU2wvT3hnS3RSRWtsREk0TGYveWkKOXpSYlFFRDYzMW5XMHExSXF5RmdDT1A0dnFrcFVnOExVWTlJM08yclFYRG5lcnZtbTNjWHlWc1hvRGJoYk1IegpraTdUSGhqS1hDaXBvVm8yR0hGNEpZSStBcUNkNHVTWWJKaGZtWG1GQ3UvUnJieUdGOC80RUZFTVk4UTEwY1BxCnVhMVhMcUlnYXhiYy9kclFSRDBISkV3MlBZZlJaZFNveURCV0dKY1hJdGozS1BaMUpTL2hIVEFSSndScHpKL0IKTDRqVjYya1hHUkhyWVhWTkhadzFXV3FSdGFVWHE5RGxaRyt2d3AvZ3JjL0RlR1lGczIyc1dEYUpjYmpwbU9acgpRUGQ2Y2ZFV1Y3Z0xBNnB2bExMSkt2U2pOSmZrSFZnQTZDSHR3WG5RYkNwelIvbVVRSW8xR2YyUUZnbklyNVVOClZjZDJ6c2Mzd3FBamNqUDg1eEdTT1lGSUhrcUdXeXphdW5RZzdrREtjM0hNSkhGdjR5T0I4VEZPNXhzRWdscmUKVFlHVksvWUQxNmJPYkRTMEV0Z1lPOXVhMEdIYXBsVUo2WFN4YkJaQ3dabDN3RUp3a3hwcUttNWI5MThTeStySQp3TjNqVk1JSS9qZGZDVHdIMmh2bDIrS05scGtlY2piOFZhVFRBWkZqcHF2K1pkWEFkeFFIQklzNGRJbVFXd3dECjFRQnk4ZzhnNzBrUnJIMFN0dWJCalpabHl5ZXNCUjRCeldId21hVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  1-ORC_NFI_CA_3.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZuekNDQTRlZ0F3SUJBZ0lVZUF5TTM0MXhIWHZXTmNhZzBuN1NvMTZlYi9Bd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pERUxNQWtHQTFVRUJoTUNWVk14RWpBUUJnTlZCQW9UQ1ZkcFpHVlFiMmx1ZERFaU1DQUdBMVVFQ3hNWgpRMlZ5ZEdsbWFXTmhkR2x2YmlCQmRYUm9iM0pwZEdsbGN6RWRNQnNHQTFVRUF4TVVWMmxrWlZCdmFXNTBJRTVHClNTQlNiMjkwSURJd0hoY05NakF3TWpBNE1qSXlNelE0V2hjTk1qTXdOVEUxTVRRd01EQXdXakEyTVFzd0NRWUQKVlFRR0V3SlZVekVRTUE0R0ExVUVDaE1IVDFKRElGQkxTVEVWTUJNR0ExVUVBeE1NVDFKRElFNUdTU0JEUVNBegpNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXg4Q0dKNlVzekJqWmhQRHp5OFdFCi9jQVVGL29XL2R2Q2c1cVFHanJ2NTBaUVQ2MFJrNStlcHgyMmd3MitwK2xJaS9wUHBtRjRja09DUEd4WHJxRVkKTW1vZjN4M2c0SjZtUDRwZTNjeEY5M3Q5YWJVbml2TFFCZnhqVVNjVmhIcXhOS2dCQ2NraDMzcVhCYmRYT2FMaQpCenk1QjlwYk1USEVycmpnQWxIbWNaMlVTUFRSaDFlYTIvN2hqcHZTbVNheUpnK2I4Qkd3OERXK1QvV0RJdFJzClI2OTlnZmhPcEpLalZhRGlPV3h1dTN4VmduUzNIWE1kTXBoQnd6ZTRzOGVrNXFURm5JbkRkZThQakJYMVlUeFUKTHo5SnJ3OFM0ejFzTFpNeC80ZVN5aGpwa3pheTR3NklRRGIvMy9jUStWWWhPYkJmcUVxRUhuY3pHU05vTDk3VApGUUlEQVFBQm80SUJkVENDQVhFd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZkJnTlZIU01FR0RBV2dCU2RPYTFtCnNQS2p0bi9nUUZtU3VWRjFVYUtFUGpCVEJnZ3JCZ0VGQlFjQkFRUkhNRVV3UXdZSUt3WUJCUVVITUFLR04yaDAKZEhBNkx5OWpjbXd0YzJWeWRtVnlMbTl5WXk1amIyMHZZMkZEWlhKMGN5OVhTVVJGVUU5SlRsUk9Sa2xTVDA5VQpNaTV3TjJNd2NnWURWUjBnQkdzd2FUQU5CZ3NyQmdFRUFaNVNBUUVCQXpBTkJnc3JCZ0VFQVo1U0FRRUJEREFOCkJnc3JCZ0VFQVo1U0FRRUJFakFOQmdzckJnRUVBWjVTQVFFQkV6QU5CZ3NyQmdFRUFaNVNBUUVCRkRBTkJnc3IKQmdFRUFaNVNBUUVCSlRBTkJnc3JCZ0VFQVo1U0FRRUJKakJGQmdOVkhSOEVQakE4TURxZ09LQTJoalJvZEhSdwpPaTh2WTNKc0xYTmxjblpsY2k1dmNtTXVZMjl0TDBOU1RITXZWMGxFUlZCUFNVNVVUa1pKVWs5UFZESXVZM0pzCk1CMEdBMVVkRGdRV0JCVFpIeXl6aHlsZEIvNUphQzJBOHQxbTlrK2toakFPQmdOVkhROEJBZjhFQkFNQ0FRWXcKRFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUZaREVMMzA2eE5SUFVSNnNYaXdvQlN6VDdheG43L3hQWWNDMnBlcQpIb0xlRSszN21rWk5IYmdXRzkzeGRobGg5RGljSDRyYjA1aDhWc1JpQmo2S3U4WGhnWVU4bGhKeEJyQlVQT2NCCmZKL3BtbHNqdnRSS3k1dnBmWEZKSmdwZlQ3YVJ5VXBRRVBsQnB3by9FSHZ1SXFNN2hkUlJNeTgyNGI5L3NZL0EKbXcwbk9WTW1xZ0c1ZHFqU2RKNDQ1RXVkek9oeTJlei9SendjVGZSeGhNV25wYVBiYmRRUmM0QnByVlpPWnZRbQo1NE5LbTRZVUR0bUhaekJldmNadStpTEdWSkZIaUU5aFBQVy9venhTK1JqUU1jWWJWdE1tR1JOZ3ozbzVqaEJhCkV4a0JFTUppdVkwaitXOWhPUlhkdGlqeVNkN2JETzJmTkdObFZ4TGRlM3FZUTEwNjJhRkltMVpBVk5pbEVuek4KeTJmTmFkU1N1TWtmSS9jdThpMWY3NHFuZEtjNVJzUXVrdEF2a2hBc1hpWDVuM0k5SE1JYitzdGFpSFF0SURlQQpiSHc3VFRITjlJYks3NE5XUG91bjJTcEU0NGlwTndmWjk3SmYvbGFhOHh6RWxHYjNGRENlQmpaRG1YZG1kQnJOCjlVS0VJSTA2OGZ2UVM3VEVCcjZLZi9jWnVadHdvdkNSUGdTVTg1UEJsa2pEQW1VN0E2ME1sSDRER1ZuaVJqTjIKRzcrQUpQMElibUlaR2d1eXFtcnVjRXBuYlUrNEhMbWl2MWkrT1lQNVJ3bmJtNVdmTWNtYnRzVC9neE9YelRMZAo2dldVZXRWVXJIR01iOXdTbkVFMnAycHBUNHdvSlZxT1FCeVFoR2NGTmROT3BqNnFzNnVLNzdZa1NHNDB6VDU0CjVCYU8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  1-WidePoint_NFI_CA_5.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGcFRDQ0E0MmdBd0lCQWdJVVp4czFXam0zTDkzMmR5UHhRdTF5YlU0REI3UXdEUVlKS29aSWh2Y05BUUVMDQpCUUF3WkRFTE1Ba0dBMVVFQmhNQ1ZWTXhFakFRQmdOVkJBb1RDVmRwWkdWUWIybHVkREVpTUNBR0ExVUVDeE1aDQpRMlZ5ZEdsbWFXTmhkR2x2YmlCQmRYUm9iM0pwZEdsbGN6RWRNQnNHQTFVRUF4TVVWMmxrWlZCdmFXNTBJRTVHDQpTU0JTYjI5MElESXdIaGNOTWpBd05ERTNNVGt5T1RNNFdoY05NekF3TkRFNE1Ua3lPVE00V2pBOE1Rc3dDUVlEDQpWUVFHRXdKVlV6RVFNQTRHQTFVRUNoTUhUMUpESUZCTFNURWJNQmtHQTFVRUF4TVNWMmxrWlZCdmFXNTBJRTVHDQpTU0JEUVNBMU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdFd1S0JJTWRmYWNpDQpDYlhwSk1Ec2ZLdS95L2JoSGlrN0hzZklZY1d2RXFMZ0tSNyszcHppRXh6TWVNWnF0bmZSYWxRNytWV2ZXMVZjDQpKcDBXV05aNVBjY1ZVemovWDl5dHp4YzJ4ajZJaWhGUjNLV2kvQlFhSnB3R05WNTNIb3h6azhhdnpJVkxncXRMDQoxNWVEWm44cXJOb1laQkU4N3Rib0p0My9CZHJsTnVvS29OcjY3YzduTXk4dEoyQ3pQckczdUxreXJ5WTFMNW9HDQprV0RaNXViNTlEbW5kWGd0dXJORzVOSFZoZGVnaHNPK2g4NjlWWkRHQ29QaTNwYSttQXlrYUdtWkdXcGNudnhvDQpVUmhUT2NvdGtpT1RNeVprQmh4STBUbEhLbDZOUUNacE9sQjZEL0dGVjhMMW8xSDc1bUVBN0tvSW5aMEUwc0tGDQpDeFBGOTRuQU9RSURBUUFCbzRJQmRUQ0NBWEV3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFmQmdOVkhTTUVHREFXDQpnQlNkT2ExbXNQS2p0bi9nUUZtU3VWRjFVYUtFUGpCVEJnZ3JCZ0VGQlFjQkFRUkhNRVV3UXdZSUt3WUJCUVVIDQpNQUtHTjJoMGRIQTZMeTlqY213dGMyVnlkbVZ5TG05eVl5NWpiMjB2WTJGRFpYSjBjeTlYU1VSRlVFOUpUbFJPDQpSa2xTVDA5VU1pNXdOMk13Y2dZRFZSMGdCR3N3YVRBTkJnc3JCZ0VFQVo1U0FRRUJBekFOQmdzckJnRUVBWjVTDQpBUUVCRERBTkJnc3JCZ0VFQVo1U0FRRUJFakFOQmdzckJnRUVBWjVTQVFFQkV6QU5CZ3NyQmdFRUFaNVNBUUVCDQpGREFOQmdzckJnRUVBWjVTQVFFQkpUQU5CZ3NyQmdFRUFaNVNBUUVCSmpCRkJnTlZIUjhFUGpBOE1EcWdPS0EyDQpoalJvZEhSd09pOHZZM0pzTFhObGNuWmxjaTV2Y21NdVkyOXRMME5TVEhNdlYwbEVSVkJQU1U1VVRrWkpVazlQDQpWREl1WTNKc01CMEdBMVVkRGdRV0JCUUYrMUk0Z3JRL0FNUVpEc0VxLzhSUGJnNitaREFPQmdOVkhROEJBZjhFDQpCQU1DQVFZd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFHZVdtdVdHeUFRSWNIY1RmZjg1S05QS1dYcVdibVpNDQo1RXBzQzFsV1ZXMUt1aWRIZjJ4UDJLTHNsdXNqWU91K1AwNHpjd0wzUTFmblBRRW95SmFHOVE4dWUyd0lvaDllDQpXbTJScFVoVDRKaC9FbFJBamVyVHpPZWN5VjFLZlJjdDhDemR1SWVtTXBaTGtEdlFtTVFKdEc3cFB1MHQwem1lDQpxKzlhY3RNbFBQSVYwZTh4K1I3UUlUSldyQVc1QjlXYzVEUUk5VmhIcmRna1hsZU1xaVdnKytaL2RCQmFDd1pzDQpWUk91OWxxZ09ON2drb0dpZ1VTZ1ArMCtXSHNJamxVWGRadG1oRmxRbjl6YWhoSE1qTEkrK3dxMTU1NDNBeTlVDQpaSmRXUGxvT004SXlNSVdIeTR2bDhzeUMzMm9PYjZRb0R1UHRCN2RXcXBiY1gwTmhaWFJJRG5GMkRFSHlhajgvDQptU3FySHJmamFtQ0dNUXVXa0hiUjY4TkN4WU45RitGNnNHTnZHL3hoUCtLbGpHRVZONVdSaHdVNmhRd1BjUFEzDQp2TUZOMmJvSitTRzhudGgraTVQN0szczdSSE16SUV4Y1B5cnRRQXVhTXZmR1AyajlBSVRUdXJHOXNTRVdHL1RXDQpBMlFBQVIxM1JILzlOTXBlTk1HTEhncDQ5bk5GSWxhQkZwcmIwcjVUcVRaTUZBYzM0VVZQQTcvdXdweU1OM2ZlDQpQczJMeStnVG83RDRhZE1nVFljbGllYmlycGtBVXNBYXE1WmR3bmdtQk5QZ3loblZYVndTWjFOWGpuUEpxT2E0DQpMbEJ0czVXNFJvb05QU09vUXNoQUpIVW52SVBLUjRXaHdVbFRZb1k5eFBlZTVSODZqempueEJkaFJadEtVUUtGDQp0NmNvNHNuK1VsWVINCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
  1-WidePoint_ORC_NFI_4.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlIZ3pDQ0JXdWdBd0lCQWdJVU5ZRjFDOWJpWjFlOHVlQ2tVVDJvU1VaWWZyOHdEUVlKS29aSWh2Y05BUUVMDQpCUUF3WkRFTE1Ba0dBMVVFQmhNQ1ZWTXhFakFRQmdOVkJBb1RDVmRwWkdWUWIybHVkREVpTUNBR0ExVUVDeE1aDQpRMlZ5ZEdsbWFXTmhkR2x2YmlCQmRYUm9iM0pwZEdsbGN6RWRNQnNHQTFVRUF4TVVWMmxrWlZCdmFXNTBJRTVHDQpTU0JTYjI5MElESXdIaGNOTWpBd01qRTRNVGt6TXpRd1doY05NekF3TWpFNE1Ua3pNelF3V2pCak1Rc3dDUVlEDQpWUVFHRXdKVlV6RVNNQkFHQTFVRUNoTUpWMmxrWlZCdmFXNTBNU0l3SUFZRFZRUUxFeGxEWlhKMGFXWnBZMkYwDQphVzl1SUVGMWRHaHZjbWwwYVdWek1Sd3dHZ1lEVlFRREV4TlhhV1JsVUc5cGJuUWdUMUpESUU1R1NTQTBNSUlDDQpJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBdnk1aGJyUllFUzZOTit5UVkyWVpzVHNrDQpKMmN3dmx1OXBUc0RhejJEK1FmTzNlYThsVVJtQjJ5Yjdxa3VGTmRPeXltRVQ5TVNmMC90cjhLcGdsUzRyckx0DQpMbGFoOElDMjgrYThhMUwwVG5UaVVVZmZCUjZETHNnTjlwbU10bC9BNWlOaE4wWEx6M2FLSm1FNzZlMUUvdTBoDQpyZGpNeDNqV1IzZlhoNU0xcSsxYlFXU0czaHVZZWFFbmoyMUhxL2VxaytoNU9iOVpVT0lwQ3Fnd1hBYU4vZzR2DQpGc1pNUDZOSVFiT1p3V1RiV0tnSUJTMU5rdWljclJHd002R0xITGZab3hKZHZYVnlRRDBYQVdxQVdSR3ZwUnJWDQpndWhsT0VJZmdXRWZpWXBDWDh6WDRUOHZab21zcXlFV1EwZEdqdTN1MVlrS2VWMERRVlJLbDY2eDFUMmJmVGplDQpibmRsVWR4cG5KbHplcUZFK2pZKzgyOUVkWlQzcXFvN2lScGxiMStreHBoYW14azBNQUhuNEE2c3kwaTNJTDJ1DQpWdDd4OG5tZmhwL3lETmNzQ0FQSWd2R0lmR25ya2J6MVk5Skg4VnJFSXV3YUxjMnFzWElxQlhUaXhxS0tvQjlLDQpHeDh5ZE9LejBJR0tHR29qZ3hWd00zMS9DMzZDNlE4clpuUUhTdWxBc0dycHc4UWgzaDkrOE11dGpWbWsySFZXDQp4dklwKzhiL3diOHRkcVNDZ1YxVlc5M0NxckJubEVxbkxmYWpRa0RkeG9kQTlReTVjelk2eUdkWXRIZkc4SThuDQovRUc4UWdvSXJBOXdlbkpFRTR0OTZJcFNQK0N2Q3RkRlkrZEl3N0c5a0pxRFozdGxBOXR4WVh6OS9MZjlxOFdHDQp3eW5lQys2cjlGOU5OTlNlWUM4Q0F3RUFBYU9DQWl3d2dnSW9NQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdId1lEDQpWUjBqQkJnd0ZvQVVuVG10WnJEeW83Wi80RUJaa3JsUmRWR2loRDR3VXdZSUt3WUJCUVVIQVFFRVJ6QkZNRU1HDQpDQ3NHQVFVRkJ6QUNoamRvZEhSd09pOHZZM0pzTFhObGNuWmxjaTV2Y21NdVkyOXRMMk5oUTJWeWRITXZWMGxFDQpSVkJQU1U1VVRrWkpVazlQVkRJdWNEZGpNSUcwQmdOVkhSNEJBZjhFZ2Frd2dhYWdnYU13SUtRZU1Cd3hDekFKDQpCZ05WQkFZVEFsVlRNUTB3Q3dZRFZRUUtEQVJZVkdWak1DU2tJakFnTVFzd0NRWURWUVFHRXdKVlV6RVJNQThHDQpBMVVFQ2d3SVFYVjBhR1Z1ZEZnd0xhUXJNQ2t4Q3pBSkJnTlZCQVlUQWxWVE1Sb3dHQVlEVlFRS0RCRllWR1ZqDQpJRWx1WTI5eWNHOXlZWFJsWkRBcXBDZ3dKakVMTUFrR0ExVUVCaE1DVlZNeEZ6QVZCZ05WQkFvTURsaFVaV01nDQpVRWxXTFVrZ1UxTlFNSElHQTFVZElBUnJNR2t3RFFZTEt3WUJCQUdlVWdFQkFRTXdEUVlMS3dZQkJBR2VVZ0VCDQpBUXd3RFFZTEt3WUJCQUdlVWdFQkFSSXdEUVlMS3dZQkJBR2VVZ0VCQVJNd0RRWUxLd1lCQkFHZVVnRUJBUlF3DQpEUVlMS3dZQkJBR2VVZ0VCQVNVd0RRWUxLd1lCQkFHZVVnRUJBU1l3UlFZRFZSMGZCRDR3UERBNm9EaWdOb1kwDQphSFIwY0RvdkwyTnliQzF6WlhKMlpYSXViM0pqTG1OdmJTOURVa3h6TDFkSlJFVlFUMGxPVkU1R1NWSlBUMVF5DQpMbU55YkRBZEJnTlZIUTRFRmdRVUV1S3I1RE5yTUg4KzZtOCtBdFlldkdBcjhmVXdEZ1lEVlIwUEFRSC9CQVFEDQpBZ0VHTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFDek1uSVpqOWI1amE3T0VTTXpiOFhRQ1ZuK25VRjBBQk5GDQpHcktObVdvbjIvN0xMZTR0d3lDSlhHeXp2TVRIUHhsanFqMHlpTnJRZUZnZlFPV0hoQ2QyQmZHbVVuREVBOUxJDQozeDR6b2ZXU3ZWNURhVUlmWU5zRVMxbkVlOHY5K3pWQlFrTHlySklObHBHY1B0U3hEOTcxOGJFWGJ1cXBIOTgwDQpnWmFib1c2NlhiMDdjaWtlUTU0UXhWK0IyeHc4YTVSRlQzUFB2ZXE0MVYxRzl6amNZYTJrRk5ldHRwSGdVWlRKDQpqN1hhZHMwN1dna1J4anVyNFkraFZKNlNRNnppL1A4eGl6alZJc1JWbHBnRTJ2Y1FUUHBRWkZNSUErRmdLUGpuDQptMFdDaFV2Qmd0QXB5WDNXektQKzhIM20vdSs0NFBLZVh2U3FYUWxjc29wbndQZWtTdDF1VFVPUTRRYU9NQno3DQp2UGlWZTVCb0NRTmh5SzJVWHh2aU1VZGNpVmpYcU9idndPOTl6SnFvUUpPMG40Wm5lY1NZaEpLaGRnUjdNQW5wDQpRVDdTUEMvWGdkRDVRNU9QY2NpRmlTb3lzOFNzNVcrdlUyWjgzQTV3NVV5dGJ6RTM4YThXaVZyOGpOVEgxcUVzDQptajlTZkorZTNtL3BZUUw4eVNHTCtXRFFNbkVDUS9xcmxsbEtJK0xSN2ZYdTRPT1BISk9PODB3TldPRU9aOTYvDQowenRXUWhOc3ZEd2k3NHBkOUhqRlNsSmFJa1Fyb1QwT1BObWR1ZFVDRFVBa2g2TmdOK2VWSDhJTXdvQTB0UzdoDQpNTGRJYVlRWklMTWNJSng2NkY4Qmo5aXd6VytzZmpvc2REZEtybnlQRmZ2SlgxUXJicGN3Z0N2dEtiNFF1aFJYDQptRTJGVlpyNDl3PT0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-dod-intermediate-and-issuing-ca-certs
  namespace: default
data:
  1-DOD_DERILITY_CA-1.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVzRENDQTVpZ0F3SUJBZ0lDQk1Jd0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3Q2dZRFZRUUwNCkV3TlFTMGt4RmpBVUJnTlZCQU1URFVSdlJDQlNiMjkwSUVOQklETXdIaGNOTWpFd01URTVNVFExTlRNM1doY04NCk1qY3dNVEl3TVRRMU5UTTNXakJmTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUTGlCSGIzWmwNCmNtNXRaVzUwTVF3d0NnWURWUVFMRXdORWIwUXhEREFLQmdOVkJBc1RBMUJMU1RFYU1CZ0dBMVVFQXhNUlJFOUUNCklFUkZVa2xNU1ZSWklFTkJMVEV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFUNCitvdXg4RjFrMzdEOUhTdE1tOUkrcjZFVWo4cXNzcmN2Q3dBendBTVg2ZEMyOUt6aWtDNWdiellDQjNZNUJmK2INCnVpK21CZE5iem83a2dEcStWQklabjRXcU02dGhsYjdKUWd2bGVqdDJlSkJ5ZlZjVm9LZllmMjZTYTYycWJLY2QNClEzTzJTOHBDK0hkYndvMmRidWJOT3VpNUJMeFcvZ3pXNnBTL1ZrSmd3bjFJZFQzV3JIVEs0d3NINWg3ajM3Mk8NCmtFNUQ1WGJrTS9hU2ppV29ieUduUDRhSGhJTXVyVjdoZVozYzBTSzJBR3J0V2ZhTTZKaks0VVc4YXQwcDNrV3INCjJjNWtOb1hLZTdBTUFXRklYbVlIelQ5V01ZaVF3bjJlQncya3Znd1hKc2FRM0tIZWE5Kzd4YnR2NkVaTGYvdWYNCm5kNEF5eGh5KzNJQmlFM2J6Y1BuQWdNQkFBR2pnZ0Y0TUlJQmREQWZCZ05WSFNNRUdEQVdnQlJzaXBTaWQ3R0ENCmNoMkJlaGFxOHR6T1p1NUZ3REFkQmdOVkhRNEVGZ1FVQ0lrNnpoTzhIUEk2TFpneEM2bitPSG45Z2lJd0RnWUQNClZSMFBBUUgvQkFRREFnR0dNRmtHQTFVZElBUlNNRkF3Q3dZSllJWklBV1VDQVFza01Bc0dDV0NHU0FGbEFnRUwNCkp6QUxCZ2xnaGtnQlpRSUJDeW93Q3dZSllJWklBV1VDQVFzN01Bd0dDbUNHU0FGbEF3SUJBeWd3REFZS1lJWkkNCkFXVURBZ0VES1RBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1Bd0dBMVVkSkFRRk1BT0FBUUF3TndZRFZSMGYNCkJEQXdMakFzb0NxZ0tJWW1hSFIwY0RvdkwyTnliQzVrYVhOaExtMXBiQzlqY213dlJFOUVVazlQVkVOQk15NWoNCmNtd3diQVlJS3dZQkJRVUhBUUVFWURCZU1Eb0dDQ3NHQVFVRkJ6QUNoaTVvZEhSd09pOHZZM0pzTG1ScGMyRXUNCmJXbHNMMmx6YzNWbFpIUnZMMFJQUkZKUFQxUkRRVE5mU1ZRdWNEZGpNQ0FHQ0NzR0FRVUZCekFCaGhSb2RIUncNCk9pOHZiMk56Y0M1a2FYTmhMbTFwYkRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWtBakxjRm1OZDZBUHBaWGkNCnZZdm8vL0pvRm82ODBlTGMyZENZT3g0OFZIekkxTTAwbU1vdjY5dWl0Q0JSWlNxVmVJOU5tbElHUUJoTEFmZWENClF4U2QzWHhJZGJVc1l1bDUvdnlsYlVacEtUQlEwM0E4dDc2cE90UFB6a3NHOGFCZll4K1N6WHdxenBBYnozOTYNCkJWdFJFclg1eURPUEszK0xCeStFcSswTmg2aDBDa1BtU0tCTUFITFZaTDJOcWU1TUlSRm4vRmxLSkVidHBURXENCkZFTHM4S3RxTTZYNXVMS0dQVWhqR09lTEJpanpZeEYrbmQxR005a1JpeXc1djdqMDZqclZUdUlWd2NTUVBjc1gNCnBITnRielcvVHgyZFJmSG4wdzhXa1NRZER2d1NUdW8xcFdPWUJvNnlKaFJ3U20zLzRybWF3eGxwM3A4bFh1aUINClNsVUR4QT09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  1-DOD_EMAIL_CA-49.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV2RENDQTZTZ0F3SUJBZ0lDQVNNd0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgKR0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVNTUFvR0ExVUVDeE1EUkc5RU1Rd3dDZ1lEVlFRTApFd05RUzBreEZqQVVCZ05WQkFNVERVUnZSQ0JTYjI5MElFTkJJRE13SGhjTk1UWXhNVEl5TVRNME16RTBXaGNOCk1qSXhNVEl6TVRNME16RTBXakJkTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNnd1BWUzVUTGlCSGIzWmwKY201dFpXNTBNUXd3Q2dZRFZRUUxEQU5FYjBReEREQUtCZ05WQkFzTUExQkxTVEVZTUJZR0ExVUVBd3dQUkU5RQpJRVZOUVVsTUlFTkJMVFE1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1czIzCnh0T0FiZkx4UGgrT1M4VTNOL2M3WnNuVE5aR2tpNktqbkVnNEVWSG5VS3dCQjFwV0xlUWJaVFZwMDFkSFdseFIKS3l2QU5uays4b3pNOHR1Y293eDBxNmZvNUovWXRlRDlxSEZBb1dqSlFwUkI2SHZuMnZ2SHZVYnU3aUFZNVBlbAowQjZBME5OL2xLVzI2dFRsaW02TmtWMU11Q2N2cENHcndIMGYyVE9DemtEZjdJUHFRRHZMV09qUFFQOW5tTk1HCm5TK3FDdkY1RjBpR0ZYVEgxTkRlSThFUHZLTUJRRStMZ0o0UEFGOGVGZERvMG1ERTZpTGZQQUlYQnpmWVVkRmsKTVMzZVZwSk9XUHpPRVllUkxjV1FrT1J2Y3pmeE4wb2J4U0gzVEdvQkxCM3ViRUxPb2lxZ3NURjdyTEtFMUt5egpXcmFvMTV1b1lmMjlPOWphdFFJREFRQUJvNElCaGpDQ0FZSXdId1lEVlIwakJCZ3dGb0FVYklxVW9uZXhnSElkCmdYb1dxdkxjem1idVJjQXdIUVlEVlIwT0JCWUVGR2xFSHhxVlRxVWFmNGc2ekhzU09Td2Z6eG94TUE0R0ExVWQKRHdFQi93UUVBd0lCaGpCbkJnTlZIU0FFWURCZU1Bc0dDV0NHU0FGbEFnRUxKREFMQmdsZ2hrZ0JaUUlCQ3ljdwpDd1lKWUlaSUFXVUNBUXNxTUFzR0NXQ0dTQUZsQWdFTE96QU1CZ3BnaGtnQlpRTUNBUU1OTUF3R0NtQ0dTQUZsCkF3SUJBeEV3REFZS1lJWklBV1VEQWdFREp6QVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQXdHQTFVZEpBUUYKTUFPQUFRQXdOd1lEVlIwZkJEQXdMakFzb0NxZ0tJWW1hSFIwY0RvdkwyTnliQzVrYVhOaExtMXBiQzlqY213dgpSRTlFVWs5UFZFTkJNeTVqY213d2JBWUlLd1lCQlFVSEFRRUVZREJlTURvR0NDc0dBUVVGQnpBQ2hpNW9kSFJ3Ck9pOHZZM0pzTG1ScGMyRXViV2xzTDJsemMzVmxaSFJ2TDBSUFJGSlBUMVJEUVROZlNWUXVjRGRqTUNBR0NDc0cKQVFVRkJ6QUJoaFJvZEhSd09pOHZiMk56Y0M1a2FYTmhMbTFwYkRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQQpYRE5rYUQyR3dlNFpvV2tsd3ZBdnZlb09ZSzVzOGZKYmpaT2pJMlYxdFpqSVA1ZWR3OFlTdkxER1Rxc2FEbGFvCjI4aENWaG9PVTArVjIzNHAwQ0FHS05LSUQ2V0NSNDZzN3VBQUxhYVdmZDRhSER6ZjIwcVlzbk1ybDBlS0N2NkYKc1V0S0JrSVlKQmp4cG9hSXB1ZFJDblNtUWt4d2VLekNHQ3RqV0NUMk1HU0pybzJRMGVRV1REeG5KWDkvdjh6NwpkWjhkZFpPMXpnb1UxeG5BeDlMeGRyVmw2SDJWY0IxN3o2dDJkNVRxU0xNL09udVNIVDdMV3FZYlZKRVJmMzhEClUwV1NRN1ZPcDJ4MVNrSW5KcXBld3ZpKzBybC95aDk3VW9EWnVTL0dVa1ZJTUZicEprYmNhZGlFR0JJTkVyUmwKUjV2UVpEZXNCcEdxVXhOWXVJSUpiQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  1-DOD_EMAIL_CA-50.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV2RENDQTZTZ0F3SUJBZ0lDQVNRd0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgKR0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVNTUFvR0ExVUVDeE1EUkc5RU1Rd3dDZ1lEVlFRTApFd05RUzBreEZqQVVCZ05WQkFNVERVUnZSQ0JTYjI5MElFTkJJRE13SGhjTk1UWXhNVEl5TVRNME5UQXdXaGNOCk1qSXhNVEl6TVRNME5UQXdXakJkTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNnd1BWUzVUTGlCSGIzWmwKY201dFpXNTBNUXd3Q2dZRFZRUUxEQU5FYjBReEREQUtCZ05WQkFzTUExQkxTVEVZTUJZR0ExVUVBd3dQUkU5RQpJRVZOUVVsTUlFTkJMVFV3TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFvclU1CmZ3TUtYS3dLNFNydHRvenZXYjhaeDlnKzdwR3J6RCtjYmFaYklTclR2TlRpOU1oRFlBU01vMjNuekcvU2hIUU0KYzBxQ2MxMEFWVXFwQWZ3UmhtOUZicGhEM3IzMFNXS1FzcktlT2JCVzYzaU1lQjZnZmhnLyt6U2N2a0p4bHFqNgp4NWNIZ2xNQ0ZRZmRxamdtanRjdVdJR3I3Y0RmMVdRSkxHZkN6NmlsS0gvSDJubzBhM0F5b0ZFQWdsclV5aEM1Cm4wSVZzbXlyV1k0SHk5QS8weGU4NGhsKzY4Y0pmQjRWRCs4QStZclVxRWdzcGlxem9jdnpjdU4vR05kZUQ5THcKWFBxeWxxbkY4U04wSFlvSG1qYmltc2NJbjg2d0N4QVJPMHNpV1o3aFN0cmNia2IrY2dGb1k1YVNjZGxkVWtuaQpZSTJjbVJ5MEM1anYrd0FmWHdJREFRQUJvNElCaGpDQ0FZSXdId1lEVlIwakJCZ3dGb0FVYklxVW9uZXhnSElkCmdYb1dxdkxjem1idVJjQXdIUVlEVlIwT0JCWUVGR1VLZTEwbUd6REtMZHo4MW5QSEhzRi9CSXpJTUE0R0ExVWQKRHdFQi93UUVBd0lCaGpCbkJnTlZIU0FFWURCZU1Bc0dDV0NHU0FGbEFnRUxKREFMQmdsZ2hrZ0JaUUlCQ3ljdwpDd1lKWUlaSUFXVUNBUXNxTUFzR0NXQ0dTQUZsQWdFTE96QU1CZ3BnaGtnQlpRTUNBUU1OTUF3R0NtQ0dTQUZsCkF3SUJBeEV3REFZS1lJWklBV1VEQWdFREp6QVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQXdHQTFVZEpBUUYKTUFPQUFRQXdOd1lEVlIwZkJEQXdMakFzb0NxZ0tJWW1hSFIwY0RvdkwyTnliQzVrYVhOaExtMXBiQzlqY213dgpSRTlFVWs5UFZFTkJNeTVqY213d2JBWUlLd1lCQlFVSEFRRUVZREJlTURvR0NDc0dBUVVGQnpBQ2hpNW9kSFJ3Ck9pOHZZM0pzTG1ScGMyRXViV2xzTDJsemMzVmxaSFJ2TDBSUFJGSlBUMVJEUVROZlNWUXVjRGRqTUNBR0NDc0cKQVFVRkJ6QUJoaFJvZEhSd09pOHZiMk56Y0M1a2FYTmhMbTFwYkRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQQpWbkxLd1JkWUJhUG5FT05KblRwSG9DNHpuSVFNSEJzRXBRYlI4UDVqNDlJWHRIUmpDcGw1UEtSSXd1QWMrRmYzCml4TTNqdi9HK0xCaTI2RzBaTkdaNGlJMTFySjNUTHhVcUhUMTIvV1hUdVM5MWplUEEvZjNXSUhrR0JFRmVScysKd2lST1hTQXZleU1BdDFUaEs5QmlsN0JZbExtcGdmY2k3ZWlLSEM2T2xBN1ZabzRPclMwM1ZaVGxhYUJhVTVUZQordFg4WFlRN0tsbGg5THJlWFoyQ2tzMTRvTkJsUzR2ek9jWk9wdzFiYW1hRWJJQTEzSXNHeVkva0Y3THFTUFcyCmI3Snk2MjhPYkxlVTNhKzBsbStuSWtqSDI1RkR2dGZ4RDkrMnFRSEVwUmFSY2xza3dJR1RtQS9UZy9ZcnJTMloKYW05UkQrNkUvdHNnSUlsUUUwOU5FQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  1-DOD_EMAIL_CA-51.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV2RENDQTZTZ0F3SUJBZ0lDQVNVd0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgKR0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVNTUFvR0ExVUVDeE1EUkc5RU1Rd3dDZ1lEVlFRTApFd05RUzBreEZqQVVCZ05WQkFNVERVUnZSQ0JTYjI5MElFTkJJRE13SGhjTk1UWXhNVEl5TVRNME5qUTVXaGNOCk1qSXhNVEl6TVRNME5qUTVXakJkTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNnd1BWUzVUTGlCSGIzWmwKY201dFpXNTBNUXd3Q2dZRFZRUUxEQU5FYjBReEREQUtCZ05WQkFzTUExQkxTVEVZTUJZR0ExVUVBd3dQUkU5RQpJRVZOUVVsTUlFTkJMVFV4TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFudzdQClRhajVVR1NNaTh3aHhHcFBzb0NoR01qVlFSazFGenA5Si9tUGp4L29YYzJNd01haEszeHBFM1lCODZxL1NlSDEKQ3Y1aGM5UGE5OUh0U0YvUmFIQW8zZnJGb1BuUk5vUERMajZpaFBHbUVXd01LeXdVZ09DblRRY0dTbE5xUjBlcwp0WXJNVHh0aTliS0UzdWMwaGdXaWJaWWx1a2lHWWcwVXlnWVBTNCthZk10emFCbGppVVdlUUZybUNhRWdlRzNCClV2WC96Z05kU3F0RzlLWDFManF0TlpCOTFoSURyUlVOb2hYNXhTTHhQTXBvakM1ZDM5MXUvMEdmQUVYZUt5QXkKYlBOOEJkVmpxSjdGbHl1ZVZLVWdJQUIvdC9rNk5PM2xLRWlDK1Fzcmhyd2FGSTNZbWU5SmZSc1pVOC9ZaHYwTAp3S2VKaG96MzU1Mm9UMGU0UHdJREFRQUJvNElCaGpDQ0FZSXdId1lEVlIwakJCZ3dGb0FVYklxVW9uZXhnSElkCmdYb1dxdkxjem1idVJjQXdIUVlEVlIwT0JCWUVGRFh2RUNKc3VoSVB2Y0pOR2VUT2ZZOEZWMXcwTUE0R0ExVWQKRHdFQi93UUVBd0lCaGpCbkJnTlZIU0FFWURCZU1Bc0dDV0NHU0FGbEFnRUxKREFMQmdsZ2hrZ0JaUUlCQ3ljdwpDd1lKWUlaSUFXVUNBUXNxTUFzR0NXQ0dTQUZsQWdFTE96QU1CZ3BnaGtnQlpRTUNBUU1OTUF3R0NtQ0dTQUZsCkF3SUJBeEV3REFZS1lJWklBV1VEQWdFREp6QVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQXdHQTFVZEpBUUYKTUFPQUFRQXdOd1lEVlIwZkJEQXdMakFzb0NxZ0tJWW1hSFIwY0RvdkwyTnliQzVrYVhOaExtMXBiQzlqY213dgpSRTlFVWs5UFZFTkJNeTVqY213d2JBWUlLd1lCQlFVSEFRRUVZREJlTURvR0NDc0dBUVVGQnpBQ2hpNW9kSFJ3Ck9pOHZZM0pzTG1ScGMyRXViV2xzTDJsemMzVmxaSFJ2TDBSUFJGSlBUMVJEUVROZlNWUXVjRGRqTUNBR0NDc0cKQVFVRkJ6QUJoaFJvZEhSd09pOHZiMk56Y0M1a2FYTmhMbTFwYkRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQQpZMlVLSE1pOThtc2xOSjlxVUJUOFpOR0tpbStuWWtmTGZCZ2RQMTM2c21KWVlEY3dVT1h3SHQzYjFhT3k0c1hJCjBCa05OUzZ0TzVmZHZaN1c0L3pZRm91SVZuSW1hYThoakRpSk5vQWk1ZFlLRHhrQjhpT1dZbEFQOFRad3BLTnkKc2JHaDRFUUhXV1E4d0R1RmNkQTUvOUVsbnhwUS9KSnpTZ1VPSGh0R204dnJFUW1tSktXMEZ2YkdYaEd5ZEh4MgpJNUd0RHZHSHFscEY4R0ZJQUE1SE5BYXcxczVEZTJTdEVZQ1RTL3k5NW5hcVphZkN4WUc2MmNHYkhpcjhkcDBVCktRT1VRdDg4dFRoMFRBcXpjTEt6MU9KSW9Ja2JmcHpWNlhpWHVMMFZTb2IrVzBwZVplcVRWcSt3N25XUDFjTnIKNDRsaWd3d1ZqZUYwNEwzc1pLQTU0dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  1-DOD_EMAIL_CA-52.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV2RENDQTZTZ0F3SUJBZ0lDQVNZd0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgKR0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVNTUFvR0ExVUVDeE1EUkc5RU1Rd3dDZ1lEVlFRTApFd05RUzBreEZqQVVCZ05WQkFNVERVUnZSQ0JTYjI5MElFTkJJRE13SGhjTk1UWXhNVEl5TVRNME56STRXaGNOCk1qSXhNVEl6TVRNME56STRXakJkTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNnd1BWUzVUTGlCSGIzWmwKY201dFpXNTBNUXd3Q2dZRFZRUUxEQU5FYjBReEREQUtCZ05WQkFzTUExQkxTVEVZTUJZR0ExVUVBd3dQUkU5RQpJRVZOUVVsTUlFTkJMVFV5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3NHBiCnFGWjVMUG05Z2NXVDI0bENqOHlMUUhZZHpudFRXZ01xUFZ5dmVHODhyQStiWGlBV082eldVc2pQbFlRSGZ4aU4KcVRaZW1LZ0s4T1VrVlFBNG9pUTU5RXpjTmlSc1pwMWh5N252RHBGY1cvMFdKekhZNU04NFRoSTU3elJIMjBBYwppTncxREI3WG1SNXlKRktURnVzaXBXZ3Nxd1dSVHRwSmxMR0pYaFRIeUc2YU54UDZIRVhiVExBTTR4LzBMTTlaClEyeVlpaFV1Zmd0SllHZUxhcE5iMXBQTHNQVmNoaEpPUWpMRnlwM0t4OVcxeGZqVUZmdEU5RlFBd0NCSkh5QzcKdEZNazZEbElUeTRzN3B0c3Qxbk5iUFlkekdtaWl4L1A3K0k3MDJZbjhIM1libWhGRDNkK2ZraENYcXNqaW8weQowd1dGRGFhNnZtbTNScUYxR1FJREFRQUJvNElCaGpDQ0FZSXdId1lEVlIwakJCZ3dGb0FVYklxVW9uZXhnSElkCmdYb1dxdkxjem1idVJjQXdIUVlEVlIwT0JCWUVGT2xtREZ5YjRscEtzZ00yTlAxOHlhYjRxd2M1TUE0R0ExVWQKRHdFQi93UUVBd0lCaGpCbkJnTlZIU0FFWURCZU1Bc0dDV0NHU0FGbEFnRUxKREFMQmdsZ2hrZ0JaUUlCQ3ljdwpDd1lKWUlaSUFXVUNBUXNxTUFzR0NXQ0dTQUZsQWdFTE96QU1CZ3BnaGtnQlpRTUNBUU1OTUF3R0NtQ0dTQUZsCkF3SUJBeEV3REFZS1lJWklBV1VEQWdFREp6QVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQXdHQTFVZEpBUUYKTUFPQUFRQXdOd1lEVlIwZkJEQXdMakFzb0NxZ0tJWW1hSFIwY0RvdkwyTnliQzVrYVhOaExtMXBiQzlqY213dgpSRTlFVWs5UFZFTkJNeTVqY213d2JBWUlLd1lCQlFVSEFRRUVZREJlTURvR0NDc0dBUVVGQnpBQ2hpNW9kSFJ3Ck9pOHZZM0pzTG1ScGMyRXViV2xzTDJsemMzVmxaSFJ2TDBSUFJGSlBUMVJEUVROZlNWUXVjRGRqTUNBR0NDc0cKQVFVRkJ6QUJoaFJvZEhSd09pOHZiMk56Y0M1a2FYTmhMbTFwYkRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQQpkWUVmdVRrQm9KTHd6eUlaL2xyeEIzRUNDZXMyeldNTGUxUnNSclEzUVVoa2VMY3F4eHdHMXorVWJibVdrclNTCkpTMFExWGVMUmlUN1AxeCt5Y3MxR3ZveTVWNENGT3J5YjVlTmFEcE9jbEpkWE9pUmpPR3ZTMHdTZVNMR25UL2QKbFJQclFaY29FbStERnZ0U01hc3UvelI4RG5hZXBLcFdMdnlGWHd2b2ltdnNRVnZ6NHRPUzJvNHU0MDBLTFBCbwpNUWJUd3BEbWszOXd4ZjRBcTRtOGh6bmYyQmhBeTIwWUg2alkwOGdYZzBwTkRWaDRDWkl4eUYyZ21FMFREWFB2CnN4NzdseFlLVzNCeDBaeEhJY2ZCS2lmalNpVHJHbExlRVA5TGZFUWRwQ2pKcWhHLzNCRnk2Zmx6d0pERUhxSEgKc3doTjlEQ0puKzN4VGVxMjVQVVhQZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  1-DOD_EMAIL_CA-59.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV2RENDQTZTZ0F3SUJBZ0lDQXdRd0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3Q2dZRFZRUUwNCkV3TlFTMGt4RmpBVUJnTlZCQU1URFVSdlJDQlNiMjkwSUVOQklETXdIaGNOTVRrd05EQXlNVE16TnpJMVdoY04NCk1qVXdOREF5TVRNek56STFXakJkTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUTGlCSGIzWmwNCmNtNXRaVzUwTVF3d0NnWURWUVFMRXdORWIwUXhEREFLQmdOVkJBc1RBMUJMU1RFWU1CWUdBMVVFQXhNUFJFOUUNCklFVk5RVWxNSUVOQkxUVTVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXdJMkkNCi94UHNQa1BlSzYvVmN0QUVzODlweTNpZ01DdU5DVWRsY09QL0xvdXpENGZZY05rSU1oeHM5QkhLSFU2VDVRUk4NCnU5QkV6dmc2V1FRNjRCaVFuK2s2UTU4V0VsdmwwT3JWSDVvaDEzbXVkalhmNmdOQ0lNZ0RMV21yWGJHNVRpd0cNCmh4ZFhRS1RCTktyYXl4eWt6SjRJMG56anJqMnRmMWpZMHVhbVRXQ1BXekdjZUh2dHBja3FKOFRjcVpUMzZ0WjcNCkJZT0Qva3FCcUtrTEx4TDFaSlZGQ0s5T1pHQUNzbXFCeUtjUGlJbjNjVG9tMGN1RHd3TXhNcWpPc1NXdTlHalENClJLcVlNb3JFbEd3VUxJaUJjZzMrZmIzb0JqVjhpeVIyQ1dOaENETUVXVmZEMXk1bmQ5THBPc2crSVVkWmUyWTQNClc2eG92M29MaC9CRE42bVBMd0lEQVFBQm80SUJoakNDQVlJd0h3WURWUjBqQkJnd0ZvQVViSXFVb25leGdISWQNCmdYb1dxdkxjem1idVJjQXdIUVlEVlIwT0JCWUVGSGNVUWFaZGxTYlFIZitWTzJLTTZyZTFYVHVTTUE0R0ExVWQNCkR3RUIvd1FFQXdJQmhqQm5CZ05WSFNBRVlEQmVNQXNHQ1dDR1NBRmxBZ0VMSkRBTEJnbGdoa2dCWlFJQkN5Y3cNCkN3WUpZSVpJQVdVQ0FRc3FNQXNHQ1dDR1NBRmxBZ0VMT3pBTUJncGdoa2dCWlFNQ0FRTU5NQXdHQ21DR1NBRmwNCkF3SUJBeEV3REFZS1lJWklBV1VEQWdFREp6QVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQXdHQTFVZEpBUUYNCk1BT0FBUUF3TndZRFZSMGZCREF3TGpBc29DcWdLSVltYUhSMGNEb3ZMMk55YkM1a2FYTmhMbTFwYkM5amNtd3YNClJFOUVVazlQVkVOQk15NWpjbXd3YkFZSUt3WUJCUVVIQVFFRVlEQmVNRG9HQ0NzR0FRVUZCekFDaGk1b2RIUncNCk9pOHZZM0pzTG1ScGMyRXViV2xzTDJsemMzVmxaSFJ2TDBSUFJGSlBUMVJEUVROZlNWUXVjRGRqTUNBR0NDc0cNCkFRVUZCekFCaGhSb2RIUndPaTh2YjJOemNDNWthWE5oTG0xcGJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUENClRjdk4xMlU4bUx1R0FkSE55VWpUZ0Z6bUpXTW5NOFVLWHJ2Tk1saFdNdjVJSXo0QkpFbS9COXJYajI1RlN0MWoNCmdObExoSDBSWFpWWmVoMlVVV2NHZWxnTkR1RzBZWVNrR0pDQXFjT2pTa2dTdTZ3OXZqZ041MFlxbERwOTg0dWwNCmF1ZjZaTnRDcGVpbHJEZDVLUUt0T1hLbko0Z0hoUXpMMk03bURvbkhYL244Y1lLa20zYkdkSmdZbHlmdWtHUWkNCm5uc0c3SzdaK0Z5M1ZCdzdHemZ5bmVNT3pZTDNjY3FMbHljdGh3ZFJsdUNDMXh3QVlxVkorMXUxT2IxMTRmWXMNCnZONHQwSUZOTjVCOEpTN1poRmVYd3JQVlJQR0J0dHhvVFo0bTRxL053YUpseXZJamhUN2dhVnUyNk1yUU45dDINCnZZMjFFNmtMbEJFL2NUZm1MaDZlOUE9PQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  1-DOD_EMAIL_CA-62.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV2RENDQTZTZ0F3SUJBZ0lDQlYwd0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3Q2dZRFZRUUwNCkV3TlFTMGt4RmpBVUJnTlZCQU1URFVSdlJDQlNiMjkwSUVOQklETXdIaGNOTWpFd05qQTRNVE0xTVRNNFdoY04NCk1qY3dOakE1TVRNMU1UTTRXakJkTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUTGlCSGIzWmwNCmNtNXRaVzUwTVF3d0NnWURWUVFMRXdORWIwUXhEREFLQmdOVkJBc1RBMUJMU1RFWU1CWUdBMVVFQXhNUFJFOUUNCklFVk5RVWxNSUVOQkxUWXlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRlbEQNCmphYnFKa0wwRW5KbEoxQ1RMa3JRb0RzMVRpQjE2NHU1V2k1ZmozMDBtZ2tEeEZGOWhYeHdSY29DSGZBUy9CcjMNCm9IQW03c1Rvd1VpZGQ1UHVnd0ZvOW1vWlloc2w4azI1czJvWW15S09rRFZxKzhoZk5qVXZhdFRzMUhxRjdXOEENCkFhcjFxT1ZlVE01bEpLSmcrLzNzdmY5ZmIzWlVsMkxqSkYrTWNSVDBjN3dkMldsc0NWb1RVdTdrYkNOUzlCOSsNClZsRFhSclI3V0FLM2ZMQ1hOY0kyUlZvRGZGRmp0ZGVrcVYrb3RMK0lNUHhDUXdPUm5Pa2x4MkdCbk0zd2xkcTUNClU4aE53K2VicHAyMGFSdjcxZ0s0Zlo0QXFLUFpKL0hMWm1CL3R6eFh1YlV2cm1wc3d5ankvVDN3SlhWSzBJMU4NCi95dHJRRTJETllyQmVOVjJ6UUlEQVFBQm80SUJoakNDQVlJd0h3WURWUjBqQkJnd0ZvQVViSXFVb25leGdISWQNCmdYb1dxdkxjem1idVJjQXdIUVlEVlIwT0JCWUVGTTNGNXVQa0pSZVhjTHFxaytLNXZrR2praXZuTUE0R0ExVWQNCkR3RUIvd1FFQXdJQmhqQm5CZ05WSFNBRVlEQmVNQXNHQ1dDR1NBRmxBZ0VMSkRBTEJnbGdoa2dCWlFJQkN5Y3cNCkN3WUpZSVpJQVdVQ0FRc3FNQXNHQ1dDR1NBRmxBZ0VMT3pBTUJncGdoa2dCWlFNQ0FRTU5NQXdHQ21DR1NBRmwNCkF3SUJBeEV3REFZS1lJWklBV1VEQWdFREp6QVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQXdHQTFVZEpBUUYNCk1BT0FBUUF3TndZRFZSMGZCREF3TGpBc29DcWdLSVltYUhSMGNEb3ZMMk55YkM1a2FYTmhMbTFwYkM5amNtd3YNClJFOUVVazlQVkVOQk15NWpjbXd3YkFZSUt3WUJCUVVIQVFFRVlEQmVNRG9HQ0NzR0FRVUZCekFDaGk1b2RIUncNCk9pOHZZM0pzTG1ScGMyRXViV2xzTDJsemMzVmxaSFJ2TDBSUFJGSlBUMVJEUVROZlNWUXVjRGRqTUNBR0NDc0cNCkFRVUZCekFCaGhSb2RIUndPaTh2YjJOemNDNWthWE5oTG0xcGJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUENClNGOGcyZHBZK2Irb3pYV0N0UDdmam5MK1RjdWt3ajRXYmMrU3JOTDJJN0RVVWF5TnF3dU9MajRhNEk3c0RMOUYNCmxyRnVsNjlXdVY4UGlGQmJLVFY5MTNQcGtGRlAxTmhYRGRCa2NCRnJYbnQwVU1BVTl5dmFVQ3lUY3I3aWtVRUgNCndWRWVFNzBGUXk3RHgyM2FaZjlYU096Y011U21JbzJOOFAyT2RVM1ZkS0xoT2FiZFIySmx2RU1xWEVpaFRuODENCkFCekdhZTB0RFhWc21ueWtQVUlDbHNMakhOalVCU3FGNzZUdVp2NWZvTEpBS09vMXhlRHJqUmFqYXdqQnNOME0NCm5aUFJDNlgrZW9kUWd6TnVUcGNzY3Nwc1Z1Qm5Pc0lua0JaZDRSWG05UHVQalNINzdoQjhhbjdiUHJXYXVmRSsNCmU0NWFGcGtRekZBcmpyRk56L1IvNFE9PQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  1-DOD_EMAIL_CA-63.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV2RENDQTZTZ0F3SUJBZ0lDQlVnd0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3Q2dZRFZRUUwNCkV3TlFTMGt4RmpBVUJnTlZCQU1URFVSdlJDQlNiMjkwSUVOQklETXdIaGNOTWpFd05qQXhNVFF3TWpJeFdoY04NCk1qY3dOakF5TVRRd01qSXhXakJkTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUTGlCSGIzWmwNCmNtNXRaVzUwTVF3d0NnWURWUVFMRXdORWIwUXhEREFLQmdOVkJBc1RBMUJMU1RFWU1CWUdBMVVFQXhNUFJFOUUNCklFVk5RVWxNSUVOQkxUWXpNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTdHRm0NCm5mOURodzNwNmxHSGhaVFVUcjlyTld5aWhvdllzY3FWNnFGRjZmbG9ETEQ3MFdpenJ1ODR0dk1Hb3NwMVBrV3QNCktVL09ianZxUWpoamR2cHBhREhZeG1VeENISXQwbEdobm1rZnpUYnRqTEFOVEcrTG03UEFyclc2b3NSR3NNVjcNCmpSaGdMU3RqKzUyUWdDa1FOQXFicVRCNG8zT1FTUWQ2QWtuOVlyV3BidVZGbC9aWTBCLzRCeS9YZzBxdmQ5MGQNCkVnd0t3OUZQZTFPL0tSeWplYTB6b3c2bURxZVM3WmR3U2diQUhmYlFOYWhrNlF6WVJBWS9KMHBVUTRUREFnRmUNCjh0Q0hMM2g0SmR3QWRCUDV6TDJzZkU5Rm9aVjR4YmprNmVQL1M3cmlRdzVhWEptc1pITHFGWC93U1VWQ2FQVGsNCmlHYW44RHBvNWIyOFZFMEdqd0lEQVFBQm80SUJoakNDQVlJd0h3WURWUjBqQkJnd0ZvQVViSXFVb25leGdISWQNCmdYb1dxdkxjem1idVJjQXdIUVlEVlIwT0JCWUVGRTB4clZIV1RsZCtaMmt6SlFOK3hpbWwzYnJ6TUE0R0ExVWQNCkR3RUIvd1FFQXdJQmhqQm5CZ05WSFNBRVlEQmVNQXNHQ1dDR1NBRmxBZ0VMSkRBTEJnbGdoa2dCWlFJQkN5Y3cNCkN3WUpZSVpJQVdVQ0FRc3FNQXNHQ1dDR1NBRmxBZ0VMT3pBTUJncGdoa2dCWlFNQ0FRTU5NQXdHQ21DR1NBRmwNCkF3SUJBeEV3REFZS1lJWklBV1VEQWdFREp6QVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQXdHQTFVZEpBUUYNCk1BT0FBUUF3TndZRFZSMGZCREF3TGpBc29DcWdLSVltYUhSMGNEb3ZMMk55YkM1a2FYTmhMbTFwYkM5amNtd3YNClJFOUVVazlQVkVOQk15NWpjbXd3YkFZSUt3WUJCUVVIQVFFRVlEQmVNRG9HQ0NzR0FRVUZCekFDaGk1b2RIUncNCk9pOHZZM0pzTG1ScGMyRXViV2xzTDJsemMzVmxaSFJ2TDBSUFJGSlBUMVJEUVROZlNWUXVjRGRqTUNBR0NDc0cNCkFRVUZCekFCaGhSb2RIUndPaTh2YjJOemNDNWthWE5oTG0xcGJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUENClFTKzkyQjdwTnNLNTVHdUlBWlYraDQyTVIwZFRmaWlkYmdsZHZYeFB0TFVCaDJBYjBFcVJiYm9YdzRzL214REcNCjg1dk45UWtlNC92MzBNdEhhOWk5SXd5ekZEcTVHZkNDN3lnaTJSS09HU2htVnhFNWdCcnpGOE9rME80QlM4aTUNCjgrUTd3Snl3eDVwQzdUZ3J0emlQMHpNS3c3UVZZSFlxZVJzdTBsVExJRXU3NkhBV1JkWndWUGN6M0twaDBiUkgNCnpGckoyWklEZlZ6bjFFRzhxb3NQV04ydnpCRTYzM2VCZm05VldvYk1SNFV4czdaaUZ6SkZSRHkvYWk1REdKMWoNCmZ4VmdsSThxMVlENFVVMC95YWVNVmdhR3dvQ3g5c2IrcTVYQ1hFbjlNVjJkYm1WZjREK2pWbTEyeFlZZDE0Nk0NCkc2dks0M3dndzdlTGE2TE5ZTkNGMWc9PQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  1-DOD_EMAIL_CA-64.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV2RENDQTZTZ0F3SUJBZ0lDQlVrd0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3Q2dZRFZRUUwNCkV3TlFTMGt4RmpBVUJnTlZCQU1URFVSdlJDQlNiMjkwSUVOQklETXdIaGNOTWpFd05qQXhNVFF3TlRFNVdoY04NCk1qY3dOakF5TVRRd05URTVXakJkTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUTGlCSGIzWmwNCmNtNXRaVzUwTVF3d0NnWURWUVFMRXdORWIwUXhEREFLQmdOVkJBc1RBMUJMU1RFWU1CWUdBMVVFQXhNUFJFOUUNCklFVk5RVWxNSUVOQkxUWTBNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXowODQNCkNNckxEbmhMdTJiM3lCa1JwNEIwM3pWNE83cEFWcUR6OFE0ek9XZWhtNmtKczYwUTJkWFh6dVhrMEp4NzBhRmQNCms0SThrODRTU2ZDenZNaFN6M1N2clRLMTR5akNGVmhsVmd5UWNTVDVXdm5Yd01NSDRucEdnL1pHOGVOWXhkWUQNCitKTExOZVpQbFpFZEd3TUhxOVVlNkx1TlZRUDNkMkZNUkphaFVaMGVQNzg2ekJlSThiZWJTRy83V0JaU3ovUkkNCjJmd0xnOVJ2OWFLam15L2o1WlozcGk3R2NlemRWZ2NDbE5xaHJGZzk2dDQ2R1hNNlI3aThyZ0ZFRUNYajlOaVcNCkpsbHF2ZU0wblY4VHk1cTh5UDVNNTJZMEV5bzlYeTdFUGE1ZkE0djdUYk02ZFlDbnk0U1lVVEcrOHFEeDM5dlINCjdSRjVJb1JyWG5pSXlXV3N1UUlEQVFBQm80SUJoakNDQVlJd0h3WURWUjBqQkJnd0ZvQVViSXFVb25leGdISWQNCmdYb1dxdkxjem1idVJjQXdIUVlEVlIwT0JCWUVGSXVRZlNIcnZCb1ZlOEt3VG41elVjZ090dHkyTUE0R0ExVWQNCkR3RUIvd1FFQXdJQmhqQm5CZ05WSFNBRVlEQmVNQXNHQ1dDR1NBRmxBZ0VMSkRBTEJnbGdoa2dCWlFJQkN5Y3cNCkN3WUpZSVpJQVdVQ0FRc3FNQXNHQ1dDR1NBRmxBZ0VMT3pBTUJncGdoa2dCWlFNQ0FRTU5NQXdHQ21DR1NBRmwNCkF3SUJBeEV3REFZS1lJWklBV1VEQWdFREp6QVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQXdHQTFVZEpBUUYNCk1BT0FBUUF3TndZRFZSMGZCREF3TGpBc29DcWdLSVltYUhSMGNEb3ZMMk55YkM1a2FYTmhMbTFwYkM5amNtd3YNClJFOUVVazlQVkVOQk15NWpjbXd3YkFZSUt3WUJCUVVIQVFFRVlEQmVNRG9HQ0NzR0FRVUZCekFDaGk1b2RIUncNCk9pOHZZM0pzTG1ScGMyRXViV2xzTDJsemMzVmxaSFJ2TDBSUFJGSlBUMVJEUVROZlNWUXVjRGRqTUNBR0NDc0cNCkFRVUZCekFCaGhSb2RIUndPaTh2YjJOemNDNWthWE5oTG0xcGJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUENCml4cFczRk9kQzhtQmhNVmhJVnJNZUlEZ016REh0SS8wVFZzZkZVd0FTYWppYkNsNTFsb01Ddnk5TU4wemxXS0YNCi9hZTR5em1uemsrVFQrS0Nrc0YyaUNsQ211azVJa3oxT1VPSnZ0UDRvc1pFbzhnSHN2TTlJT1ljK3BHcUNDd2oNCkFOMUFLdW5qSnpDNDhmZTFJMDNZNkIydHM0OTdwaWEzVG4vRGtrZzBNS0lDZEp1VDkrb0ZTcnFIdTF0bnVvdGkNClZCTVk2TGs0dExxZlJoV0lVRG1oa0VhMEdManZteDNtNmt5dEErU05tSTBrVUhGVzFGZVp2TkJnbmpyRVkyU00NCkhsVzFwVEpzT2JZamZpaWNESVB1cUp1NjMzTUtFYVFnUVJ1a09MRWZWMENTRXQ3UExhVmNEL0pManVIR3R0d2QNCjAwMTltQXBrOEc5ejRMZThHMjJpNHc9PQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  1-DOD_EMAIL_CA-65.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV2RENDQTZTZ0F3SUJBZ0lDQlY0d0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3Q2dZRFZRUUwNCkV3TlFTMGt4RmpBVUJnTlZCQU1URFVSdlJDQlNiMjkwSUVOQklETXdIaGNOTWpFd05qQTRNVE0xTlRJMldoY04NCk1qY3dOakE1TVRNMU5USTJXakJkTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUTGlCSGIzWmwNCmNtNXRaVzUwTVF3d0NnWURWUVFMRXdORWIwUXhEREFLQmdOVkJBc1RBMUJMU1RFWU1CWUdBMVVFQXhNUFJFOUUNCklFVk5RVWxNSUVOQkxUWTFNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW1mb2kNCjcwUUVucnh2eFFMNHNXbjlxY2xvT3FWdmUvN3E3bWVic042dVVKcGRVUGFiUXJOK04xNDRMTUUycFF6ZWxxNW4NCjZRdVg1U2wxMERmRm95WEVQVGF6OC8yYlFxemxWek1mV0RSRGdpNklKbDdSMzI3SFppMXhYTHhpZUR5NWpKTHcNClNMOVVCdGxqRDRNQlVORm1rN1VnM1ZWN1UzMHNGRkJETE1haXg1S1R3ZGwvNUJzVVhodGxaamxodzVIS0ZYRTANClNEdFZrQ0xrWU16ZEdwUWQ5c0dOeFRmN2MzajB4ZDdHaEJQZGxCR0c1SkhzUjlEV3IzZGZtMytLUHpEOStHSzANCktWaUVTeldMaUdHaFQvMUVYZVBOempzMlMwY3BOSndHQVdqVTRwUXBES25qNGVoTnM0R1NYejRNVWFlZm43Y0MNClVKdnhRYzBlcngzZEk3dE50d0lEQVFBQm80SUJoakNDQVlJd0h3WURWUjBqQkJnd0ZvQVViSXFVb25leGdISWQNCmdYb1dxdkxjem1idVJjQXdIUVlEVlIwT0JCWUVGSmkyTkFvYjdRU2FVd3FLQlhQNlFtZk5FR2EyTUE0R0ExVWQNCkR3RUIvd1FFQXdJQmhqQm5CZ05WSFNBRVlEQmVNQXNHQ1dDR1NBRmxBZ0VMSkRBTEJnbGdoa2dCWlFJQkN5Y3cNCkN3WUpZSVpJQVdVQ0FRc3FNQXNHQ1dDR1NBRmxBZ0VMT3pBTUJncGdoa2dCWlFNQ0FRTU5NQXdHQ21DR1NBRmwNCkF3SUJBeEV3REFZS1lJWklBV1VEQWdFREp6QVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQXdHQTFVZEpBUUYNCk1BT0FBUUF3TndZRFZSMGZCREF3TGpBc29DcWdLSVltYUhSMGNEb3ZMMk55YkM1a2FYTmhMbTFwYkM5amNtd3YNClJFOUVVazlQVkVOQk15NWpjbXd3YkFZSUt3WUJCUVVIQVFFRVlEQmVNRG9HQ0NzR0FRVUZCekFDaGk1b2RIUncNCk9pOHZZM0pzTG1ScGMyRXViV2xzTDJsemMzVmxaSFJ2TDBSUFJGSlBUMVJEUVROZlNWUXVjRGRqTUNBR0NDc0cNCkFRVUZCekFCaGhSb2RIUndPaTh2YjJOemNDNWthWE5oTG0xcGJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUENCkZnMzhSMFNraUJJUHRoUnpGRFVXTGJrVUkwZnBRNFM2MExpTTVmTkFrQXBNdzhyWHpESGtFclFHYno0RWpuWlkNCkRJcHFJTmRHbGtqaGVMSzlnSUVzWFhLZlE0TGpwYWdCSmQ4eE5QRjFMWnEwU1c0OVlZNW1EL1pvbDhET21SVmUNCndKaCtuczlGVGhKWitRQUdxYUZMMjZ2Zit4Q056K3JkTVo5elhWdlNHbmg2M2JNODJTbDVHblExWjRUTkJSQ00NClZobERuUFo3K255Z2VxOThCWFZUREk0RjdQYVVkYVpTazBaQ2J6dEJjais0U3E4Nmp4MEVPRkExQlB5VFJHcnUNCjFRdTBJSWVDcjRBUDdPZjJTT2FxUlFQQlYyay8vSFdWWi9SMUJLamdmTHpXd3VlVkxUWlJrTmhtWWVyZTRNdDcNCjdKbGs5THMxZ0kxVkdwM0ppUWRmRmc9PQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  1-DOD_ID_CA-49.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV1VENDQTZHZ0F3SUJBZ0lDQVNjd0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgKR0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVNTUFvR0ExVUVDeE1EUkc5RU1Rd3dDZ1lEVlFRTApFd05RUzBreEZqQVVCZ05WQkFNVERVUnZSQ0JTYjI5MElFTkJJRE13SGhjTk1UWXhNVEl5TVRNME9ERTFXaGNOCk1qSXhNVEl6TVRNME9ERTFXakJhTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNnd1BWUzVUTGlCSGIzWmwKY201dFpXNTBNUXd3Q2dZRFZRUUxEQU5FYjBReEREQUtCZ05WQkFzTUExQkxTVEVWTUJNR0ExVUVBd3dNUkU5RQpJRWxFSUVOQkxUUTVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTJFbmdLSXdQCkNsOStkc0lCeU8ydU9OTkxLaHBuRnlwQkFFK0xNOCtrZWt0NC9IRzZTdGFVL2ZtcUZUUmlWSTBVaCt0ZDlCV2UKOE5YT1lyaFFSbzZGVlN4QmtMdFdaWDhQeDJJSHhpcVExbG5yWks5VWxDbzhoM01QcGlOOFZFakgyYlAvV1NhMApvWkVXekVES0xCNXRTS2VyZGRjK1FMMnVFSGIrR2Z5bTZpKzVxUE9MWGpWMDBGWTI0RmROT3lIYVJqUVRNL0xmCnNqV29GSXRIVEtwNUI5UW9nZEtueWcrV2tBQVJZdGJkMW5xdERYdjZGcGg1SGFUMzlTRW5SaGMrbGtyUkRwRFkKYytIQVU2WHl3aWsrc3RndjJ5RmsxTWhGcEY1L3JuZEV3TUxJU1QwK2xTcGFoSktHbVl0ZzFWS2NuRGNxNUNFUgpDMzFnbDZZcjdmZmpBd0lEQVFBQm80SUJoakNDQVlJd0h3WURWUjBqQkJnd0ZvQVViSXFVb25leGdISWRnWG9XCnF2TGN6bWJ1UmNBd0hRWURWUjBPQkJZRUZOaG5rOHBHM01tVnBwU3pCQmljemlVNmxoeE5NQTRHQTFVZER3RUIKL3dRRUF3SUJoakJuQmdOVkhTQUVZREJlTUFzR0NXQ0dTQUZsQWdFTEpEQUxCZ2xnaGtnQlpRSUJDeWN3Q3dZSgpZSVpJQVdVQ0FRc3FNQXNHQ1dDR1NBRmxBZ0VMT3pBTUJncGdoa2dCWlFNQ0FRTU5NQXdHQ21DR1NBRmxBd0lCCkF4RXdEQVlLWUlaSUFXVURBZ0VESnpBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1Bd0dBMVVkSkFRRk1BT0EKQVFBd053WURWUjBmQkRBd0xqQXNvQ3FnS0lZbWFIUjBjRG92TDJOeWJDNWthWE5oTG0xcGJDOWpjbXd2UkU5RQpVazlQVkVOQk15NWpjbXd3YkFZSUt3WUJCUVVIQVFFRVlEQmVNRG9HQ0NzR0FRVUZCekFDaGk1b2RIUndPaTh2ClkzSnNMbVJwYzJFdWJXbHNMMmx6YzNWbFpIUnZMMFJQUkZKUFQxUkRRVE5mU1ZRdWNEZGpNQ0FHQ0NzR0FRVUYKQnpBQmhoUm9kSFJ3T2k4dmIyTnpjQzVrYVhOaExtMXBiREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBVG1mUApRUGtvbEY1UEIwZlMvOURybmdYMHRtZFN3bGlkQnRya1k2dkwvVjdJTUtxSms3citoSFc2azkrbnhpakhGajZZCkoxKzRFbHBIL1B3V1BzcXdWSXNoUXhFQ3ZKS2ZvM09mTjNhOE1uNkhvZzVrWEpsNWRNYjB2Sk9wV1E5VWhtRzIKbTlVVVo5ODQ3d1NsYlcwdk1ITDBwdXVUc28wMzY1dmlsUE81SmthcEVYY0ZYZGMzTER4WFc4QlI1Tkh5YU4zVgptdmZEL3FBcWU0QmlCeDIrV0F4c29sVEpRNUlNakc1dElON1dFNlZKZFVBbTZFSWdidUZmdkcxS2lXUUpMSGtMClhkVHZ3ZFVUcVg5SlFZc3dmdm9Dd3ZIUmgrSTJtWlgrL2lINUhLTGNheHFXOGI5Sm5IQ3RmTVNCWnFMZEkzbkcKSUJ3NDh0UnVsOGxicmcwbUp3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  1-DOD_ID_CA-50.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV1VENDQTZHZ0F3SUJBZ0lDQVNnd0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgKR0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVNTUFvR0ExVUVDeE1EUkc5RU1Rd3dDZ1lEVlFRTApFd05RUzBreEZqQVVCZ05WQkFNVERVUnZSQ0JTYjI5MElFTkJJRE13SGhjTk1UWXhNVEl5TVRNME9EUTNXaGNOCk1qSXhNVEl6TVRNME9EUTNXakJhTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNnd1BWUzVUTGlCSGIzWmwKY201dFpXNTBNUXd3Q2dZRFZRUUxEQU5FYjBReEREQUtCZ05WQkFzTUExQkxTVEVWTUJNR0ExVUVBd3dNUkU5RQpJRWxFSUVOQkxUVXdNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXkxbmNNMWJOCkpKSGl1MUJoNWpROHIrWTFMMnB2dys2WURMR0U3MXo1Z3F1QnFpc09DNlhMS2ZmS2RCU0YyVTU1dnZwMG01SjgKV2RGNURTZnlmZEFKN1MxSGx6RllWVyswS2pHTEVMS1Y1dFdaaC9hWHU4Vjg1WmFhWWt2SmVlRVU1Y0lZV0xLSwpSQXIxaXlnd25zbGh5MUtiN3hoWVY3Z0xZYzI5V20xRWdaaUoyWG05TTExRklhdW80MEVYbVFGbml6NEZMRS9TCjRKQjFsYllpUDFqR2E0ekpyZG5lYzFrNjV0WmsvSzRoZGkyZGlTKzltRVV6M1BXcnpOcWpySEt4Rm9jbmg5cVMKTkdxSmZ5Zlh4WGdLVHJadzJVRzgzSXhIS3ZJcE1Qb2RYNFNZVXdSbTVIUmJyRzZjMUZ4MTJOQzJnbzE2dzNkRAppbEgrYVVkdVROcG1GUUlEQVFBQm80SUJoakNDQVlJd0h3WURWUjBqQkJnd0ZvQVViSXFVb25leGdISWRnWG9XCnF2TGN6bWJ1UmNBd0hRWURWUjBPQkJZRUZEWXVVdDUwcXA3c3V4K1QwYjYyVUxYR2FRdjVNQTRHQTFVZER3RUIKL3dRRUF3SUJoakJuQmdOVkhTQUVZREJlTUFzR0NXQ0dTQUZsQWdFTEpEQUxCZ2xnaGtnQlpRSUJDeWN3Q3dZSgpZSVpJQVdVQ0FRc3FNQXNHQ1dDR1NBRmxBZ0VMT3pBTUJncGdoa2dCWlFNQ0FRTU5NQXdHQ21DR1NBRmxBd0lCCkF4RXdEQVlLWUlaSUFXVURBZ0VESnpBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1Bd0dBMVVkSkFRRk1BT0EKQVFBd053WURWUjBmQkRBd0xqQXNvQ3FnS0lZbWFIUjBjRG92TDJOeWJDNWthWE5oTG0xcGJDOWpjbXd2UkU5RQpVazlQVkVOQk15NWpjbXd3YkFZSUt3WUJCUVVIQVFFRVlEQmVNRG9HQ0NzR0FRVUZCekFDaGk1b2RIUndPaTh2ClkzSnNMbVJwYzJFdWJXbHNMMmx6YzNWbFpIUnZMMFJQUkZKUFQxUkRRVE5mU1ZRdWNEZGpNQ0FHQ0NzR0FRVUYKQnpBQmhoUm9kSFJ3T2k4dmIyTnpjQzVrYVhOaExtMXBiREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBYkFsaQpvNytnV1g1WXl0bVBNRDlpYythWDJzME5hU2RTYXVGWW1iNmtodE4wQ0NvY0lxVEkvVHlmUkpUamhJNndSTm9hCmNrY2pWYTVIM0VPcDR2T3J0TE40VHhiaE5xZEUrSUhhZldFNC9idERzdEk1UHJBMmhsRlpiMXp2TTVFUUM4dTAKQlpRL0RxeVNoT2p5cHZ4bGR2b2w2VUdqeXM3d2VjUHh0M2NCSkM3dXJvWStucWZ4SG5PSXhSRm9KR2RDN3BTbQpmOTAvdURjWDg3b0NiSy9GcnpKQk8rL1YybEdIaUJ5QzdhaGNQNTlhNFhkNjlsSFNNdFJXcXVjbEF5QkV5MU14CnA3QngvdjVrQ3B2MTRKRTZTQmxZRXdoRnJUdDRhVDQ5RlFFUTlhSkZLUnY3ajIwc1MvNnd4UHpHeDI0SEUwR2IKWHd1c0s5am81c2tHTExVQzNnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  1-DOD_ID_CA-51.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV1VENDQTZHZ0F3SUJBZ0lDQVNrd0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgKR0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVNTUFvR0ExVUVDeE1EUkc5RU1Rd3dDZ1lEVlFRTApFd05RUzBreEZqQVVCZ05WQkFNVERVUnZSQ0JTYjI5MElFTkJJRE13SGhjTk1UWXhNVEl5TVRNME9USTNXaGNOCk1qSXhNVEl6TVRNME9USTNXakJhTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNnd1BWUzVUTGlCSGIzWmwKY201dFpXNTBNUXd3Q2dZRFZRUUxEQU5FYjBReEREQUtCZ05WQkFzTUExQkxTVEVWTUJNR0ExVUVBd3dNUkU5RQpJRWxFSUVOQkxUVXhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQWpqdERzL2lMClRJZjI1dDlTR0dNUDQ5Z0NGSVlYY0V0dlR0Yy92aCtDZ2hmN3FWd2lOdlVZQ2FHTXE1cTdGL3BnTDV4c3c2Qm4KaUNNYXUyYlp0TGZsNXhuTWsyVk1sMkdSd1VheUhRLzBseXRlZUtpZDZmYThzZm5seU5MaDhsdlB1SHFRRkpaWAo1dnBmQUMyNE5EUUNycjhZSWtrTlJ5eEppaENwajhISFl1elRwbERSSXBNbGphaGhBV0NzUWtVcWxxLzVMaXRlClhIWUEvK0VuVDJoc3BraXRTVStGVUlXbzBGS0s5NW9vK2kydVhYOHgzY1hXRVVDWG9SMjNTbGs1TnJHVHdBc2YKVFVkMTZ4V0ExYWN2a3N1bng4ZUszdU9WQ1YwMlEwc2xkVk4xOU5hR204bHBvQmZidGlOejNsby9qMVZUNTU4cQozNUxtT1lXSTZLelNUd0lEQVFBQm80SUJoakNDQVlJd0h3WURWUjBqQkJnd0ZvQVViSXFVb25leGdISWRnWG9XCnF2TGN6bWJ1UmNBd0hRWURWUjBPQkJZRUZKMmt3VnpUK1daeFNhaUVJd08yNGE4cGR5MnVNQTRHQTFVZER3RUIKL3dRRUF3SUJoakJuQmdOVkhTQUVZREJlTUFzR0NXQ0dTQUZsQWdFTEpEQUxCZ2xnaGtnQlpRSUJDeWN3Q3dZSgpZSVpJQVdVQ0FRc3FNQXNHQ1dDR1NBRmxBZ0VMT3pBTUJncGdoa2dCWlFNQ0FRTU5NQXdHQ21DR1NBRmxBd0lCCkF4RXdEQVlLWUlaSUFXVURBZ0VESnpBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1Bd0dBMVVkSkFRRk1BT0EKQVFBd053WURWUjBmQkRBd0xqQXNvQ3FnS0lZbWFIUjBjRG92TDJOeWJDNWthWE5oTG0xcGJDOWpjbXd2UkU5RQpVazlQVkVOQk15NWpjbXd3YkFZSUt3WUJCUVVIQVFFRVlEQmVNRG9HQ0NzR0FRVUZCekFDaGk1b2RIUndPaTh2ClkzSnNMbVJwYzJFdWJXbHNMMmx6YzNWbFpIUnZMMFJQUkZKUFQxUkRRVE5mU1ZRdWNEZGpNQ0FHQ0NzR0FRVUYKQnpBQmhoUm9kSFJ3T2k4dmIyTnpjQzVrYVhOaExtMXBiREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBaWdRNAphT2R1VFVDcER2QzB1ZTBCMEdWNDlCMGFlazhIWFdLYzEwYlBiMWlVQ1FMMkRUNGFJZjB1K3lRcXJ6VnBUdy94CjVtVlBSbjJaaTJpRVY1QThQc040ZFJlRjNsYmxRU3JTVnZLRnc3Y3E2Nlo4YWIyaWpYanBBTVRKQ1VJT2lyOHcKS29PVjAzY25WY2FXMFZEVEgrZ09zbFhubTk1a1BxZGZieEpNaDA2UTAwWGZ2V2ZSamZuQjlEOFpEWGJ5dE01WApta1pSeXVVdldZK0RLeUpVeTFIQXVhcmRhRnBnQTVXb3dqZVFtOXNBdng3Mkx6YVM3em12K2h4T2xpR1hZT243CmdiSkFUY1QrenQxRmZ3YTlNMTlGam9RRFN6V2loVzhQNWNGUnQ2eFZFd1pIZUQ4VkcrK2pjUWZBdWp3WDB2N1UKaEZLdThneG0zd2xOWE9hbHpBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  1-DOD_ID_CA-52.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV1VENDQTZHZ0F3SUJBZ0lDQVNvd0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgKR0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVNTUFvR0ExVUVDeE1EUkc5RU1Rd3dDZ1lEVlFRTApFd05RUzBreEZqQVVCZ05WQkFNVERVUnZSQ0JTYjI5MElFTkJJRE13SGhjTk1UWXhNVEl5TVRNME9UVTNXaGNOCk1qSXhNVEl6TVRNME9UVTNXakJhTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNnd1BWUzVUTGlCSGIzWmwKY201dFpXNTBNUXd3Q2dZRFZRUUxEQU5FYjBReEREQUtCZ05WQkFzTUExQkxTVEVWTUJNR0ExVUVBd3dNUkU5RQpJRWxFSUVOQkxUVXlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQWx0emNNcDJPCjAydCtmd2Q3clRsdWdvS3FZRjhlby8zTStKVmRwcFBBSFRpSlZhVnQwSlNlTTR4eVpzS05vUEJvRlcveXNobngKbFJ2L0x5TngwVkJibis0bUo3RWExVTRGQlB4Q1NaNjhWWXFLZFY2NFVNaG5kYXdWQkpNM095OFkzWnhQbGRURApmOUFwQ2c0ZFpYU0VpU25TaE84WXVwaHJOYllBZDZZcmRVbjFJaERBaHc5MFZUVTNHTUxydTR2eDYwdkZIc2NXCmVaSHBIZkVUOEFzQ2xiQXlxdTY1YnNhMStvMFh2R0xReTJHVE16RVZhUjFOaFlWV0tSU3dncVc1N2diRThwVisKNjNXWU53aThYSXIvMlRhSjVHdmdCVkNiZ0pXQXdzU2ZGVHoyMVpxT291MGQ1eFl1NzlpSUl1ZTVERW9SVzFibQpxc2VySE5HN2dzTXZId0lEQVFBQm80SUJoakNDQVlJd0h3WURWUjBqQkJnd0ZvQVViSXFVb25leGdISWRnWG9XCnF2TGN6bWJ1UmNBd0hRWURWUjBPQkJZRUZKcm9VYXlSVk5lVW1nUkkraUo1LzhiVjdvWXJNQTRHQTFVZER3RUIKL3dRRUF3SUJoakJuQmdOVkhTQUVZREJlTUFzR0NXQ0dTQUZsQWdFTEpEQUxCZ2xnaGtnQlpRSUJDeWN3Q3dZSgpZSVpJQVdVQ0FRc3FNQXNHQ1dDR1NBRmxBZ0VMT3pBTUJncGdoa2dCWlFNQ0FRTU5NQXdHQ21DR1NBRmxBd0lCCkF4RXdEQVlLWUlaSUFXVURBZ0VESnpBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1Bd0dBMVVkSkFRRk1BT0EKQVFBd053WURWUjBmQkRBd0xqQXNvQ3FnS0lZbWFIUjBjRG92TDJOeWJDNWthWE5oTG0xcGJDOWpjbXd2UkU5RQpVazlQVkVOQk15NWpjbXd3YkFZSUt3WUJCUVVIQVFFRVlEQmVNRG9HQ0NzR0FRVUZCekFDaGk1b2RIUndPaTh2ClkzSnNMbVJwYzJFdWJXbHNMMmx6YzNWbFpIUnZMMFJQUkZKUFQxUkRRVE5mU1ZRdWNEZGpNQ0FHQ0NzR0FRVUYKQnpBQmhoUm9kSFJ3T2k4dmIyTnpjQzVrYVhOaExtMXBiREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBa3h2ZApzYk9oMnpHWkNzajNudTlmSEVNQ2xKVnRLNGtKelBKWlBpNDRnZFNuK1U4WDVsYnRUMGt4c1JycUNBWm50bGdRCm1wK0R4blFDbHIzNWZqYW8zd0Y3OW5RYUlPUDI3ODlhOVZXWmd5SmZQclYyS0xzeEFINC9vT2QyWllkVXRIZkMKbGJmWndicHhGdWxCcVBXeHlzS1FPeDNYQy8zTHN6Q1IwWUZxYlYvYzVoQlJCMUE0c1dCbEY4S1JHUXlLZEF5YwpLN1ByTGNTTW5McTA0dWdkNU1mWVd1SmpKeC9VU05OV2xpbC9MenF5Q0Z6eFBwNG5HQkI4eThzMkxjWnl2b2ZoCkhJQk45cXhsMytFWGNKeWV5cXlOaVZaY2dKaStETFNtQkNja2IySjZsTjl0YkdXVjAyV0srOE9pQWlaMzFDZkoKL3Nlelo1OEVaYXlHWVMwMzFRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  1-DOD_ID_CA-59.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV1VENDQTZHZ0F3SUJBZ0lDQXdVd0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3Q2dZRFZRUUwNCkV3TlFTMGt4RmpBVUJnTlZCQU1URFVSdlJDQlNiMjkwSUVOQklETXdIaGNOTVRrd05EQXlNVE16T0RNeVdoY04NCk1qVXdOREF5TVRNek9ETXlXakJhTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUTGlCSGIzWmwNCmNtNXRaVzUwTVF3d0NnWURWUVFMRXdORWIwUXhEREFLQmdOVkJBc1RBMUJMU1RFVk1CTUdBMVVFQXhNTVJFOUUNCklFbEVJRU5CTFRVNU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBekJlRW55M0INCkNsZXRFVTAxVno4a1J5OGNEMk9XdmJ0d01UeXVuRmFTaHUra0lrNmc1VlJzbnZiaEszSG82MU1CbWxHSmMxcEwNClNPTkdCaHBicHlyMmwyZU9OQXptaThjODkxN1Y3QnBuSlp2WWo2NnFHUm1ZNEZYWDZVWlE2R2RBTEtLZWRKS3INCk1RZlU4TG1jQkovTEdjSjBGNDYzNVFvY0dzOVVvRlM1aExnVnlmbERUQy82eDhFUGJpL0pYazZONmlvZDVKSUENCnhOcDZxVy81WkJ2aGl1TW8xOW9ZWDVMdVV5OUI2VzdjQTBjUnlndlljd0tLWUsrY0lkQm94QWozNHl3MkhKSTgNClJRdDQ5MFFQR0NsWmh6MFdZRnVOU25VSmdUSHNkaDJWTkVuMkFFZTJ6WWhQRk5sQ3UzZ1NtT1NwNXZ4cFpXYk0NCklROGNUdjRwUldHNDd3SURBUUFCbzRJQmhqQ0NBWUl3SHdZRFZSMGpCQmd3Rm9BVWJJcVVvbmV4Z0hJZGdYb1cNCnF2TGN6bWJ1UmNBd0hRWURWUjBPQkJZRUZIVUpwaFVUcm9jOCtuT1VBUEx3OVhtNXNuSVVNQTRHQTFVZER3RUINCi93UUVBd0lCaGpCbkJnTlZIU0FFWURCZU1Bc0dDV0NHU0FGbEFnRUxKREFMQmdsZ2hrZ0JaUUlCQ3ljd0N3WUoNCllJWklBV1VDQVFzcU1Bc0dDV0NHU0FGbEFnRUxPekFNQmdwZ2hrZ0JaUU1DQVFNTk1Bd0dDbUNHU0FGbEF3SUINCkF4RXdEQVlLWUlaSUFXVURBZ0VESnpBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1Bd0dBMVVkSkFRRk1BT0ENCkFRQXdOd1lEVlIwZkJEQXdMakFzb0NxZ0tJWW1hSFIwY0RvdkwyTnliQzVrYVhOaExtMXBiQzlqY213dlJFOUUNClVrOVBWRU5CTXk1amNtd3diQVlJS3dZQkJRVUhBUUVFWURCZU1Eb0dDQ3NHQVFVRkJ6QUNoaTVvZEhSd09pOHYNClkzSnNMbVJwYzJFdWJXbHNMMmx6YzNWbFpIUnZMMFJQUkZKUFQxUkRRVE5mU1ZRdWNEZGpNQ0FHQ0NzR0FRVUYNCkJ6QUJoaFJvZEhSd09pOHZiMk56Y0M1a2FYTmhMbTFwYkRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQU9RVWINCjBnNm5QdldvYzFjSjVna2h4U3lHQTNiUUt1OEhuS2JnK3Z2TXBNRkV3bzJwMzBSZFlIR3ZBLzNHR3RybGh4QnENCkFjT3FlWUY1VGNYWjQrRmE5Q2JLRS9BZ2xvQ3VUakVZdDIvMGlhU3Zkdzd5OVZxazdqeVQ5SDFsRklBUUhITjMNClRFd04xbnI3SEVXVmtrZzQxR1hGeFUwMVVIZlI3dmdxVFR6KzN6WkwyaUNxQURWRHNwbmEwVzVwRjZ5TWxhNmcNCm40dTBUbVd1MlNlcUJwY3R2ZGNmU0ZYa3pRQlpHVDFhRC9XMkZ2MDBLd29RZ0IybDJlaVZrNTZtRWpOL01lSTUNCktwNG41N21wUkVzSHV0UDRYbkxRMDFaTjJxZ24rODQ0SlJyelBRMHBhelBZaVNsNFBlSTJGVUl0RXJBNk9iL0QNClBGMGJhMnkzazRkRmtVVEFwdz09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  1-DOD_ID_CA-62.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV1VENDQTZHZ0F3SUJBZ0lDQlVvd0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3Q2dZRFZRUUwNCkV3TlFTMGt4RmpBVUJnTlZCQU1URFVSdlJDQlNiMjkwSUVOQklETXdIaGNOTWpFd05qQXhNVFF3TnpNeFdoY04NCk1qY3dOakF5TVRRd056TXhXakJhTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUTGlCSGIzWmwNCmNtNXRaVzUwTVF3d0NnWURWUVFMRXdORWIwUXhEREFLQmdOVkJBc1RBMUJMU1RFVk1CTUdBMVVFQXhNTVJFOUUNCklFbEVJRU5CTFRZeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcndOYnFKZVENCitkODl0L0U3dkxTWUY3aXZrV01HNmc4ZDB5N0ViVjd5ZDhyOHN1b05zZkYvYUtlQXBaYnd1bUoramE0cGJnZ3QNCk9xTG9sVy9HeXlKZEF6aHRFQk9JQlhNSzRDRUFjVFRyQVg0MHhLaUtDRm9ZNVgvc3MwamlPd1ZEcHRIbXZRZUMNClVsRzBvQVI1L3Rna0dPcFJkakJkWXhFV2tYSWtReEUxbVBwUVo1NlZtYnRyOW9uc25LalRyMXVmbUphYXF1UHINCk0zZVhud1U4S09KbWRwZ08xc1NMc0l4eThKRmVkeXJxTzFUdVp3NnJpTU1PdUs2UDFYVzZJcE1HaXU4K2swdGYNCkdrL3RMNHlJM3AxN05leStvWkl2bXVKdTQzVitOblJMUmN3dHNRUnNSZmoyMGZqSDBvMnVvdVdrVVYxRnVKb0QNCk9oY2VBckRwa3IxeGxRSURBUUFCbzRJQmhqQ0NBWUl3SHdZRFZSMGpCQmd3Rm9BVWJJcVVvbmV4Z0hJZGdYb1cNCnF2TGN6bWJ1UmNBd0hRWURWUjBPQkJZRUZHNTdJQVJORWNtQjZSWTFrTlRMd2x0QzFnZFlNQTRHQTFVZER3RUINCi93UUVBd0lCaGpCbkJnTlZIU0FFWURCZU1Bc0dDV0NHU0FGbEFnRUxKREFMQmdsZ2hrZ0JaUUlCQ3ljd0N3WUoNCllJWklBV1VDQVFzcU1Bc0dDV0NHU0FGbEFnRUxPekFNQmdwZ2hrZ0JaUU1DQVFNTk1Bd0dDbUNHU0FGbEF3SUINCkF4RXdEQVlLWUlaSUFXVURBZ0VESnpBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1Bd0dBMVVkSkFRRk1BT0ENCkFRQXdOd1lEVlIwZkJEQXdMakFzb0NxZ0tJWW1hSFIwY0RvdkwyTnliQzVrYVhOaExtMXBiQzlqY213dlJFOUUNClVrOVBWRU5CTXk1amNtd3diQVlJS3dZQkJRVUhBUUVFWURCZU1Eb0dDQ3NHQVFVRkJ6QUNoaTVvZEhSd09pOHYNClkzSnNMbVJwYzJFdWJXbHNMMmx6YzNWbFpIUnZMMFJQUkZKUFQxUkRRVE5mU1ZRdWNEZGpNQ0FHQ0NzR0FRVUYNCkJ6QUJoaFJvZEhSd09pOHZiMk56Y0M1a2FYTmhMbTFwYkRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUEzSXQNCjExNzV4dnBJemhQMmR1U1JkTnEzVGZ4YUVHb2M1dm56R25DdFVSQzVySWZuWTVWOUYrVzUwdTB5ZVBVUGJpTmENClMzWmxqZ25Tb0NDTTZmNkRHTlNsRzFtTGpubllkZzNvakZLV1I5bTJTNTVWNTMvdjBaN0pJUFJtRFRaMmRWdy8NCkVpR2cxVkRSajkvdWNJNWZKRjFqUVp4ZFlHVURJaThBWWtRMUxlakQyMGF2cWtIL2dVYWc2ai8zbVVYWkY0cmQNCmlrT1JUYlB0cURSVm8rYk5mNGRHWWp1aWhtcnU0R0UwbE1QSzlrZUdmL1pmZVowZzAwL2lxeVdWWndiZGVwNEcNCnM0VldpV2JjSkNCNzQ0UjkzVHNCUlE2Q21lcy9kaDFSRnRFa2NPTUM2dCtOSlY5YVNJRjIwQ1p2Mk5sTmNENFQNCkw3TXZCVTc1a1dtYUcrMi9rQT09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  1-DOD_ID_CA-63.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV1VENDQTZHZ0F3SUJBZ0lDQlE4d0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3Q2dZRFZRUUwNCkV3TlFTMGt4RmpBVUJnTlZCQU1URFVSdlJDQlNiMjkwSUVOQklETXdIaGNOTWpFd05EQTJNVE0xTlRVMFdoY04NCk1qY3dOREEzTVRNMU5UVTBXakJhTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUTGlCSGIzWmwNCmNtNXRaVzUwTVF3d0NnWURWUVFMRXdORWIwUXhEREFLQmdOVkJBc1RBMUJMU1RFVk1CTUdBMVVFQXhNTVJFOUUNCklFbEVJRU5CTFRZek1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeFJKZDFvQisNCm90Zjd0VXJ2TzVYQjE1UWUzVHJNdGU2MzBwY3B6NElCRWdDdjY0eEpYMnI0NjVKaytxS0dxdFc1bGVmUjIwamwNCmF6Zk1ETzFkZ09RK2JhNFRFUW4vVkF1dGo4bE8vN2FnM0doWjdaMk5kVEFCN09ja1gwTG5mRmt0bG5kY3Q1bWkNCnpqaThDSUIvZ0dGd29leWtGRjdOWGJuaVh1ZHhoTnpQWHZQQmhCWTM4eVhUenpOSHhEWk9CRFhoeW9nWXg2OXYNCmRJYURMdlhDd1dUSHN3NXdCSmFpVE1HZEtjRnNDVVVMNGtPWTBodjYwVllrY2R1T0Y5K2U3V21yc0pMV01NNUkNClpTNU12TFFVcHp2bC9YRG5KZWs3YUlhSVUzbHRab3R5LzhMcjZTQk5yN2hhdng2ekx4eEV3Wi9FVWZVMzhnS3UNClF4T29vNTBvMnNSY25RSURBUUFCbzRJQmhqQ0NBWUl3SHdZRFZSMGpCQmd3Rm9BVWJJcVVvbmV4Z0hJZGdYb1cNCnF2TGN6bWJ1UmNBd0hRWURWUjBPQkJZRUZCZm1TOGdhUzhtbnBuQzBURTFleVBZMjFEQ1lNQTRHQTFVZER3RUINCi93UUVBd0lCaGpCbkJnTlZIU0FFWURCZU1Bc0dDV0NHU0FGbEFnRUxKREFMQmdsZ2hrZ0JaUUlCQ3ljd0N3WUoNCllJWklBV1VDQVFzcU1Bc0dDV0NHU0FGbEFnRUxPekFNQmdwZ2hrZ0JaUU1DQVFNTk1Bd0dDbUNHU0FGbEF3SUINCkF4RXdEQVlLWUlaSUFXVURBZ0VESnpBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1Bd0dBMVVkSkFRRk1BT0ENCkFRQXdOd1lEVlIwZkJEQXdMakFzb0NxZ0tJWW1hSFIwY0RvdkwyTnliQzVrYVhOaExtMXBiQzlqY213dlJFOUUNClVrOVBWRU5CTXk1amNtd3diQVlJS3dZQkJRVUhBUUVFWURCZU1Eb0dDQ3NHQVFVRkJ6QUNoaTVvZEhSd09pOHYNClkzSnNMbVJwYzJFdWJXbHNMMmx6YzNWbFpIUnZMMFJQUkZKUFQxUkRRVE5mU1ZRdWNEZGpNQ0FHQ0NzR0FRVUYNCkJ6QUJoaFJvZEhSd09pOHZiMk56Y0M1a2FYTmhMbTFwYkRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUJodlYNCkwxVWNPSkFwd3hsdTUwUk8zZEQ3VHAvOFZNZnJBd1lTdDd1Y0xCU3BkZEh4dXdVc0prRWFrSjdXOEhvaVJRUFgNClNHVzBqclpBeGRYSDMzMURMaHlSUHRuLzJ6aFZrTGlQVTYrd1V2bWVuMHQzb3RUNjFFYTVvSnVVOFJFdXBjNTENCjZyUytETnlDSkw1V0RHbWpNUVN5eGhNY3RyZXRtaTJjYjl4Q0d2dG9ENmxVZ3FIZERRTmtQS0c2RVlKS1B3Tk4NCllHM3pDSEVOUlJLZ1pkODJ4b1ZDQjloM05oWjNNMXVTK1lYT3RjT3Rrd2ZCS0tITVE4VzE0TkpVdkRMM3hqeUwNCis1SzFZaTZKdGY1RzNwQXZ4WlFnZi92ZlIzRDZ6eHRPNFF5L3E4cVlXMmV5eUpuUmE5dm0xa2ZqVWQyUjBObVQNCjZOYVVqRHBpM0VaMHJpRjdGUT09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  1-DOD_ID_CA-64.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV1VENDQTZHZ0F3SUJBZ0lDQlVzd0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3Q2dZRFZRUUwNCkV3TlFTMGt4RmpBVUJnTlZCQU1URFVSdlJDQlNiMjkwSUVOQklETXdIaGNOTWpFd05qQXhNVFF3T1RNM1doY04NCk1qY3dOakF5TVRRd09UTTNXakJhTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUTGlCSGIzWmwNCmNtNXRaVzUwTVF3d0NnWURWUVFMRXdORWIwUXhEREFLQmdOVkJBc1RBMUJMU1RFVk1CTUdBMVVFQXhNTVJFOUUNCklFbEVJRU5CTFRZME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBanN2aGQxUS8NCmFLcGo1L3ZUWW15ZEEwOE9kMVcyQU9qakRzSzBpb3Q4aldJdDY5M09FcTl4OGJTUTFLNmVTdHY0WTNmMWpqOWMNClNNdm5QMDUwU1dxbEYyWG13OGppZnlrNjI2RTU0cnM2N2poYnVZNWdjMisxQm9Db21ucThJdk4vdFZiYlBRa0YNCm1SL3RsdmN5VjZTSnArUFVGVHkvdkt3QlZreVY0MkJUYTlEZ3EwejdYSHErWjdiamYyWllEaTF2K0J4RlczTmkNCmx2M0NWbWFRRXhmN1M4Slg5KzV0d3RVdGc0ZTlmbDN3VTk4eVcxU1d1N0E2S2RxeERuTUdxWXhmWDZGTldEYksNCjh5LzRldnJoQW9WMWxSQ3VUTXZQN09kR2JBamhVREhYTmVuM0ZvQ3h4dTNwQjR2MzJIamxNQWkzUTJSZDNwQ2oNCkVORUl6cDE3L2szeUl3SURBUUFCbzRJQmhqQ0NBWUl3SHdZRFZSMGpCQmd3Rm9BVWJJcVVvbmV4Z0hJZGdYb1cNCnF2TGN6bWJ1UmNBd0hRWURWUjBPQkJZRUZGZTh3RjdiaWFzNzNVZXBjaDZ1eTBJWmF4NTZNQTRHQTFVZER3RUINCi93UUVBd0lCaGpCbkJnTlZIU0FFWURCZU1Bc0dDV0NHU0FGbEFnRUxKREFMQmdsZ2hrZ0JaUUlCQ3ljd0N3WUoNCllJWklBV1VDQVFzcU1Bc0dDV0NHU0FGbEFnRUxPekFNQmdwZ2hrZ0JaUU1DQVFNTk1Bd0dDbUNHU0FGbEF3SUINCkF4RXdEQVlLWUlaSUFXVURBZ0VESnpBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1Bd0dBMVVkSkFRRk1BT0ENCkFRQXdOd1lEVlIwZkJEQXdMakFzb0NxZ0tJWW1hSFIwY0RvdkwyTnliQzVrYVhOaExtMXBiQzlqY213dlJFOUUNClVrOVBWRU5CTXk1amNtd3diQVlJS3dZQkJRVUhBUUVFWURCZU1Eb0dDQ3NHQVFVRkJ6QUNoaTVvZEhSd09pOHYNClkzSnNMbVJwYzJFdWJXbHNMMmx6YzNWbFpIUnZMMFJQUkZKUFQxUkRRVE5mU1ZRdWNEZGpNQ0FHQ0NzR0FRVUYNCkJ6QUJoaFJvZEhSd09pOHZiMk56Y0M1a2FYTmhMbTFwYkRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVhyMHkNClY3R3plVzR5aHVQUDE5M2RlTHhCZkJEZEc3eU5Xakk1dFNHbnZ4L212YUpxajdvcWlBZnRZL0VieVRlcFl6Ym8NCjYvUTA5cytBZWwrd2Z0UlpYYmJad3pSdVlpZ3BRWnk1MGVEaSs2cy90Yy9JdFVKMzdvUXN6VVBUY3NGdDNxanQNCmxIOEZGVHRMeVB3eHRhbGt3TDV3N0FDVHYrMXZENWF2b1htSndIaEZER0w4ZktJUXhDZ2ZnVTBBb0w2WHRMR1QNClhkQVE1WGQ5dmlWRGFXc3ZhMUhYL1JTN3VaNStuMzRPRk01U1pCdU1BdEljV1lSb3VNTDRGcENzWE1ZY0FZQjkNCm5oNWdHOXFNa0lYMGIvb1RrRjVsb1YyUHE3cDA5UGo0OEViYnY4QjMydnFuYVVPUUxqUkFOYi9zSVFMSFhvWEgNCnF3VGl6UWxSOE1rSU84K0YrUT09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  1-DOD_ID_CA-65.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV1VENDQTZHZ0F3SUJBZ0lDQlV3d0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3Q2dZRFZRUUwNCkV3TlFTMGt4RmpBVUJnTlZCQU1URFVSdlJDQlNiMjkwSUVOQklETXdIaGNOTWpFd05qQXhNVFF4TVRJeldoY04NCk1qY3dOakF5TVRReE1USXpXakJhTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUTGlCSGIzWmwNCmNtNXRaVzUwTVF3d0NnWURWUVFMRXdORWIwUXhEREFLQmdOVkJBc1RBMUJMU1RFVk1CTUdBMVVFQXhNTVJFOUUNCklFbEVJRU5CTFRZMU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBbmtLOU9DUSsNCkQwYi83U0xzRXMwTENFbGhLSXpHdGlaREJ3OVZMcUNheFRIbHhhWUVQVi9CL1g5TkdvUDVQRTRUb0JPU3JhbUwNCkNNUGJ3amFkaE5rOE8wZ0VJblpDdUV6VjE3dnZ4Nk80eGcrRko5T083NkxVMUtlWEpubnZYMVluQ0t6M3V4cm4NCjNzdzFqUXVnRUVkMXlQd0tvSE1qSjJTcjdWZ3JtMWU5ODNFZ2lSaW50OWxibGU3eC9NREx2RVpERUxlZXFoUFoNCnZSaXoxcXdWRysvcDJrczk4MHFGTEZMbDFJTk9VU1BuU0xJYmFmZzdjV0U5eVRDNWk5OXM0cEpuUDJUaHlCdjYNCkpzZ0Z6YmJqOUZFWUd5aDc1R2pJTUV2OHVsY1EzQVRPU0JSRVVQenJkNnNRbWlkZWVxdnhYckRZeG84UWVsNmINCnJaaXRpKzV2RXIzT3pRSURBUUFCbzRJQmhqQ0NBWUl3SHdZRFZSMGpCQmd3Rm9BVWJJcVVvbmV4Z0hJZGdYb1cNCnF2TGN6bWJ1UmNBd0hRWURWUjBPQkJZRUZHTGdTRGhXYlc5ckpiNjd3NGhZc2F5Y1E4bGJNQTRHQTFVZER3RUINCi93UUVBd0lCaGpCbkJnTlZIU0FFWURCZU1Bc0dDV0NHU0FGbEFnRUxKREFMQmdsZ2hrZ0JaUUlCQ3ljd0N3WUoNCllJWklBV1VDQVFzcU1Bc0dDV0NHU0FGbEFnRUxPekFNQmdwZ2hrZ0JaUU1DQVFNTk1Bd0dDbUNHU0FGbEF3SUINCkF4RXdEQVlLWUlaSUFXVURBZ0VESnpBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1Bd0dBMVVkSkFRRk1BT0ENCkFRQXdOd1lEVlIwZkJEQXdMakFzb0NxZ0tJWW1hSFIwY0RvdkwyTnliQzVrYVhOaExtMXBiQzlqY213dlJFOUUNClVrOVBWRU5CTXk1amNtd3diQVlJS3dZQkJRVUhBUUVFWURCZU1Eb0dDQ3NHQVFVRkJ6QUNoaTVvZEhSd09pOHYNClkzSnNMbVJwYzJFdWJXbHNMMmx6YzNWbFpIUnZMMFJQUkZKUFQxUkRRVE5mU1ZRdWNEZGpNQ0FHQ0NzR0FRVUYNCkJ6QUJoaFJvZEhSd09pOHZiMk56Y0M1a2FYTmhMbTFwYkRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUY4VWoNCjMzSzBaTTlhZHRmZDhJTTJlYnF3Z2JnUnhpMjJQYjZiS2tLT2tHVjJOVTR3TWNrcHVScFVyUUdKbXk2Q0lYWjgNCjRRV3o5RFpTTkFVMG55SFhCNlBMYlNWMGpuekt5Z1dPN0lPdjgzTTZkY25DRzhRVVAxbzIwVjBOR2h6TkJFdEsNCmp4V0VOWkNZSEVydXhtKzJyQitNQm5nUGhrQmdkbmkybnBldEhYMmUxY21zZ01TNkcxUFVoMmlkaFo4TXBkb2YNCm5yK1YwR3VLTHB3aU56M2hMbktlaGwyQnM2YUhHMklJT20vUGR6dnNLQ1AyZWlHelMzU2lpQ2Y2ZnVrWW9ZQk4NCmVkTDhmSGZGTnlNNFVQTmdjNGVHK2J1MEdKSzR3S1BWamlYN3hZRGRHYVlaMm00WSsrenJLdU1xK09hcjZEUUcNCnEzU0VSTUFaQ0RZc0V0M3oyZz09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  1-DOD_SW_CA-53.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVqekNDQTNlZ0F3SUJBZ0lDQVNzd0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgKR0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVNTUFvR0ExVUVDeE1EUkc5RU1Rd3dDZ1lEVlFRTApFd05RUzBreEZqQVVCZ05WQkFNVERVUnZSQ0JTYjI5MElFTkJJRE13SGhjTk1UWXhNVEl5TVRNMU1ETTFXaGNOCk1qSXhNVEl6TVRNMU1ETTFXakJhTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNnd1BWUzVUTGlCSGIzWmwKY201dFpXNTBNUXd3Q2dZRFZRUUxEQU5FYjBReEREQUtCZ05WQkFzTUExQkxTVEVWTUJNR0ExVUVBd3dNUkU5RQpJRk5YSUVOQkxUVXpNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXdUZXdTOWl2CkNoWXRNdk5CWUVPalZjVnFyKzNWT0FFZ3lqdDdpZUpVVlByRkRndEw5U3orZVhYK3VCWGtKd1lqUzBndGV4NkwKUnVOdGRjTGt1a29KdTM0WnhuZlV3YzhyZ1R3TlY4VnRJeUkyR0pxL3UvRmpHd0s4ZkhrenNsT3p3RjhLb0E2TgpOVFl2S3k5WG9oQkRycllHcFJxL1J1RHR0VmZpSjRZdmNpaTVKNit1WlR2VDkwMzVFa3NxalY3QStzSmtGVnFJCjNNWjgza045TzBaSmY0ZEVqNGg0REtxUVlIVFJycHkvQkw0cFRHeG1TcG5RSG5lNjNUb3Fzb1pudFRZQ1loQjUKNml6T2FrYnNVVFlWYXV3WXFsTlZmMGoyMEl3Y1ppYnp0cDd3cVYyTmdHekE4MUxuZGhZTFFoKzhLc0RhYlRTVgpzWk12TEhmRUFlTGRod0lEQVFBQm80SUJYRENDQVZnd0h3WURWUjBqQkJnd0ZvQVViSXFVb25leGdISWRnWG9XCnF2TGN6bWJ1UmNBd0hRWURWUjBPQkJZRUZGSEVpek9abE1CK3V6WWQ0K0k2QmIweWRKMVRNQTRHQTFVZER3RUIKL3dRRUF3SUJoakE5QmdOVkhTQUVOakEwTUFzR0NXQ0dTQUZsQWdFTEpEQUxCZ2xnaGtnQlpRSUJDeWN3Q3dZSgpZSVpJQVdVQ0FRc3FNQXNHQ1dDR1NBRmxBZ0VMT3pBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1Bd0dBMVVkCkpBUUZNQU9BQVFBd053WURWUjBmQkRBd0xqQXNvQ3FnS0lZbWFIUjBjRG92TDJOeWJDNWthWE5oTG0xcGJDOWoKY213dlJFOUVVazlQVkVOQk15NWpjbXd3YkFZSUt3WUJCUVVIQVFFRVlEQmVNRG9HQ0NzR0FRVUZCekFDaGk1bwpkSFJ3T2k4dlkzSnNMbVJwYzJFdWJXbHNMMmx6YzNWbFpIUnZMMFJQUkZKUFQxUkRRVE5mU1ZRdWNEZGpNQ0FHCkNDc0dBUVVGQnpBQmhoUm9kSFJ3T2k4dmIyTnpjQzVrYVhOaExtMXBiREFOQmdrcWhraUc5dzBCQVFzRkFBT0MKQVFFQUNadHhYOWxyNnN5ZTBSVVNPTFl6TENVNGpWRE5TUWd6M3FxOEtrN2RKOTdHZHN1QnpBQ2NDSXdGRHBOZAp0ak10RCttd05qZ2ZlUlk1b3Z5TUVIM1p6VmhJcUdwUW80V0xlRStiankzZk5jVTNyc2IyU0hOYUVwUmRkV1EzCmpuT2Mzamx5Zy9zSGFSNkpnNEpmUTFHOXphNDZBUmVWYTFuSkxIanQvQk81bS8zRDRpSm1wSnZxMlFwNk40ZUYKYTJWTDZzOHVBWktuTENvY2paVTJCM3dZWk15YVNncHBhRTRUT2UvSGM1SEp3MjQ1L2NGTFVMOEkwMmlZZnY5RQpLUUR1VEdxTnpHckJ1S3A5TE1wUnJCV2IwYm9GclphT05jVlhqdENxaTA1Zm8xRmQvSmh1dmZyYVRwZ3htVlhpCjFPdmdWR3dxNWxzeFcycGJqU3BCRmViYVJ3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  1-DOD_SW_CA-54.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVqekNDQTNlZ0F3SUJBZ0lDQVN3d0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgKR0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVNTUFvR0ExVUVDeE1EUkc5RU1Rd3dDZ1lEVlFRTApFd05RUzBreEZqQVVCZ05WQkFNVERVUnZSQ0JTYjI5MElFTkJJRE13SGhjTk1UWXhNVEl5TVRNMU1USTRXaGNOCk1qSXhNVEl6TVRNMU1USTRXakJhTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNnd1BWUzVUTGlCSGIzWmwKY201dFpXNTBNUXd3Q2dZRFZRUUxEQU5FYjBReEREQUtCZ05WQkFzTUExQkxTVEVWTUJNR0ExVUVBd3dNUkU5RQpJRk5YSUVOQkxUVTBNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXEwd25hai9qClp6WFJuWm5ORE41ck1aVzdPbVBQY3JHKzhJUVc2b0hyZXRRcXZqL0hDbkF5WDNzbDVUdlQ2YkxDRzRVZkxCQXgKNFZSQ3Zwc1ZXOWZNRS80M0UrTjhweVVEamxoWWU4QkhPOWUwUmZiVmpNZ0RoNnRMYWd2ak4zTWZUaGc4RTk0Qwo2VFJpc2RpZmtQNldvbnBsTzFzYnY4WUQ0OUdqbUJXTHM4S3RVM3h6dy9TdFFyd05meW1ZOGFXNGxYSlFhL0NhCitGWHp6L3RSaDdNY2xybHo2UUN6Z2RIQWxpV0s0czV0c1hEeGVabHMyL3R2VGFaUUNWQ2l5Y2NEZGMvL2xZekwKVUl3ZzNsblBjb1Y2Q1BoaHcrUVc0cTQyWTRvU3U0OFo5Zy9mQXZxaHJLMVUwUzltSGwxdldMRFRISTNoa3dtZApUL08yV2dLaDhudng4d0lEQVFBQm80SUJYRENDQVZnd0h3WURWUjBqQkJnd0ZvQVViSXFVb25leGdISWRnWG9XCnF2TGN6bWJ1UmNBd0hRWURWUjBPQkJZRUZMQzNLTDhzQkltS2RDYXZxaE9NQWhCVmdYbXhNQTRHQTFVZER3RUIKL3dRRUF3SUJoakE5QmdOVkhTQUVOakEwTUFzR0NXQ0dTQUZsQWdFTEpEQUxCZ2xnaGtnQlpRSUJDeWN3Q3dZSgpZSVpJQVdVQ0FRc3FNQXNHQ1dDR1NBRmxBZ0VMT3pBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1Bd0dBMVVkCkpBUUZNQU9BQVFBd053WURWUjBmQkRBd0xqQXNvQ3FnS0lZbWFIUjBjRG92TDJOeWJDNWthWE5oTG0xcGJDOWoKY213dlJFOUVVazlQVkVOQk15NWpjbXd3YkFZSUt3WUJCUVVIQVFFRVlEQmVNRG9HQ0NzR0FRVUZCekFDaGk1bwpkSFJ3T2k4dlkzSnNMbVJwYzJFdWJXbHNMMmx6YzNWbFpIUnZMMFJQUkZKUFQxUkRRVE5mU1ZRdWNEZGpNQ0FHCkNDc0dBUVVGQnpBQmhoUm9kSFJ3T2k4dmIyTnpjQzVrYVhOaExtMXBiREFOQmdrcWhraUc5dzBCQVFzRkFBT0MKQVFFQVpGMDQ3eVM4YnE4bGtNcG94RnJKam1iZEQxVE5wam5XUm1JbVEzMnVQd05rckRic3BOSjRHZHFBaDNONgp1ZUlNY1BVU21ySUVzOUdSWkdKek9lVFE2dGNRS0N5V3krbnBzSTFEUS9rNVh6MEgzNzVCdzE3Z25xMkJwamR5CnM4emVnOEkrMmxET2pTTnI3UmdWV1dCKzJzVldYZHZJTHg0V2toNnZYNTd1RXVkMDQ2SEJtYzROZURpSEFlcjgKTklhYzVBN2UzNzlOUnl1dXNOR1hrQW0zZzdHc0UvWTdNckZzS0tzTWxIYitnRlhWZ0QwREJodEYyMllxbUEvUgpRdlR6N0lqMUFEKytHdjVJNElJekpGTXJ5TjZFRDZYZHVXY1R0azlDbmYwdVkweitWWThSRnc5bk9rRUNGYzJiCkJBOEwyTGxydUJPek1XYkZ5NGtIN0cvaHJBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  1-DOD_SW_CA-55.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1VENDQW9pZ0F3SUJBZ0lCU0RBTUJnZ3Foa2pPUFFRREFnVUFNRnN4Q3pBSkJnTlZCQVlUQWxWVE1SZ3cKRmdZRFZRUUtFdzlWTGxNdUlFZHZkbVZ5Ym0xbGJuUXhEREFLQmdOVkJBc1RBMFJ2UkRFTU1Bb0dBMVVFQ3hNRApVRXRKTVJZd0ZBWURWUVFERXcxRWIwUWdVbTl2ZENCRFFTQTBNQjRYRFRFMk1URXlNakUxTkRZME5sb1hEVEl5Ck1URXlNekUxTkRZME5sb3dXakVMTUFrR0ExVUVCaE1DVlZNeEdEQVdCZ05WQkFvTUQxVXVVeTRnUjI5MlpYSnUKYldWdWRERU1NQW9HQTFVRUN3d0RSRzlFTVF3d0NnWURWUVFMREFOUVMwa3hGVEFUQmdOVkJBTU1ERVJQUkNCVApWeUJEUVMwMU5UQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJEbXpoMkhGalVoR0VhS3hYVTVFCmpWVTY2Zk1KYk41MnRXazRRc0JJVThyQ2N1S2R6eW9ZM0RUVUxSdjVXZEY0bWpQSEJUZnljdVdPbXh6dHJVNjQKTithamdnRTZNSUlCTmpBZkJnTlZIU01FR0RBV2dCUzl3YmxyVGZRZDdEQ1F2Mkp6d0lRejhuRWtoVEFkQmdOVgpIUTRFRmdRVXBXOUxIWksxeTkxMzJiYTlTQWErQmtnSk5CZ3dEZ1lEVlIwUEFRSC9CQVFEQWdHR01EMEdBMVVkCklBUTJNRFF3Q3dZSllJWklBV1VDQVFzbE1Bc0dDV0NHU0FGbEFnRUxLREFMQmdsZ2hrZ0JaUUlCQ3lzd0N3WUoKWUlaSUFXVUNBUXM3TUJJR0ExVWRFd0VCL3dRSU1BWUJBZjhDQVFBd0RBWURWUjBrQkFVd0E0QUJBREEzQmdOVgpIUjhFTURBdU1DeWdLcUFvaGlab2RIUndPaTh2WTNKc0xtUnBjMkV1Yldsc0wyTnliQzlFVDBSU1QwOVVRMEUwCkxtTnliREJLQmdnckJnRUZCUWNCQVFRK01Ed3dPZ1lJS3dZQkJRVUhNQUtHTG1oMGRIQTZMeTlqY213dVpHbHoKWVM1dGFXd3ZhWE56ZFdWa2RHOHZSRTlFVWs5UFZFTkJORjlKVkM1d04yTXdEQVlJS29aSXpqMEVBd0lGQUFOSgpBREJHQWlFQTh6UUErVDNhbmFNMGIxUXNZU0V2dThZOTVTMDNHR3k4ZkcySG9pNjYxRklDSVFDRENid1FaRDFaCjhOaG5qYk9CREVvbnF6RkVkaVhnR2lxMjZzcy8xZWpEYXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  1-DOD_SW_CA-56.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM0ekNDQW9pZ0F3SUJBZ0lCU1RBTUJnZ3Foa2pPUFFRREFnVUFNRnN4Q3pBSkJnTlZCQVlUQWxWVE1SZ3cKRmdZRFZRUUtFdzlWTGxNdUlFZHZkbVZ5Ym0xbGJuUXhEREFLQmdOVkJBc1RBMFJ2UkRFTU1Bb0dBMVVFQ3hNRApVRXRKTVJZd0ZBWURWUVFERXcxRWIwUWdVbTl2ZENCRFFTQTBNQjRYRFRFMk1URXlNakUxTkRneU1sb1hEVEl5Ck1URXlNekUxTkRneU1sb3dXakVMTUFrR0ExVUVCaE1DVlZNeEdEQVdCZ05WQkFvTUQxVXVVeTRnUjI5MlpYSnUKYldWdWRERU1NQW9HQTFVRUN3d0RSRzlFTVF3d0NnWURWUVFMREFOUVMwa3hGVEFUQmdOVkJBTU1ERVJQUkNCVApWeUJEUVMwMU5qQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJKOFA2d3FmYnU4NXRTbzZpaVZiClFweVR6VmZEYkVjVXVvanNuWnhhMlp2aUk1OUo5Zk9CNkxrU3h2b2FjbGNJREcyQ1FIYi9jVEZSbFlubW55MjgKcWhhamdnRTZNSUlCTmpBZkJnTlZIU01FR0RBV2dCUzl3YmxyVGZRZDdEQ1F2Mkp6d0lRejhuRWtoVEFkQmdOVgpIUTRFRmdRVXZQTDBVWjBxeStPZEVGWmpCWFpXeWQyNjFGc3dEZ1lEVlIwUEFRSC9CQVFEQWdHR01EMEdBMVVkCklBUTJNRFF3Q3dZSllJWklBV1VDQVFzbE1Bc0dDV0NHU0FGbEFnRUxLREFMQmdsZ2hrZ0JaUUlCQ3lzd0N3WUoKWUlaSUFXVUNBUXM3TUJJR0ExVWRFd0VCL3dRSU1BWUJBZjhDQVFBd0RBWURWUjBrQkFVd0E0QUJBREEzQmdOVgpIUjhFTURBdU1DeWdLcUFvaGlab2RIUndPaTh2WTNKc0xtUnBjMkV1Yldsc0wyTnliQzlFVDBSU1QwOVVRMEUwCkxtTnliREJLQmdnckJnRUZCUWNCQVFRK01Ed3dPZ1lJS3dZQkJRVUhNQUtHTG1oMGRIQTZMeTlqY213dVpHbHoKWVM1dGFXd3ZhWE56ZFdWa2RHOHZSRTlFVWs5UFZFTkJORjlKVkM1d04yTXdEQVlJS29aSXpqMEVBd0lGQUFOSApBREJFQWlCamdSM0Z6d3VxY0tmbUlBeXlnaEM4NStDNFdaV0xsTFYvcG5BK0tGMTZpZ0lnZFQzVzhZUEhFTUdoCldQcHFWZUJSMXhKZkZCbDRIK2E4T3htSjhSVFpkVVE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  1-DOD_SW_CA-57.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQXFXZ0F3SUJBZ0lCQ0RBTUJnZ3Foa2pPUFFRREF3VUFNRnN4Q3pBSkJnTlZCQVlUQWxWVE1SZ3cKRmdZRFZRUUtFdzlWTGxNdUlFZHZkbVZ5Ym0xbGJuUXhEREFLQmdOVkJBc1RBMFJ2UkRFTU1Bb0dBMVVFQ3hNRApVRXRKTVJZd0ZBWURWUVFERXcxRWIwUWdVbTl2ZENCRFFTQTFNQjRYRFRFMk1USXhNekUwTXprME9Wb1hEVEl5Ck1USXhNakUwTXprME9Wb3dXakVMTUFrR0ExVUVCaE1DVlZNeEdEQVdCZ05WQkFvTUQxVXVVeTRnUjI5MlpYSnUKYldWdWRERU1NQW9HQTFVRUN3d0RSRzlFTVF3d0NnWURWUVFMREFOUVMwa3hGVEFUQmdOVkJBTU1ERVJQUkNCVApWeUJEUVMwMU56QjJNQkFHQnlxR1NNNDlBZ0VHQlN1QkJBQWlBMklBQkdkT2VXRmZWY0RKbkVUQ3NaRjdvS25FCjI3LzhRT0RjMk5zY2dTU2VHcm15SHVBSVRDMm5MZjRIZnV5enJpWmFyendsTmF1Mk4yYWF5NVlOQ0JUcGpySHAKQlF6dzJkVCtJUWdzQjBmNTN4Z0w4NEtqSEZSM1BYY2VHUjJXM1VrSC9xT0NBVG93Z2dFMk1COEdBMVVkSXdRWQpNQmFBRkliQUZVTDdjWGJjUGkwUld5RVFSRFhLd2R3VU1CMEdBMVVkRGdRV0JCUmFFaW1zTjlTT1B2V05VN1VpCjhEb0VDZEdqNnpBT0JnTlZIUThCQWY4RUJBTUNBUVl3UFFZRFZSMGdCRFl3TkRBTEJnbGdoa2dCWlFJQkN5WXcKQ3dZSllJWklBV1VDQVFzcE1Bc0dDV0NHU0FGbEFnRUxMREFMQmdsZ2hrZ0JaUUlCQ3pzd0VnWURWUjBUQVFILwpCQWd3QmdFQi93SUJBREFNQmdOVkhTUUVCVEFEZ0FFQU1EY0dBMVVkSHdRd01DNHdMS0Fxb0NpR0ptaDBkSEE2Ckx5OWpjbXd1WkdsellTNXRhV3d2WTNKc0wwUlBSRkpQVDFSRFFUVXVZM0pzTUVvR0NDc0dBUVVGQndFQkJENHcKUERBNkJnZ3JCZ0VGQlFjd0FvWXVhSFIwY0RvdkwyTnliQzVrYVhOaExtMXBiQzlwYzNOMVpXUjBieTlFVDBSUwpUMDlVUTBFMVgwbFVMbkEzWXpBTUJnZ3Foa2pPUFFRREF3VUFBMmdBTUdVQ01DNnlBWXowZ0ZxNXVJMGp5L21UClZzUzlZQmpxNkhhZlhoWHdtVWsyOFlQd1lKSjFUTUZJZThPNGs3VnZsRVFFOEFJeEFLZU1zUlZHeit5V1E2dTcKTlZ1MmpFTnc4STFnQW1hbDNwVEp3K3hZSkhSSmNyVXIzZDc3RG00UDAwWTVFTzJRbnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  1-DOD_SW_CA-58.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJRENDQXFXZ0F3SUJBZ0lCQ1RBTUJnZ3Foa2pPUFFRREF3VUFNRnN4Q3pBSkJnTlZCQVlUQWxWVE1SZ3cKRmdZRFZRUUtFdzlWTGxNdUlFZHZkbVZ5Ym0xbGJuUXhEREFLQmdOVkJBc1RBMFJ2UkRFTU1Bb0dBMVVFQ3hNRApVRXRKTVJZd0ZBWURWUVFERXcxRWIwUWdVbTl2ZENCRFFTQTFNQjRYRFRFMk1USXhNekUwTkRBMU1sb1hEVEl5Ck1USXhNakUwTkRBMU1sb3dXakVMTUFrR0ExVUVCaE1DVlZNeEdEQVdCZ05WQkFvTUQxVXVVeTRnUjI5MlpYSnUKYldWdWRERU1NQW9HQTFVRUN3d0RSRzlFTVF3d0NnWURWUVFMREFOUVMwa3hGVEFUQmdOVkJBTU1ERVJQUkNCVApWeUJEUVMwMU9EQjJNQkFHQnlxR1NNNDlBZ0VHQlN1QkJBQWlBMklBQktMclBlVXRMQnFwRG9VOUNzekdVaGJaClVGL0ZqTUR0LzdQZWtGdllETTFXY3hXeEV4c3g3Wi9jc0l0b0FyZVJVZHQvWXdXOTNUUlFKQk5vazJnRXV1d3YKdW5OSURlTWUwR0NYTTdBam52bmxVMW5KMExab3JrN1BENXJiSXhDdS82T0NBVG93Z2dFMk1COEdBMVVkSXdRWQpNQmFBRkliQUZVTDdjWGJjUGkwUld5RVFSRFhLd2R3VU1CMEdBMVVkRGdRV0JCUWtWUm9Ma0NFczFpT3FpTktlCjZiaXRvb0I5M0RBT0JnTlZIUThCQWY4RUJBTUNBUVl3UFFZRFZSMGdCRFl3TkRBTEJnbGdoa2dCWlFJQkN5WXcKQ3dZSllJWklBV1VDQVFzcE1Bc0dDV0NHU0FGbEFnRUxMREFMQmdsZ2hrZ0JaUUlCQ3pzd0VnWURWUjBUQVFILwpCQWd3QmdFQi93SUJBREFNQmdOVkhTUUVCVEFEZ0FFQU1EY0dBMVVkSHdRd01DNHdMS0Fxb0NpR0ptaDBkSEE2Ckx5OWpjbXd1WkdsellTNXRhV3d2WTNKc0wwUlBSRkpQVDFSRFFUVXVZM0pzTUVvR0NDc0dBUVVGQndFQkJENHcKUERBNkJnZ3JCZ0VGQlFjd0FvWXVhSFIwY0RvdkwyTnliQzVrYVhOaExtMXBiQzlwYzNOMVpXUjBieTlFVDBSUwpUMDlVUTBFMVgwbFVMbkEzWXpBTUJnZ3Foa2pPUFFRREF3VUFBMmNBTUdRQ01DbFpEWnkvMldZbjVxZkJIWWtWCmRuR2NTSjFyeFZkcXZ3QTNMYVhQeVhEYm1sVE1RSiswSnRQZDVXUmt6YkxCZndJd0NNT3RPc250ZkJtZWpWRWQKVTBYUWpYbHhXejV2aEJqZ28yelI5VWRmSVZQYUNSaUxOTjlteC9zT3dNZjF6UEkyCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  1-DOD_SW_CA-60.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVqekNDQTNlZ0F3SUJBZ0lDQXdNd0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3Q2dZRFZRUUwNCkV3TlFTMGt4RmpBVUJnTlZCQU1URFVSdlJDQlNiMjkwSUVOQklETXdIaGNOTVRrd05EQXlNVE16TkRRNVdoY04NCk1qVXdOREF5TVRNek5EUTVXakJhTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUTGlCSGIzWmwNCmNtNXRaVzUwTVF3d0NnWURWUVFMRXdORWIwUXhEREFLQmdOVkJBc1RBMUJMU1RFVk1CTUdBMVVFQXhNTVJFOUUNCklGTlhJRU5CTFRZd01JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBL016QWlpVkMNCkc2MUNOckh1Sis2a1hSQWxHOXBwTEtYamUxUzNtdzBMWE95bllBeVg3T0l5RlhrZU5qNTREVi80SFR2SzRlSGQNCkc4WFRmaVVyOGNxV2tpMm5IUEppdmFaT0t1L2pPYnNoeXdOWjNVQUttdHo4YlBETyt3SjhRckF4S2FRWUg0Q00NCm1IbEVqZXRtTTdDTVJ6bmZNRHFqd0I5dXM1WTFGd0tQbGgrMlk2cmREZlUxeFIvZEdEMmlRazRsYWR1eENDcjQNClVMSTdlRkZUb3hucjVyVXQ5NUZCaTVEbElQczNYRVRJeXdJV0o3WjU5bTBKQnJSZXFLbkZacjFOUjA2REdDT08NCllVTE9SQ1hpWkZKbGJSTWp3dmQzQlB1K2F1UDM5L3FxNmFLTG1UeTBpVFBmbEd1bTk0VzRia3Z1cEIzcjZWa2INCnB0TnNackZxMElZWmtRSURBUUFCbzRJQlhEQ0NBVmd3SHdZRFZSMGpCQmd3Rm9BVWJJcVVvbmV4Z0hJZGdYb1cNCnF2TGN6bWJ1UmNBd0hRWURWUjBPQkJZRUZIMys4QkFYT2IvVGNvVDlyU2x3K09JOW1mTVlNQTRHQTFVZER3RUINCi93UUVBd0lCaGpBOUJnTlZIU0FFTmpBME1Bc0dDV0NHU0FGbEFnRUxKREFMQmdsZ2hrZ0JaUUlCQ3ljd0N3WUoNCllJWklBV1VDQVFzcU1Bc0dDV0NHU0FGbEFnRUxPekFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUF3R0ExVWQNCkpBUUZNQU9BQVFBd053WURWUjBmQkRBd0xqQXNvQ3FnS0lZbWFIUjBjRG92TDJOeWJDNWthWE5oTG0xcGJDOWoNCmNtd3ZSRTlFVWs5UFZFTkJNeTVqY213d2JBWUlLd1lCQlFVSEFRRUVZREJlTURvR0NDc0dBUVVGQnpBQ2hpNW8NCmRIUndPaTh2WTNKc0xtUnBjMkV1Yldsc0wybHpjM1ZsWkhSdkwwUlBSRkpQVDFSRFFUTmZTVlF1Y0Rkak1DQUcNCkNDc0dBUVVGQnpBQmhoUm9kSFJ3T2k4dmIyTnpjQzVrYVhOaExtMXBiREFOQmdrcWhraUc5dzBCQVFzRkFBT0MNCkFRRUFuNE9TeDVGV000ZTJ2ZDJJZ3Y2M0NDcGZ2clFxdjVianVveVFob0lKYkVwang2eHRvZjFTTlN3dFBEakQNCnRTYXd6aGFiS1lUZ1NhancyOHpJeUo0VHBGVWlBQk9TTmtBNGFZV3Z0ampIUEtQcklqVlRjazBEQXJXSDJMcjkNCngwZHZwQ0lJbkR5ZklpYjlkY0UwY2RHVmxFcGVBRU1RRmpwVWJtQ05wVGxLVXRTcm9ZOENmWkNPbWkrUnAvZlQNCjBOOVBvTy9JenhsMVV2SGI5eHhmdTR2YXNWanQzTC9GdThQSXc4R0o3MHUvV3MrbWczZ2E4dURPbHVZbitWRHENCk8xTGUyUUp2U0swSjlkUzIxcndWNlNDdGYrZW4yUmF6aTAvUzQ0dHpPRmE0ZlJkSkxIVFlQdXR1NjlwNitZTWgNClN1bCsrN0cxNEJMd2htV2EyaVJjancrQWxRPT0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  1-DOD_SW_CA-61.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQXFTZ0F3SUJBZ0lDQU1Jd0NnWUlLb1pJemowRUF3TXdXekVMTUFrR0ExVUVCaE1DVlZNeEdEQVcNCkJnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVNTUFvR0ExVUVDeE1EUkc5RU1Rd3dDZ1lEVlFRTEV3TlENClMwa3hGakFVQmdOVkJBTVREVVJ2UkNCU2IyOTBJRU5CSURVd0hoY05NVGt3TkRBeU1UTTBNVEkwV2hjTk1qVXcNCk16TXhNVE0wTVRJMFdqQmFNUXN3Q1FZRFZRUUdFd0pWVXpFWU1CWUdBMVVFQ2hNUFZTNVRMaUJIYjNabGNtNXQNClpXNTBNUXd3Q2dZRFZRUUxFd05FYjBReEREQUtCZ05WQkFzVEExQkxTVEVWTUJNR0ExVUVBeE1NUkU5RUlGTlgNCklFTkJMVFl4TUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVkd1hXL3BWZzZob2RSOEw4emNndVpQU1cNCkNuRXBCdzljUW5RU1hFMGNlNS80TkpFY2dQNCt6WHNGOUJES2prVlVGWEdBZHNrRm1jekVXRlU3WnRNTmg3UjgNCjFRc1o4TjZ2UkNJTFk0TktKeGFnK0JGU0psbnJ5SUJnNFIwN0tqOXNvNElCT2pDQ0FUWXdId1lEVlIwakJCZ3cNCkZvQVVoc0FWUXZ0eGR0dytMUkZiSVJCRU5jckIzQlF3SFFZRFZSME9CQllFRktlRjhpaUJLR2lRSWFsWFRQZnMNCmtkQWRUbUgvTUE0R0ExVWREd0VCL3dRRUF3SUJCakE5QmdOVkhTQUVOakEwTUFzR0NXQ0dTQUZsQWdFTEpqQUwNCkJnbGdoa2dCWlFJQkN5a3dDd1lKWUlaSUFXVUNBUXNzTUFzR0NXQ0dTQUZsQWdFTE96QVNCZ05WSFJNQkFmOEUNCkNEQUdBUUgvQWdFQU1Bd0dBMVVkSkFRRk1BT0FBUUF3TndZRFZSMGZCREF3TGpBc29DcWdLSVltYUhSMGNEb3YNCkwyTnliQzVrYVhOaExtMXBiQzlqY213dlJFOUVVazlQVkVOQk5TNWpjbXd3U2dZSUt3WUJCUVVIQVFFRVBqQTgNCk1Eb0dDQ3NHQVFVRkJ6QUNoaTVvZEhSd09pOHZZM0pzTG1ScGMyRXViV2xzTDJsemMzVmxaSFJ2TDBSUFJGSlANClQxUkRRVFZmU1ZRdWNEZGpNQW9HQ0NxR1NNNDlCQU1EQTJnQU1HVUNNUUNid1FLcy9CMGMxR3hUbDQ4SHlXWE0NCjJOTis0emRGSjl2RWU3SlA1SkxFdXk5TWVLMThFU1hLMlVEdTMra1FlVFVDTUhNeUw1MVRwTGxsVENYREtoZzENCm4zR3c0Zy9oa29nZXk2UnI2WkhuQUcxeEluZzMxRFRJK3h3Mk90VldURDkrRHc9PQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  1-DOD_SW_CA-66.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVqekNDQTNlZ0F3SUJBZ0lDQlY4d0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3Q2dZRFZRUUwNCkV3TlFTMGt4RmpBVUJnTlZCQU1URFVSdlJDQlNiMjkwSUVOQklETXdIaGNOTWpFd05qQTRNVE0xTnpFNFdoY04NCk1qY3dOakE1TVRNMU56RTRXakJhTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUTGlCSGIzWmwNCmNtNXRaVzUwTVF3d0NnWURWUVFMRXdORWIwUXhEREFLQmdOVkJBc1RBMUJMU1RFVk1CTUdBMVVFQXhNTVJFOUUNCklGTlhJRU5CTFRZMk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNGhvdW9WWC8NCkxpM1Zra0dxekxJVU9MZGExaTczUEp2dFdCZFNESWVkOG92V0ZhK3RRSjAvdkNsdVNjdExHZ1YxNzFpSFdJdGcNCmxhT0Zrb3prNHBkQnU1ZFc0TjUxamZrVFlielB0MHRCWnFKMEIyMGMvdXhRVWtJcThsZU1BaUJuajVuMVhSdkUNCklQbXBjaDhydkdBVndETk9qSys3R2lCbG1tOUFmaTJkUnZET2FuQjFDNU5rdnlTd3NoSXg4MTkxSFFhVnh3RWUNCjVDRm9IcjEvTjFDRkRaNjVqTHNIbEYrT0ZSQTBVUW5zVDRhUk1zZFV0VW04SVE4MVdnQ1NCa1lFMWlWZm0rY1kNCkdwOUlBSjRwakhlSnQzVmpZaENVWkExdElTaUViand0OEhvcy9vUW55NWpXM0EwY0t1S0NOOUQrQ1Z6b2JiMloNCmoxbjlLdFhHd283UnBRSURBUUFCbzRJQlhEQ0NBVmd3SHdZRFZSMGpCQmd3Rm9BVWJJcVVvbmV4Z0hJZGdYb1cNCnF2TGN6bWJ1UmNBd0hRWURWUjBPQkJZRUZPc0dVNWd3aHA3Zlhvc0xvU1ltK3FaaEQ3bVVNQTRHQTFVZER3RUINCi93UUVBd0lCaGpBOUJnTlZIU0FFTmpBME1Bc0dDV0NHU0FGbEFnRUxKREFMQmdsZ2hrZ0JaUUlCQ3ljd0N3WUoNCllJWklBV1VDQVFzcU1Bc0dDV0NHU0FGbEFnRUxPekFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUF3R0ExVWQNCkpBUUZNQU9BQVFBd053WURWUjBmQkRBd0xqQXNvQ3FnS0lZbWFIUjBjRG92TDJOeWJDNWthWE5oTG0xcGJDOWoNCmNtd3ZSRTlFVWs5UFZFTkJNeTVqY213d2JBWUlLd1lCQlFVSEFRRUVZREJlTURvR0NDc0dBUVVGQnpBQ2hpNW8NCmRIUndPaTh2WTNKc0xtUnBjMkV1Yldsc0wybHpjM1ZsWkhSdkwwUlBSRkpQVDFSRFFUTmZTVlF1Y0Rkak1DQUcNCkNDc0dBUVVGQnpBQmhoUm9kSFJ3T2k4dmIyTnpjQzVrYVhOaExtMXBiREFOQmdrcWhraUc5dzBCQVFzRkFBT0MNCkFRRUFFSS9mTXNuR1M3RWRYcDlUK1NVMjJ5dzdUT01QblpuczBuUWJjeDA5YUtWOUxTNURDNmo1c2lOVVVzMzcNCmJFZUpMUFNETjVKcUMyakhBN0M1VVNKNitRZTY1a3ZsVUN2Q3VBS3d0Zk9udjBLZXdwWm54QmNSYUVlYmJwUlgNCm56RmIrMngvUmJRWXozYjBvTitzckt5S0VGaWUwVVNJdHl1VkFCNGVZb2xTYlVRNWtYSU1EYkQ3anhTa01zZmkNCjJ0OGNwSFhwTnZQRUdBTXo4S0ZVUjVFU1l0RTR1ZVBaQjRnT1hCUDJ4N1hiQzQrbWJTcVhnYXBmKzBMMGRXWG8NClBHSFFaV3JQWE1KcThuSjlDcnBzOEt1Y2FtdGxSZ2UrK01nc1dSaTVCL29UYUpOQmZhYkQ3YlpjSSt0RzhNU20NCmpZRGtnZk9pNW51UkMrSHVZUUpmbk4vSkx3PT0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  1-DOD_SW_CA-67.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVqekNDQTNlZ0F3SUJBZ0lDQldBd0RRWUpLb1pJaHZjTkFRRUxCUUF3V3pFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3Q2dZRFZRUUwNCkV3TlFTMGt4RmpBVUJnTlZCQU1URFVSdlJDQlNiMjkwSUVOQklETXdIaGNOTWpFd05qQTRNVE0xT0RJMVdoY04NCk1qY3dOakE1TVRNMU9ESTFXakJhTVFzd0NRWURWUVFHRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUTGlCSGIzWmwNCmNtNXRaVzUwTVF3d0NnWURWUVFMRXdORWIwUXhEREFLQmdOVkJBc1RBMUJMU1RFVk1CTUdBMVVFQXhNTVJFOUUNCklGTlhJRU5CTFRZM01JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBbUd4RUF6NEUNCkFBQzFJTnhwWnBXY3ZCdkdBREUxRWNMQ0Y2eWwyUStweDdkb2wrTTNpRnJhbjJ4Um5HK1BhdEo3TXlIZmxZRlQNCmlNcmpmTkJqZ2QwV2hjamRZSVFxd0E0N3ZGd01ESzlHQXI0RHBGOVRoOFhhM1N6MVcyUFFqMWlzSEtOb2RLdmsNCklDT0J1ZGYzOGUrNnhoUXlQeEMvcnlQS2E4T3pIUnZ6elZHaHhqUWpnOG1XTnhmMXRESGFqMUYxdk91M3JEeGoNCmsyQkdiR0tUU1EzNTRFMmpDa0RMcUt6Q0N6cHNLVk5QdGt1QzFMd1VmbHJQQkpyZUZxNnBZT2xGRkJ1OVlnVFoNCnE1RDZPNG1yOTM4OFlsM1VKRWVacTcwUE9md2QrTGc4b1BEUzhnZVZ0WHV4b2hDZEUwbHczVXJXNW9HTzEwZS8NCkR3aHh2bXlCa1lqbEd3SURBUUFCbzRJQlhEQ0NBVmd3SHdZRFZSMGpCQmd3Rm9BVWJJcVVvbmV4Z0hJZGdYb1cNCnF2TGN6bWJ1UmNBd0hRWURWUjBPQkJZRUZOdTBxNk9NS1VXOXJTcFdOOHhVWGJ6WC9Tb25NQTRHQTFVZER3RUINCi93UUVBd0lCaGpBOUJnTlZIU0FFTmpBME1Bc0dDV0NHU0FGbEFnRUxKREFMQmdsZ2hrZ0JaUUlCQ3ljd0N3WUoNCllJWklBV1VDQVFzcU1Bc0dDV0NHU0FGbEFnRUxPekFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUF3R0ExVWQNCkpBUUZNQU9BQVFBd053WURWUjBmQkRBd0xqQXNvQ3FnS0lZbWFIUjBjRG92TDJOeWJDNWthWE5oTG0xcGJDOWoNCmNtd3ZSRTlFVWs5UFZFTkJNeTVqY213d2JBWUlLd1lCQlFVSEFRRUVZREJlTURvR0NDc0dBUVVGQnpBQ2hpNW8NCmRIUndPaTh2WTNKc0xtUnBjMkV1Yldsc0wybHpjM1ZsWkhSdkwwUlBSRkpQVDFSRFFUTmZTVlF1Y0Rkak1DQUcNCkNDc0dBUVVGQnpBQmhoUm9kSFJ3T2k4dmIyTnpjQzVrYVhOaExtMXBiREFOQmdrcWhraUc5dzBCQVFzRkFBT0MNCkFRRUFJVzZ6TnphcTZ3aUpTVC9sSEdqOFg0VEVoZXpwb1ZEZFZmOWE0eUQ4bXpEbFRnR3B3WU5ZRDBlWG0zL0INCjMvRFhKUjFEVUtvTmpiN2ZQb21ybjBtcU1ic2puOVBvcmpCdnJqSEdrOGhuelRhV3hueS9VaktPWlB1bk9ycXINCnhOQWRHNzdzYzFUYllBQmFWcjdSL3FCVjV2WUdFWUcwekc0bHdnd09HZnpIczVEQ1dsY1o5UlhlTUM4Rm1wVTINClY1cHJyZ3k0b1ViOVcrUGUyNDBpNWJURkZnazBLWnBHekd3eG1taXA0N2h2bm4yV29Palh1TUNPOG9GUElEOTcNCmI3SHRxVnc0NEZkaGNYOTFpU3NGOTQyMjdMOTdGV2oycUloK2hnOUhyNytsblVWMmpudzc4VkRBQUdZb0MyaisNCndGRGVtQmc2RC9nT0dva0pYbGZyNUczUnRRPT0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-dod-trust-anchors-self-signed
  namespace: default
data:
  0-DoD_Interoperability_Root_CA_2_SS.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlEOHpDQ0F0dWdBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURCc01Rc3dDUVlEVlFRR0V3SlZVekVZDQpNQllHQTFVRUNoTVBWUzVUTGlCSGIzWmxjbTV0Wlc1ME1Rd3dDZ1lEVlFRTEV3TkViMFF4RERBS0JnTlZCQXNUDQpBMUJMU1RFbk1DVUdBMVVFQXhNZVJHOUVJRWx1ZEdWeWIzQmxjbUZpYVd4cGRIa2dVbTl2ZENCRFFTQXlNQjRYDQpEVEV3TVRFeU9URTBNalV4TUZvWERUTXdNVEV5TkRFME1qVXhNRm93YkRFTE1Ba0dBMVVFQmhNQ1ZWTXhHREFXDQpCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3Q2dZRFZRUUxFd05RDQpTMGt4SnpBbEJnTlZCQU1USGtSdlJDQkpiblJsY205d1pYSmhZbWxzYVhSNUlGSnZiM1FnUTBFZ01qQ0NBU0l3DQpEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGZHMElPVDVndURLZWdvTzdaSzRLeU1uclJWDQp3OThZZnVLemMzSzBhS0ZtMkpoajZyNlBYc0FPRWExLzB2T2xKUy91ZnFQWWtJMUxJV0RUM3orRkcveERGNzJzDQp6ZEgrNEMzK3ZVWWZQcGhXaU44SFRKSUV0QVhWRmVDYXBNTlIwd3A0MkR6OFhCemx6U05KbDFBK3NiUzJvbE5TDQpOQWt4QTR3VDUrbE53L3NEM0FLald0VnRhNjhXSzlSTy9udWdRVGp0UzY4bU5iV2NpV2tPNlNYTnNVMHpyNDV0DQpaWkVvNWR6OWN1ajRwakV6a3Yvd0FxTlFUb0hCK0RUcmxTa0pwZHFyWUdIOTZybFBTakdLbDJiNHd3RFMwb2FqDQpRa1BUdTNrbkxtKzFzbVhsUzQxSnJ4Q3gwbHQxZHhCMDR4YnlKR2Q0RExiMk5nOUM3Lytqd0x2R1hyVUNBd0VBDQpBYU9CbnpDQm5EQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQi93UUVBd0lCaGpBZEJnTlZIUTRFDQpGZ1FVLy9pdUU0dVNLM21TUWFOMlhDeUJucHJGbkhnd1dnWUlLd1lCQlFVSEFRc0VUakJNTUVvR0NDc0dBUVVGDQpCekFGaGo1b2RIUndPaTh2WTNKc0xtUnBjMkV1Yldsc0wybHpjM1ZsWkdKNUwwUlBSRWxPVkVWU1QxQkZVa0ZDDQpTVXhKVkZsU1QwOVVRMEV5WDBsQ0xuQTNZekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBVlNLTEwvZGV6T1k0DQpNaXpFODBSTEdjamd0TVc4VFVzSlA2c1BQN0xndFBpZzN0aFhFRDgvTE5LL05EZUFVMDNqV1J6SmdJVytvNDBVDQpwVTlRV0lxc3RrekNWdXpoODUxMk83M2hVQ0N6N0M2VHQrZFBHZmI0VXNLSFNGUGlpbUkwUjFUV0VUMVJQNWVqDQpwaldDOHM0aEM3M09KYnNVOVljYzdmR1N1L1YrVkVkSWJjT3d3cTNDV0ExNERBOGZZS1dsbVFUd0NmTXY0a3VZDQp1UmdBN0hxVVMvbzJDdW1ISDBlNU9TbVJZM1dpSk9FRU1wZ3pTVjNuUDVqa0Z2TzR1VlJxSXJ3ZExUZExFNUdXDQpGRzZGS0JFbDE5WFNDbXRmKzF5UUZvWksxSkZBbFFqSGRGQW1STEVUNGtVNXEyWHJSemlCeHZPTC80WktoTWZrDQplQ2RFaUJNUG5nPT0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCg==
  0-DoD_Root_CA_3.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlEY3pDQ0FsdWdBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURCYk1Rc3dDUVlEVlFRR0V3SlZVekVZDQpNQllHQTFVRUNoTVBWUzVUTGlCSGIzWmxjbTV0Wlc1ME1Rd3dDZ1lEVlFRTEV3TkViMFF4RERBS0JnTlZCQXNUDQpBMUJMU1RFV01CUUdBMVVFQXhNTlJHOUVJRkp2YjNRZ1EwRWdNekFlRncweE1qQXpNakF4T0RRMk5ERmFGdzB5DQpPVEV5TXpBeE9EUTJOREZhTUZzeEN6QUpCZ05WQkFZVEFsVlRNUmd3RmdZRFZRUUtFdzlWTGxNdUlFZHZkbVZ5DQpibTFsYm5ReEREQUtCZ05WQkFzVEEwUnZSREVNTUFvR0ExVUVDeE1EVUV0Sk1SWXdGQVlEVlFRREV3MUViMFFnDQpVbTl2ZENCRFFTQXpNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXFld1Vjb3JvDQpTM0NqMmhBRGhLYjdwellOS2pwU0ZyOHdGVktHQlVjZ3o2cW16WFhFWkc3djhXQWp5d3BtUUs2MHlHZ3FBRkZvDQpTVGZwV1RKTmxieERKK2xBalRvUXpoUzhReGloK2Q3TTU0VjJjMTRZR2lOYnZUOGY4dTJOR2N3RDBVQ2tqNmNnDQpBa3duV25rMjlxTTNJWTRBV2dZV3l0TlZsbTh4S2J0eURzdmlTRkh5MURla05kWnY3aGV6c1FhckN4bUc2Q050DQpNUnNvZUdYRjNtSlN2TUY5Nis2Z1hWUUUrN0xMSzdJalZKR0NUUEMvdW5SQU93d0VSWUJuWE1Ycm9sZkRHbjhLDQpMYjEvdWR6Qm1iRElCK1FNaGphVU9pVXY4bjNtbHp3YmxMU1hXUWJKT3VRTDJlcnAvRHR6TkcvOTU1ams4NkhDDQprRjhjOVQ4dTF4blRmd0lEQVFBQm8wSXdRREFkQmdOVkhRNEVGZ1FVYklxVW9uZXhnSElkZ1hvV3F2TGN6bWJ1DQpSY0F3RGdZRFZSMFBBUUgvQkFRREFnR0dNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMDQpCUUFEZ2dFQkFKOXhwTUMybHRLQVE2Qkk2UjkyQlBuRlBLMW1HRmhqbThPMjZHaUtoVnBDWmhLMDB1YUxpSCtIDQo5SmoxcU1ZSnlSL3dMQi9zZ3JqMHBVYzR3VE1yMzB4K21yNExDN0hMRDN4UUtCRFBpbzJpNmJxc2h0ZlVzWk5mDQpJbytXQmJST0RIV1JmZFB5NTVUQ2xCUjJUNDhNcXhDSFdES0ZCM1dHRWd0ZTZsTzBDc2hNaEpJZjYraEJoank2DQo5RTVCU3RGc1dFZEJ3NFphOHU3cDhwZ25ndW91TnRiNEJsNkM4YUJTazBRSnV0S3BHVnBZbzZoZElHMVBaUGd3DQpoeHVRRTBpQnpjcVF4dzNCMUpnL2p2SU9WMmd6RW82WkNiSHc1UFlROURieVNiM3FvempJVmtFamc1cmZvUnMxDQpmT3MvUWJQMWIwczZYcTV2azNhWTB2R1puVVhFam5JPQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0KDQo=
  0-DoD_Root_CA_4.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlCNnpDQ0FZK2dBd0lCQWdJQkFUQU1CZ2dxaGtqT1BRUURBZ1VBTUZzeEN6QUpCZ05WQkFZVEFsVlRNUmd3DQpGZ1lEVlFRS0V3OVZMbE11SUVkdmRtVnlibTFsYm5ReEREQUtCZ05WQkFzVEEwUnZSREVNTUFvR0ExVUVDeE1EDQpVRXRKTVJZd0ZBWURWUVFERXcxRWIwUWdVbTl2ZENCRFFTQTBNQjRYRFRFeU1EY3pNREU1TkRneU0xb1hEVE15DQpNRGN5TlRFNU5EZ3lNMW93V3pFTE1Ba0dBMVVFQmhNQ1ZWTXhHREFXQmdOVkJBb1REMVV1VXk0Z1IyOTJaWEp1DQpiV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJHOUVNUXd3Q2dZRFZRUUxFd05RUzBreEZqQVVCZ05WQkFNVERVUnZSQ0JTDQpiMjkwSUVOQklEUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUjJ5TmhEeXc4SDBpd1BLdEE0DQo4WUxOUWxYbjNCMWFnTGNJa1V0VTFrK3lab1UwbG8wdVB2VGdTcEY4ek0yR254SGdVcUZtZ3NiTGtDUHNYMS8xDQo4RHhGbzBJd1FEQWRCZ05WSFE0RUZnUVV2Y0c1YTAzMEhld3drTDlpYzhDRU0vSnhKSVV3RGdZRFZSMFBBUUgvDQpCQVFEQWdHR01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0RBWUlLb1pJemowRUF3SUZBQU5JQURCRkFpRUE2R0dLDQo5OXlxQ2FVSDBrU2VnZ05hUkZOSGhDT1p6MXpUM2twZTFyczFOVVlDSUhZUHVNUjhGalYvMUJMdGlEMkFFV3RrDQpCMHhGWmQ5VHJsOEI3ZkZEMHZXMw0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
  0-DoD_Root_CA_5.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKRENDQWFxZ0F3SUJBZ0lCRHpBS0JnZ3Foa2pPUFFRREF6QmJNUXN3Q1FZRFZRUUdFd0pWVXpFWU1CWUcKQTFVRUNoTVBWUzVUTGlCSGIzWmxjbTV0Wlc1ME1Rd3dDZ1lEVlFRTEV3TkViMFF4RERBS0JnTlZCQXNUQTFCTApTVEVXTUJRR0ExVUVBeE1OUkc5RUlGSnZiM1FnUTBFZ05UQWVGdzB4TmpBMk1UUXhOekUzTWpkYUZ3MDBNVEEyCk1UUXhOekUzTWpkYU1Gc3hDekFKQmdOVkJBWVRBbFZUTVJnd0ZnWURWUVFLRXc5VkxsTXVJRWR2ZG1WeWJtMWwKYm5ReEREQUtCZ05WQkFzVEEwUnZSREVNTUFvR0ExVUVDeE1EVUV0Sk1SWXdGQVlEVlFRREV3MUViMFFnVW05dgpkQ0JEUVNBMU1IWXdFQVlIS29aSXpqMENBUVlGSzRFRUFDSURZZ0FFTm1MZUMwN0F4OWNwUlRwL0hKbm1LaUYyCnNRRGRqRWYvd0xHMCtzNDZUbEw3cCswMkxSd2VISkNObDZvcnB1TFRjM044WEJ6UVovUUtLZE9RaE90UjVmRmUKSE1EU2hvVEZiZEVrU1E3c0Y0bmthTWplR2x3YUJ0QTRHVE1wQVJxQm8wSXdRREFkQmdOVkhRNEVGZ1FVaHNBVgpRdnR4ZHR3K0xSRmJJUkJFTmNyQjNCUXdEZ1lEVlIwUEFRSC9CQVFEQWdFR01BOEdBMVVkRXdFQi93UUZNQU1CCkFmOHdDZ1lJS29aSXpqMEVBd01EYUFBd1pRSXdRUWJrM3Q1aU5KM2Z1S29XMlcyaU9CODVJbGZKY0lRZmt3OVgKZmdVdnBVc3p6UlhxVjlYU0t4K2JqWHpPYXJiTUFqRUF0NEhTNFR1VHp4RmszQXN2RjlKdDFkZ0Y1RkJ5WW1YYwpwRHpLWWFVR21zbjc3Y1F3eVh1SjRLVytZMVhtbkJIagotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  0-US_DoD_CCEB_Interoperability_Root_CA_2.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVDVENDQXZHZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREIwTVFzd0NRWURWUVFHRXdKVlV6RVkKTUJZR0ExVUVDaE1QVlM1VExpQkhiM1psY201dFpXNTBNUXd3Q2dZRFZRUUxFd05FYjBReEREQUtCZ05WQkFzVApBMUJMU1RFdk1DMEdBMVVFQXhNbVZWTWdSRzlFSUVORFJVSWdTVzUwWlhKdmNHVnlZV0pwYkdsMGVTQlNiMjkwCklFTkJJREl3SGhjTk1UWXdPREl6TVRNMU56RXdXaGNOTXpBeE1qTXdNVE0xTnpFd1dqQjBNUXN3Q1FZRFZRUUcKRXdKVlV6RVlNQllHQTFVRUNoTVBWUzVUTGlCSGIzWmxjbTV0Wlc1ME1Rd3dDZ1lEVlFRTEV3TkViMFF4RERBSwpCZ05WQkFzVEExQkxTVEV2TUMwR0ExVUVBeE1tVlZNZ1JHOUVJRU5EUlVJZ1NXNTBaWEp2Y0dWeVlXSnBiR2wwCmVTQlNiMjkwSUVOQklESXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFERUJBa2MKZXRoTUZXL1lPMlZCdG9oNk4vUFV3SGdTWGc3OUFjUUpoaFBUbWRNRDRydGVBNHhWWGM3NkNYS1U0dkVKbXJ2Qgo3Z3hCS05rTGo5Mk5EWXVvT0JlaVppTDREemV5cUJGbjM0SUxGVVVhWUZoK3IrdGF2L1VCQjJscUJ6YTJRTzQvCkdTeVgrZWpRcTFlL0Y0MjBxbHBFaU9pUzNwKzF3ZG9TNURxUXpYRXc3b3l4RVZpU0VNZDNqOTRZQnBnNm9Qd1cKejBNV2U3bXJxVUJsaG1jT05yYTZrcERDSUVHcG00aTZUQnZub3B4Q1hUR25ZVTRXMXZ0eUQvdDFxa0hjMXJmcgpjUXhEN2E5MnZvTEdUczJjQlRTT3IzK00rWGMyMXJSL3Zyd01ZUWJGTkM5WkZ0S2x6QW1qUWhZalQrT2lhUUFBCjdRbHl1elExYzkyejFOR2JBZ01CQUFHamdhVXdnYUl3SFFZRFZSME9CQllFRkJZcmtkcmlGd3lXcTF4OTNuMUkKOGwyb0FLem5NQTRHQTFVZER3RUIvd1FFQXdJQkJqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01HQUdDQ3NHQVFVRgpCd0VMQkZRd1VqQlFCZ2dyQmdFRkJRY3dCWVpFYUhSMGNEb3ZMMk55YkM1a2FYTmhMbTFwYkM5cGMzTjFaV1JpCmVTOVZVMFJQUkVORFJVSkpUbFJGVWs5UVJWSkJRa2xNU1ZSWlVrOVBWRU5CTWw5SlFpNXdOMk13RFFZSktvWkkKaHZjTkFRRUxCUUFEZ2dFQkFENm11KzgycFdtMVRkNmd0R1R5VjJOYTFVaDFsUGpjMXoxQysvcVVGblo3RFNWZApBRzBqKzRjQW1acE5sTEpHWEVqbjhYcDM0V3R2K1Z4amV6Ujk5WENLWk5UQTU2aUczTUx6cjgvVEJlR3ZudVlMCkt0akt0SHpMZCtNUVlra1lFLzg2OVZLK0pUcXR4SklqcGkvcHlNVkxBRS9HQlRIVEN4QXpEcG5RZE9PYjJQdGgKMkZQUFFjM2tuRnJzRjFkdWcrdkVUZWNQN25oc3N0VzNlOGhzeVVFbXdPSlVMWXFFcHdSUnM2VXplTzdhUkMxZQorbTQxZjVvUEluUTRxdUlWZVp4UWg2V1U2RUI3SmgyMXlmZWhuM0NmS3d5SXhzdTRmdS9IbHlqaEFEY1lCaDkrCnBPTjg3d2VWMHNCL1FzdkZIb09TcVFZcldBcDRGN2xpMFk3aGpWZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
---
# Source: gitlab/templates/bigbang/secrets/DoD_CA_certs.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ca-certs-eca
  namespace: default
data:
  0-ECA_Root_CA_4.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREJOTVFzd0NRWURWUVFHRXdKVlV6RVkKTUJZR0ExVUVDaE1QVlM1VExpQkhiM1psY201dFpXNTBNUXd3Q2dZRFZRUUxFd05GUTBFeEZqQVVCZ05WQkFNVApEVVZEUVNCU2IyOTBJRU5CSURRd0hoY05NVEl3TXpJd01UWXhNekEwV2hjTk1qa3hNak13TVRZeE16QTBXakJOCk1Rc3dDUVlEVlFRR0V3SlZVekVZTUJZR0ExVUVDaE1QVlM1VExpQkhiM1psY201dFpXNTBNUXd3Q2dZRFZRUUwKRXdORlEwRXhGakFVQmdOVkJBTVREVVZEUVNCU2IyOTBJRU5CSURRd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQQpBNElCRHdBd2dnRUtBb0lCQVFDNGNHbFh2WUJhUWNBWjVwWG4xSUlUM0N3NFM0cUN5aHlJWFk1K1BBeHZaZUhhCnVCeHhHTGJlRkFoNTI4YUttZTM2SWQxaUdBQXQ4QlRNV2s1M252TG9keFFERk1hcC9iSVNvR2YvSHpkNjBIQ1AKbHRkd0pBNHRuVVZlUEFBVDdxQTZNUnFRSUZkbDVEQVh4c2tFZWQwZS82REk3MStzQUNVNkFiK1duQVNWanExUwpzNUZ3OVBUc00rRVBDQmVDdUlZS1B6blIzSkE1eHo2NU15bUQyUXJvRStCZVBRMGxnTVJzenl3dWdDclFMVUJKCkc4U2N0dk0yS1Nic01RQnpHczEzbGEzbExFdnhGQ2syNkRGYzN2VmNqM1picXdIV3orZk5KNnYwdEhOUVFqUWwKaDFkYUhsU1pPNXNCNnNYZGxhT3djcmJzY0tFcXFvWDY4YWs0bEJVSEFnTUJBQUdqUWpCQU1CMEdBMVVkRGdRVwpCQlF6VzZWdmVsVmdLNEZMSmhUTWViOUt1b3N5dlRBT0JnTlZIUThCQWY4RUJBTUNBWVl3RHdZRFZSMFRBUUgvCkJBVXdBd0VCL3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXRoOWhlSWErdFhweEY0cngxMFVDRmZlNklNWGwKazJrbFhoVnhPVTdCMGRqb2UwTzdqUm5Sd0NEZjUwMnJpbDEvZ0NDTmplOENhSXJWQUp3aHR3V3M1N2VQc1pSVApQYmx1K1Bmb2dsWFJLQ1JsZ09VV3g3QkVDOU9FVWtNanlOcjdYdllCaHRrM3YvMXV1RkRJRGVZOGRQb0xiby95CmpNUGZVTGVmS1BpdVVCeWF6TDUyYmtyYTlMVW9OYUVkY3BGMkdpRHZPc2hFa01BZEJudXd6YmpCNXJKYlQwZ1YKV2lPamFza0dXbnlNaUVSeGlacm5hdDQ5Q2EvUnk3eVZwd2hYamxHaE1SSFRjZkNENzFESDdubHNPeU5qK0pwbQpiZzRwSUJ1dEpjMjV1TDhiMG5OQUFNTk5ySWxrOFhPZ2c0a09HblNZcUpROHRuVHNsRTRDRmVzeGJnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoK
  1-IdenTrust_ECA_Component_S23.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVxakNDQTVLZ0F3SUJBZ0lDQmlZd0RRWUpLb1pJaHZjTkFRRUxCUUF3VFRFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJVTkJNUll3RkFZRFZRUUQNCkV3MUZRMEVnVW05dmRDQkRRU0EwTUI0WERUSXlNRFF3TlRFMU16Z3lORm9YRFRJNE1EUXdOVEUxTXpneU5Gb3cNCmZ6RUxNQWtHQTFVRUJoTUNWVk14R0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVNTUFvR0ExVUUNCkN4TURSVU5CTVNJd0lBWURWUVFMRXhsRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBhV1Z6TVNRd0lnWUQNClZRUURFeHRKWkdWdVZISjFjM1FnUlVOQklFTnZiWEJ2Ym1WdWRDQlRNak13Z2dFaU1BMEdDU3FHU0liM0RRRUINCkFRVUFBNElCRHdBd2dnRUtBb0lCQVFER1RtZkNrSUVzb0s1WW8xOStiUUQ1N3M3MUtNM043SXdKTC9IK1llcUUNCit5cUY2UkZkK1FIOU5NTlpvelV3NmIvTmt1SlpvdmNtdkVoRUY4NTZEcHZieXZhWVRyMjFmQ1BkMkd2QnZHZm0NCkl2L1o2WWljSFRRMHBRL2E2SmFidlBoUS9rV2hwdVd6MkRpMlgzUktlUWpaTU9lYkxIUzJERU02L3FES1Nmd0INCmFyajR1UjErNXM3L3FPbk4wVUt0WFpSUWY2M3h6VUxJM2I2RmJ6WW80R1BiR2piYTY1ZVR6Z2k5OVE0ZmlyeGENCjcvYVpSaVBvTWlWTkcvNDk4bTB2MUpiRUV4Q0FxUzd3M0FRVXhXVWtyV0J5WE5VR29jaytkNCs2NWlpS1Zob04NCnBsY0xlcTBYbDJNVlBVVUtoU1ZBNm5RSlpmZjdGWVdadlFUWERGRWhWc2RGQWdNQkFBR2pnZ0ZnTUlJQlhEQWYNCkJnTlZIU01FR0RBV2dCUXpXNlZ2ZWxWZ0s0RkxKaFRNZWI5S3Vvc3l2VEFkQmdOVkhRNEVGZ1FVZ0hSb3dhQUkNCmJTWkUxMFBIMXM1bkZHbXpQWUl3RGdZRFZSMFBBUUgvQkFRREFnR0dNRUVHQTFVZElBUTZNRGd3REFZS1lJWkkNCkFXVURBZ0VNQkRBTUJncGdoa2dCWlFNQ0FRd0ZNQXdHQ21DR1NBRmxBd0lCREFrd0RBWUtZSVpJQVdVREFnRU0NCkNqQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQXdHQTFVZEpBUUZNQU9BQVFBd053WURWUjBmQkRBd0xqQXMNCm9DcWdLSVltYUhSMGNEb3ZMMk55YkM1a2FYTmhMbTFwYkM5amNtd3ZSVU5CVWs5UFZFTkJOQzVqY213d2JBWUkNCkt3WUJCUVVIQVFFRVlEQmVNRG9HQ0NzR0FRVUZCekFDaGk1b2RIUndPaTh2WTNKc0xtUnBjMkV1Yldsc0wybHoNCmMzVmxaSFJ2TDBWRFFWSlBUMVJEUVRSZlNWUXVjRGRqTUNBR0NDc0dBUVVGQnpBQmhoUm9kSFJ3T2k4dmIyTnoNCmNDNWthWE5oTG0xcGJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFCK3hRUTlIcHlZSnFuMEptL3VKQUduWksNClIvWnhaYWlnMVRESmdXUis0RWU0aTc3WEc0cDBnM0c1dDd0ME1qRFQwaG1zZjdhZDFkakNSSzR0STJSazI5dHMNCm5ReGVRcjVtRWZtV1N4V3NlTll0UnRtWmZmcmJzVVVzYjUrUC8ydnkyY1BuelFKaFl0NjRWcWZ3MDNYbEttekYNCkI1cHk3M0tEbDJ4T0hEL3ZveEVmc3VmS0Y2SDUyYkJlcmFHTFNmQXBDR1YyYW1wc29xb1J1dFVKTkNWaG80cXgNClpKN25lVHdaSVdaSVJ1YTVXQlZSR0c3MnJySkJ0RTJqU1F3OEdqU25sMVc4c0dLellyVmpsOEVDOWdaMzMva3ANCnlDd0Vpc2RQYVp4MzgvTGVEcnJxZUJpNUZVSGpaOXhiLzhrWkllL1ZLT0J0NEdjL1E0T25xL21KamlTbE5nPT0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  1-IdenTrust_ECA_S22.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVrakNDQTNxZ0F3SUJBZ0lDQXZVd0RRWUpLb1pJaHZjTkFRRUxCUUF3VFRFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJVTkJNUll3RkFZRFZRUUQNCkV3MUZRMEVnVW05dmRDQkRRU0EwTUI0WERURTVNRFV3TnpFeU5UVXlPRm9YRFRJMU1EVXdOekV5TlRVeU9Gb3cNCmRURUxNQWtHQTFVRUJoTUNWVk14R0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVNTUFvR0ExVUUNCkN4TURSVU5CTVNJd0lBWURWUVFMRXhsRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBhV1Z6TVJvd0dBWUQNClZRUURFeEZKWkdWdVZISjFjM1FnUlVOQklGTXlNakNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0MNCkFRb0NnZ0VCQUxlZzA4VnVjZ3dCRWVacXNEWXdicGxvOXZYOVpza3puK1kyUG9SWjFoa3gyaVhmMWZRM0Y5ZGgNCmNUMmdJRHJJL0t0NVBUVGptQ0QwRHVzS0JGUlJYOTlhelpyaE8yK1pab1RyWXhqL0FWRkRrQ0t0SlFXY1IvaXMNCmVzbDBOSUE3UTJaS1ZVREE1TVREc1NxUEhFWEhPdVE0M25GaHROT2dnaTNFd1RmNXlJY3BGL0hGNWNTSlBKSlMNCkpKTGd1NCtzcG8wNXpCd2dJU2hxYnRRR3d5SThndmtZUllaSzRibURiTVBRYWFwdmVOYU1HaXdub2g1TXZDdjUNCmxpMzJHTDkyTXJNK21sQ1hGbmNHVktCRXJZd3BjekF6N0VjaVEvUW04VU5HUXEwbXRUU3ZSMGhuTkxYazlQUEwNCmR0Yml3NzVGZ2N4cSs0UWpqMXlha0JtZUJkNkV1Q0VDQXdFQUFhT0NBVkl3Z2dGT01COEdBMVVkSXdRWU1CYUENCkZETmJwVzk2VldBcmdVc21GTXg1djBxNml6SzlNQjBHQTFVZERnUVdCQlRvcEFRQ25rblNGZEdsWDd2cmxEa0UNCnU0SXBiakFPQmdOVkhROEJBZjhFQkFNQ0FZWXdNd1lEVlIwZ0JDd3dLakFNQmdwZ2hrZ0JaUU1DQVF3RU1Bd0cNCkNtQ0dTQUZsQXdJQkRBVXdEQVlLWUlaSUFXVURBZ0VNQ2pBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1Bd0cNCkExVWRKQVFGTUFPQUFRQXdOd1lEVlIwZkJEQXdMakFzb0NxZ0tJWW1hSFIwY0RvdkwyTnliQzVrYVhOaExtMXANCmJDOWpjbXd2UlVOQlVrOVBWRU5CTkM1amNtd3diQVlJS3dZQkJRVUhBUUVFWURCZU1Eb0dDQ3NHQVFVRkJ6QUMNCmhpNW9kSFJ3T2k4dlkzSnNMbVJwYzJFdWJXbHNMMmx6YzNWbFpIUnZMMFZEUVZKUFQxUkRRVFJmU1ZRdWNEZGoNCk1DQUdDQ3NHQVFVRkJ6QUJoaFJvZEhSd09pOHZiMk56Y0M1a2FYTmhMbTFwYkRBTkJna3Foa2lHOXcwQkFRc0YNCkFBT0NBUUVBU0Fmd0dJNnowSzlpWWY2cEhCQW5JM3JhZ2E0VlBFckRVU09OaUZ0c1hYMGFnVGc1eXNWZ3haSkENCmJYelhmL1BvT2YrK251blBIOUdjUFg1L0ZFNm5UR2xOQi9jcFdiZlo0SFBHak9nWVhHanNpdFFwV2NCNklVNlcNClIzcG9aU1BKOE9xTzFVWUNGcGZCTkRwdndEanJqY1R6bUNkUTNodUYzeGlxbTB6TUYxUzFXQk5UUFR6dDVEVUsNClZSWWw4OExjT1ZzUXFFSTVGM2VtcXRUMWxub1RCZnErZVB6dVBtSEx2eHErY3V1aEJCVDU2aXlsNHlaeVhEbFENCjg4RVA1UCs3QnFVRnU1TVIzbVAvbUd3VlhSdEVkREx3c2lpQVZvQ01JcHJkTDRxcXFtdDZEZ3AyRDl5ZGJ3ZTcNCjd2aGgvWGRXMlNnZXVGbVJwSjE4aHl0MEV2QXdLdz09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  1-IdenTrust_ECA_S22C.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVvVENDQTRtZ0F3SUJBZ0lDQXZZd0RRWUpLb1pJaHZjTkFRRUxCUUF3VFRFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJVTkJNUll3RkFZRFZRUUQNCkV3MUZRMEVnVW05dmRDQkRRU0EwTUI0WERURTVNRFV3TnpFeU5UY3pObG9YRFRJMU1EVXdOekV5TlRjek5sb3cNCmRqRUxNQWtHQTFVRUJoTUNWVk14R0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVNTUFvR0ExVUUNCkN4TURSVU5CTVNJd0lBWURWUVFMRXhsRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBhV1Z6TVJzd0dRWUQNClZRUURFeEpKWkdWdVZISjFjM1FnUlVOQklGTXlNa013Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcNCmdnRUtBb0lCQVFEWHhBSTFqSHdGZFNUNTlDUjVYeHJJWjZhYTBIcVV0bG1hc2ZLQ0o2dmhSYURjaHNKYjU3MG0NCkFWby9HbGJBYUliUDBBeDRLaGE4Q3hlcHBWWTUwRDZJaTVRN2tRYk1WNkFkUU1vMnZzK3FSSjRQOEFVV2J2eUsNCjF1dDl2SkFqb2pxWDFacHNSdVJrRDQzMkovbVhQUmxOMXU3M0ZFampBaVQzcVBtTDAydExaMVM1WEVpWXZzWFYNCjNKYXN3M1dRRlZlOWt3VHlPamtBWTZ1MEdCT3YwaDBzNStmSFV5VDIrMXNJNS9MS1gwVk5IYUNmREdqVzdtcnoNClE3cmdMV3Rkd25La0RCNWxxV250aU5Pai9CampjTWhMWUJjY0RCOUN0dEExZFNsNDlSTW4rbHlNeEh2WU95MmkNClplZjVSQ21LMHpZNHpRYnkzcVZGQlU2ODhUbE1mM1pkQWdNQkFBR2pnZ0ZnTUlJQlhEQWZCZ05WSFNNRUdEQVcNCmdCUXpXNlZ2ZWxWZ0s0RkxKaFRNZWI5S3Vvc3l2VEFkQmdOVkhRNEVGZ1FVbDJKSXdHZHBMRXdVWUluUlNnQTgNCm81Ly9vSzR3RGdZRFZSMFBBUUgvQkFRREFnR0dNRUVHQTFVZElBUTZNRGd3REFZS1lJWklBV1VEQWdFTUJEQU0NCkJncGdoa2dCWlFNQ0FRd0ZNQXdHQ21DR1NBRmxBd0lCREFrd0RBWUtZSVpJQVdVREFnRU1DakFTQmdOVkhSTUINCkFmOEVDREFHQVFIL0FnRUFNQXdHQTFVZEpBUUZNQU9BQVFBd053WURWUjBmQkRBd0xqQXNvQ3FnS0lZbWFIUjANCmNEb3ZMMk55YkM1a2FYTmhMbTFwYkM5amNtd3ZSVU5CVWs5UFZFTkJOQzVqY213d2JBWUlLd1lCQlFVSEFRRUUNCllEQmVNRG9HQ0NzR0FRVUZCekFDaGk1b2RIUndPaTh2WTNKc0xtUnBjMkV1Yldsc0wybHpjM1ZsWkhSdkwwVkQNClFWSlBUMVJEUVRSZlNWUXVjRGRqTUNBR0NDc0dBUVVGQnpBQmhoUm9kSFJ3T2k4dmIyTnpjQzVrYVhOaExtMXANCmJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFZSGpsQmY2NDY1VlhVbkNwV0taWHg5MlVCRmpUVkQ4RTEzL2gNCm91ajZ0eWFNVkw3dDB4ODZFRkV5MzZrY0I1YjEzaGtJN0dDbndhOHpSSGt1WXdCaW5CeWZkbmVUa0hVRTFuU3oNClpGNTZnSTQvNUV0bFVlWEdKK2tXaG5may9BSFF1ZitjOFhWd013RmdteGg5S2R4MG0xU21JM3k3aHZMZS9zN3cNCm5HSE9YUjJCSVFLVjNFWTVVMmlyZ0JReURSWks3Nnpyc1lPak1GdjM3ajhlU3Y1RjdSN0F1S1hjdDNlOGtFVmMNCk1xd2lZQStIM2FRMmxaM1J1YkxuTnNaYXRwcVg2UE85RVdvZm5XUWluczc4U1JpbGJuOTFKa1kvdmJMeFdqNXkNCndmdis1aU4rTyttam1WUU9rcVhKUVQ3VllFWXVmRmZObEJ1aXMxekRpazdJdUg0MFdBPT0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  1-IdenTrust_ECA_S23.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVrakNDQTNxZ0F3SUJBZ0lDQmljd0RRWUpLb1pJaHZjTkFRRUxCUUF3VFRFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJVTkJNUll3RkFZRFZRUUQNCkV3MUZRMEVnVW05dmRDQkRRU0EwTUI0WERUSXlNRFF3TlRFMU5ERTBNbG9YRFRJNE1EUXdOVEUxTkRFME1sb3cNCmRURUxNQWtHQTFVRUJoTUNWVk14R0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVNTUFvR0ExVUUNCkN4TURSVU5CTVNJd0lBWURWUVFMRXhsRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBhV1Z6TVJvd0dBWUQNClZRUURFeEZKWkdWdVZISjFjM1FnUlVOQklGTXlNekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0MNCkFRb0NnZ0VCQU1FNEp1WUhjdDRtVTg0TlhNVVo0UXNnSm1MVFhKMlYrWUFFL0NxQnlYQllDMnRBd0tmMnJHT28NCk9BMHQ3Uit6Z3A2WDA2aFJldldYbnJpUEJTNzNyQVl1WTlGUXNwTWN6YXZ3eXphUTNpQzRTUnhNTzJxQ2ZKS2MNCkF2RWUxakpuaElISytWV1AydENQQkt0S0VlcE1jN1ZWVTNUR2JWT2NLNjdEcHBNWGdSWFNsYVRwL0VrbEtGay8NCjhhSDVkNDN3VTQ4M3hkZ2ZQZ1UxSSsvdEdobUZsRXRKdXk5bDg3b0pFaVRlcDN3alpWYXliNitxZDNIekt2L2MNCmh5YnVZdjFlSVE5aEZYZ3FXSEo1ZXgvZU55djlVQVJTOTNZNTF0YmJOYm5EeTN4VmdqYSsvdDg0Q2w3VXFOL2YNCmlvbHArZTcrU2ZBYUpFZ0JJVFV5aXhmRFlaOFA2amNDQXdFQUFhT0NBVkl3Z2dGT01COEdBMVVkSXdRWU1CYUENCkZETmJwVzk2VldBcmdVc21GTXg1djBxNml6SzlNQjBHQTFVZERnUVdCQlM1c3RqWkhON1RlOVdPUUpneWRrMmMNClhOajlxVEFPQmdOVkhROEJBZjhFQkFNQ0FZWXdNd1lEVlIwZ0JDd3dLakFNQmdwZ2hrZ0JaUU1DQVF3RU1Bd0cNCkNtQ0dTQUZsQXdJQkRBVXdEQVlLWUlaSUFXVURBZ0VNQ2pBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1Bd0cNCkExVWRKQVFGTUFPQUFRQXdOd1lEVlIwZkJEQXdMakFzb0NxZ0tJWW1hSFIwY0RvdkwyTnliQzVrYVhOaExtMXANCmJDOWpjbXd2UlVOQlVrOVBWRU5CTkM1amNtd3diQVlJS3dZQkJRVUhBUUVFWURCZU1Eb0dDQ3NHQVFVRkJ6QUMNCmhpNW9kSFJ3T2k4dlkzSnNMbVJwYzJFdWJXbHNMMmx6YzNWbFpIUnZMMFZEUVZKUFQxUkRRVFJmU1ZRdWNEZGoNCk1DQUdDQ3NHQVFVRkJ6QUJoaFJvZEhSd09pOHZiMk56Y0M1a2FYTmhMbTFwYkRBTkJna3Foa2lHOXcwQkFRc0YNCkFBT0NBUUVBSDU1T3NXODhkRzRTWHM2Qm5BQ09naGNYL1NheGJFNVR5eVNKdlVnS2cvd3F1SXhvYmJqT2VCUUUNCmZ3VUZ6eDhOUThqVldtaUNXaVV1ekNMMDhsNk9WNWlBSU9tZk9oZFhDTHduNXJSSHRtdG0xNitGSFBiTUQ3VnYNCllsWmZaVE1lei9uWDFUT1Z5VjBWYTI3OS9mWDZlTmtnY1UwNG1jcDVJZjlyNDM5TWhka2d5NzRWa3FZbXhFd3oNCkViUmwwMU01Q3p2QnlvbTZTVjh1N2JkSmIwUnNuYTVid2xIcTlITmEreG56SWlZOC8ySmgzRUVibzE3YWdONEgNCmlha3lDOUE5a3RMb3hmRHVQVlMvVDNQNWh1aDJyNktmQmR5T2lSWHBMODRIVllzbU5waVBCQlFob1NZbUJiWFkNCldtTUV5T3hndFVzWXk4dWYzZ1MwSlowbGZiTUlUZz09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  1-WidePoint_ECA_8.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV5RENDQTdDZ0F3SUJBZ0lDQlU4d0RRWUpLb1pJaHZjTkFRRUxCUUF3VFRFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJVTkJNUll3RkFZRFZRUUQNCkV3MUZRMEVnVW05dmRDQkRRU0EwTUI0WERUSXhNRGN3TmpFME5UVTFObG9YRFRJM01EY3dOekUwTlRVMU5sb3cNCmN6RUxNQWtHQTFVRUJoTUNWVk14R0RBV0JnTlZCQW9NRDFVdVV5NGdSMjkyWlhKdWJXVnVkREVNTUFvR0ExVUUNCkN3d0RSVU5CTVNJd0lBWURWUVFMREJsRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBhV1Z6TVJnd0ZnWUQNClZRUUREQTlYYVdSbFVHOXBiblFnUlVOQklEZ3dnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsNCkFvSUJBUUQxVFNuK3hYRkdlZDI1aVhCQ2JmcWx0elRZc3VHVVdmNm1LTDJuYUxDMVZFSC9ZSjZnZWp3dDlJNU8NClJMVDBCUXR5NGVLSDB1cmJRZ2JQRXNjbVBTMjJmSnllVWtTazB6WGZnVUJSV2l0cHBRdFhiQUd5bmZjWk1LYU0NCi9RZ0N6QWFXSWFZS2UzbHVpblhLSmFjdFJjTDk5Vk5kdlpGa1B4WHZuYlpUc2pQbmRmaU5jMVVMZHJOOUUzeEwNCkhobnR5aGJvWE9nRUhNL2poemJmMm1TRVZ1RXg5R3ZkbnZkZVRIbHh6KzkxcnRQa3lscHFMUjRQWE9hQTBPa3YNCitSOFlhUENna3E4dUNGRGlXUVlVV2FtVWY5UGh5MGZLR0tjaU5pSkVCUDk4NDRncWdVNE80bUlMZXNXOWtNLysNCmU2U1IxTlltbXRHb2JhMUpJYkFZOHdVaFRMdUhBZ01CQUFHamdnR0tNSUlCaGpBZkJnTlZIU01FR0RBV2dCUXoNClc2VnZlbFZnSzRGTEpoVE1lYjlLdW9zeXZUQWRCZ05WSFE0RUZnUVVWdFdRR3VxVjBXL2JLdEVPRHZ0NWRRZ0YNCmxGNHdEZ1lEVlIwUEFRSC9CQVFEQWdHR01Hc0dBMVVkSUFSa01HSXdEQVlLWUlaSUFXVURBZ0VNQkRBTUJncGcNCmhrZ0JaUU1DQVF3Rk1Bd0dDbUNHU0FGbEF3SUJEQVl3REFZS1lJWklBV1VEQWdFTUJ6QU1CZ3BnaGtnQlpRTUMNCkFRd0lNQXdHQ21DR1NBRmxBd0lCREFrd0RBWUtZSVpJQVdVREFnRU1DakFTQmdOVkhSTUJBZjhFQ0RBR0FRSC8NCkFnRUFNQXdHQTFVZEpBUUZNQU9BQVFBd053WURWUjBmQkRBd0xqQXNvQ3FnS0lZbWFIUjBjRG92TDJOeWJDNWsNCmFYTmhMbTFwYkM5amNtd3ZSVU5CVWs5UFZFTkJOQzVqY213d2JBWUlLd1lCQlFVSEFRRUVZREJlTURvR0NDc0cNCkFRVUZCekFDaGk1b2RIUndPaTh2WTNKc0xtUnBjMkV1Yldsc0wybHpjM1ZsWkhSdkwwVkRRVkpQVDFSRFFUUmYNClNWUXVjRGRqTUNBR0NDc0dBUVVGQnpBQmhoUm9kSFJ3T2k4dmIyTnpjQzVrYVhOaExtMXBiREFOQmdrcWhraUcNCjl3MEJBUXNGQUFPQ0FRRUFVaUkxdDVvUnYyVGZHZlRnNTh2ZXA0dDBzUjVrSzQyVHNBRTVmWGRQaEoxalpRTEENCmxPLzRXdWV6dVBhMEFZQURhSS9IYUZrazdZM3VXdnpBOVpGOGx2K0RkTXJOVHFBWkROcnBoaWlHTW1xMmRlQ2sNCnpXUjBGVGN0TFcwS0NMajM4R0FLOTd6M0VkL2s0aXp1UjZMR096bk9UUlphdk1qVzlKS0lZWkFPc2o3c2x3dzMNCmUxVkhsZ3hGODF2U1NDMmtHZFBaUjM2T09idDRZNE1rMm96TmF4dEp6UlM3b01PR1NXUE5HWFpsQlVDWUkyVVkNCnBoZm5KenpqSVhsU2Qva0xCeVU4Tm8wQk1uQkhhVDh5dGZLZk5LVUQvNHJueXJ6NUVVYlhlY3ZMZHE4V1lYc0ENCjU1YjZYemIxcjNLdmhqeUtIQ2pwUnB3V1doRnVKMWs1S29tTlJBPT0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  1-WidePoint_ORC_ECA_7.cer: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV6RENDQTdTZ0F3SUJBZ0lDQWpRd0RRWUpLb1pJaHZjTkFRRUxCUUF3VFRFTE1Ba0dBMVVFQmhNQ1ZWTXgNCkdEQVdCZ05WQkFvVEQxVXVVeTRnUjI5MlpYSnViV1Z1ZERFTU1Bb0dBMVVFQ3hNRFJVTkJNUll3RkFZRFZRUUQNCkV3MUZRMEVnVW05dmRDQkRRU0EwTUI0WERURTRNRFl3TlRFek5Ea3lPRm9YRFRJME1EWXdOVEV6TkRreU9Gb3cNCmR6RUxNQWtHQTFVRUJoTUNWVk14R0RBV0JnTlZCQW9URDFVdVV5NGdSMjkyWlhKdWJXVnVkREVNTUFvR0ExVUUNCkN4TURSVU5CTVNJd0lBWURWUVFMRXhsRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBhV1Z6TVJ3d0dnWUQNClZRUURFeE5YYVdSbFVHOXBiblFnVDFKRElFVkRRU0EzTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEENCk1JSUJDZ0tDQVFFQXZ0dUZhWGQzKzhzelZtYW1KcHpzZTdxSjVxODVKLzVtaFJodEFoNUM4MDkzOXdmaW1hYWYNCmR3UVMxVXQzTUJHM3lXMStjTVB2ZkF0RW9qeXcrQU1rZzFjN1NkbXVGaFRXRmdRaEFCbWtuWE9qOFZoV2ZrcC8NCjAybk11OFhUZ3g2cWlaQWw0SUwxNGh4OHJUMzBhcXRxdXpQQmVabitxVnppWUFzRGxqaU1SYVlPWFZ4VkxFZUcNCmd2MnpjSU05ejRFSlJ1Q3RmREJCQjdCQ1pFeXh2TXp6QXlKV2Z5R1NzOUpqMGZlUnZvT1hRZStKdzk0NVRSZlQNCkJQRFRoUUhNMjZYUVBOMThHbVpqeVpnMkRGWWNVRXNlSmJhRVVsTE1lV2xGTU1oMnhNRjA0MjNzL1pBaGpmUFMNCm4vNUZ5UzJlc2xVdlp0aE05TnprbWFYQXFKYmRTTzBRTlFJREFRQUJvNElCaWpDQ0FZWXdId1lEVlIwakJCZ3cNCkZvQVVNMXVsYjNwVllDdUJTeVlVekhtL1NycUxNcjB3SFFZRFZSME9CQllFRkdJOFVEUjVPZUFxN09OREtQbEYNCnBHTjZZS2pqTUE0R0ExVWREd0VCL3dRRUF3SUJoakJyQmdOVkhTQUVaREJpTUF3R0NtQ0dTQUZsQXdJQkRBUXcNCkRBWUtZSVpJQVdVREFnRU1CVEFNQmdwZ2hrZ0JaUU1DQVF3R01Bd0dDbUNHU0FGbEF3SUJEQWN3REFZS1lJWkkNCkFXVURBZ0VNQ0RBTUJncGdoa2dCWlFNQ0FRd0pNQXdHQ21DR1NBRmxBd0lCREFvd0VnWURWUjBUQVFIL0JBZ3cNCkJnRUIvd0lCQURBTUJnTlZIU1FFQlRBRGdBRUFNRGNHQTFVZEh3UXdNQzR3TEtBcW9DaUdKbWgwZEhBNkx5OWoNCmNtd3VaR2x6WVM1dGFXd3ZZM0pzTDBWRFFWSlBUMVJEUVRRdVkzSnNNR3dHQ0NzR0FRVUZCd0VCQkdBd1hqQTYNCkJnZ3JCZ0VGQlFjd0FvWXVhSFIwY0RvdkwyTnliQzVrYVhOaExtMXBiQzlwYzNOMVpXUjBieTlGUTBGU1QwOVUNClEwRTBYMGxVTG5BM1l6QWdCZ2dyQmdFRkJRY3dBWVlVYUhSMGNEb3ZMMjlqYzNBdVpHbHpZUzV0YVd3d0RRWUoNCktvWklodmNOQVFFTEJRQURnZ0VCQUFGZ0VTUmxhUldydVprY2FBTmdFVjhCSlBCbjBxa1h0RHVNY2lVc2c3bk4NCkZicmtyMmI0eXFXOXczSjhXMytGWGdpejFRMHp5dHFsNG9Oc3ZyMVdJZ3lYa0lpa0o3SVp4VlZPUFJIRTdOQ24NCmJpSGhsbisvVWlKWGdESW9VL09KRVJ3WGZFbVk4dk9wM3I4WkE5Qis5RzRHUDdMV2tMdVZIYWh1QlJBUjliakoNClBLMXk4ekYwZHZaMmp0N1dadUlIWkZWR044VGpUcG1sQU5IR3RlUmhiRzV1RkdFcUJJbE5ITDhTa1NKZ1Q3TjQNCllLU3NMd00yR1puVkJscXdmaWxXQkd6T2dtNklOQlJjN1I1OTEyY3RXQnhRRzExUXRWNTB4eGcrT3RpVHdaYkcNCi9aamsyRDB4bEVRb1JOKzhyakZSK1RnWWFLVGEzakVmNGdVRE0wMUZER3M9DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: gitlab/charts/gitlab/charts/gitaly/templates/configmap.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-gitaly
  namespace: default
  labels:
    app: gitaly
    chart: gitaly-7.1.2
    release: gitlab
    heritage: Helm
    
data:
  configure: |
    set -e
    mkdir -p /init-secrets/gitaly /init-secrets/shell
    cp -v -r -L /init-config/.gitlab_shell_secret  /init-secrets/shell/.gitlab_shell_secret
    cp -v -r -L /init-config/gitaly_token  /init-secrets/gitaly/gitaly_token
  config.toml.tpl: |
    # The directory where Gitaly's executables are stored
    bin_dir = "/usr/local/bin"

    # listen on a TCP socket. This is insecure (no authentication)
    listen_addr = "0.0.0.0:8075"

    # Directory where internal sockets reside
    # note: no value will result in a `/tmp/gitlab-internal-*` path
    # internal_socket_dir = "/home/git"

    # If metrics collection is enabled, inform gitaly about that
    prometheus_listen_addr = "0.0.0.0:9236"
    
    {% $storages := coll.Slice  "default" %}

    {% $index := index (.Env.HOSTNAME | strings.Split "-" | coll.Reverse) 0 | conv.ToInt64 %}
    {% if len $storages | lt $index %}
    [[storage]]
    name = "{% index $storages $index %}"
    path = "/home/git/repositories"
    {% else %}
    {% printf "Storage for node %d is not present in the storageNames array. Did you use kubectl to scale up? You need to solely use helm for this purpose." $index | fail %}
    {% end %}

    [logging]
    format = "json"
    dir = "/var/log/gitaly"

    [auth]
    token = {% file.Read "/etc/gitlab-secrets/gitaly/gitaly_token" | strings.TrimSpace | data.ToJSON %}

    [git]
    use_bundled_binaries = true
    ignore_gitconfig = true

    [gitlab-shell]
    # The directory where gitlab-shell is installed
    dir = "/srv/gitlab-shell"

    [gitlab]
    # location of shared secret for GitLab Shell / API interaction
    secret_file = "/etc/gitlab-secrets/shell/.gitlab_shell_secret"
    # URL of API
    url = "http://gitlab-webservice-default.default.svc:8181/"

    [gitlab.http-settings]
    # read_timeout = 300
    # user = someone
    # password = somepass
    # ca_file = /etc/ssl/cert.pem
    # ca_path = /etc/pki/tls/certs

    [hooks]
    # directory containing custom hooks
    custom_hooks_dir = "/home/git/custom_hooks"
---
# Source: gitlab/charts/gitlab/charts/gitlab-shell/templates/configmap-sshd.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-gitlab-shell-sshd
  namespace: default
  labels:
    app: gitlab-shell
    chart: gitlab-shell-7.1.2
    release: gitlab
    heritage: Helm
    
data:
  sshd_config: |
    #	$OpenBSD: sshd_config,v 1.101 2017/03/14 07:19:07 djm Exp $

    # This is the sshd server system-wide configuration file.  See
    # sshd_config(5) for more information.

    # This sshd was compiled with PATH=/bin:/usr/bin:/sbin:/usr/sbin

    # The strategy used for options in the default sshd_config shipped with
    # OpenSSH is to specify options with their default value where
    # possible, but leave them commented.  Uncommented options override the
    # default value.

    Port 2222
    #AddressFamily any
    #ListenAddress 0.0.0.0
    #ListenAddress ::

    #HostKey /etc/ssh/ssh_host_rsa_key
    #HostKey /etc/ssh/ssh_host_dsa_key
    #HostKey /etc/ssh/ssh_host_ecdsa_key
    #HostKey /etc/ssh/ssh_host_ed25519_key

    # Ciphers and keying
    #RekeyLimit default none

    # Logging
    #SyslogFacility AUTH
    LogLevel ERROR

    # Authentication:

    PermitRootLogin no
    #StrictModes yes
    #MaxAuthTries 6
    #MaxSessions 10

    #PubkeyAuthentication yes

    #AuthorizedPrincipalsFile none

    # For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
    #HostbasedAuthentication no
    # Change to yes if you don't trust ~/.ssh/known_hosts for
    # HostbasedAuthentication
    #IgnoreUserKnownHosts no
    # Don't read the user's ~/.rhosts and ~/.shosts files
    #IgnoreRhosts yes

    #PermitEmptyPasswords no

    # Change to no to disable s/key passwords
    #ChallengeResponseAuthentication yes

    # Kerberos options
    #KerberosAuthentication no
    #KerberosOrLocalPasswd yes
    #KerberosTicketCleanup yes
    #KerberosGetAFSToken no

    # GSSAPI options
    #GSSAPIAuthentication no
    #GSSAPICleanupCredentials yes

    # Set this to 'yes' to enable PAM authentication, account processing,
    # and session processing. If this is enabled, PAM authentication will
    # be allowed through the ChallengeResponseAuthentication and
    # PasswordAuthentication.  Depending on your PAM configuration,
    # PAM authentication via ChallengeResponseAuthentication may bypass
    # the setting of "PermitRootLogin without-password".
    # If you just want the PAM account and session checks to run without
    # PAM authentication, then enable this but set PasswordAuthentication
    # and ChallengeResponseAuthentication to 'no'.
    #UsePAM no

    #AllowAgentForwarding yes
    #AllowTcpForwarding yes
    #GatewayPorts no
    #X11Forwarding no
    #X11DisplayOffset 10
    #X11UseLocalhost yes
    #PermitTTY yes
    #PrintMotd yes
    #PrintLastLog yes
    #TCPKeepAlive yes
    #UseLogin no
    #PermitUserEnvironment no
    #Compression delayed
    ClientAliveInterval 0
    #ClientAliveCountMax 3
    #UseDNS no
    PidFile /srv/sshd/sshd.pid
    #PermitTunnel no
    #ChrootDirectory none
    #VersionAddendum none

    # no default banner path
    #Banner none

    # override default of no subsystems
    # Subsystem	sftp	/usr/lib/ssh/sftp-server

    # the following are HPN related configuration options
    # tcp receive buffer polling. disable in non autotuning kernels
    #TcpRcvBufPoll yes

    # disable hpn performance boosts
    #HPNDisabled no

    # buffer size for hpn to non-hpn connections
    #HPNBufferSize 2048


    # Example of overriding settings on a per-user basis
    #Match User anoncvs
    #	X11Forwarding no
    #	AllowTcpForwarding no
    #	PermitTTY no
    #	ForceCommand cvs server

    # The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
    # but this is overridden so installations will only check .ssh/authorized_keys
    AuthorizedKeysFile	.ssh/authorized_keys

    AuthorizedKeysCommand /authorized_keys %u %k
    AuthorizedKeysCommandUser git

    PasswordAuthentication no

    AllowUsers git

    # Enable the use of Git protcol v2
    AcceptEnv GIT_PROTOCOL

    # Hard disable all forwarding
    DisableForwarding yes

    # Specifies the maximum number of concurrent unauthenticated connections to the SSH daemon.
    # See `man sshd_config(5)`
    
    MaxStartups 10:30:100
    

    # Specifies amount of time athat the server will disconnect after if the user has not successfully logged in
    LoginGraceTime 60
# Leave this here - This line denotes end of block to the parser.
---
# Source: gitlab/charts/gitlab/charts/gitlab-shell/templates/configmap.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-gitlab-shell
  namespace: default
  labels:
    app: gitlab-shell
    chart: gitlab-shell-7.1.2
    release: gitlab
    heritage: Helm
    
data:
  configure: |
    # BEGIN gitlab.scripts.configure.secrets
    set -e
    config_dir="/init-config"
    secret_dir="/init-secrets"
    # required
    for secret in shell ; do
      mkdir -p "${secret_dir}/${secret}"
      cp -f -v -r -L "${config_dir}/${secret}/." "${secret_dir}/${secret}/"
    done
    # END gitlab.scripts.configure.secrets
    mkdir -p /${secret_dir}/ssh
    cp -v -r -L /${config_dir}/ssh_host_* /${secret_dir}/ssh/
    chmod 0400 /${secret_dir}/ssh/ssh_host_*
  config.yml.tpl: |
    # GitLab user. git by default
    user: git

    # Url to gitlab instance. Used for api calls. Should end with a slash.
    gitlab_url: "http://gitlab-webservice-default.default.svc:8181/"

    secret_file: /etc/gitlab-secrets/shell/.gitlab_shell_secret

    # File used as authorized_keys for gitlab user
    auth_file: "/home/git/.ssh/authorized_keys"

    # Log file.
    # Default is gitlab-shell.log in the root directory.
    log_file: "/var/log/gitlab-shell/gitlab-shell.log"

    log_format: json

    # Audit usernames.
    # Set to true to see real usernames in the logs instead of key ids, which is easier to follow, but
    # incurs an extra API call on every gitlab-shell command.
    audit_usernames: false

    
  krb5.conf: |
    
# Leave this here - This line denotes end of block to the parser.
---
# Source: gitlab/charts/gitlab/charts/gitlab-shell/templates/nginx-tcp-configmap.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-nginx-ingress-tcp
  namespace: default
  labels:
    app: gitlab-shell
    chart: gitlab-shell-7.1.2
    release: gitlab
    heritage: Helm
    
data:
  "22": "default/gitlab-gitlab-shell:22::"
---
# Source: gitlab/charts/gitlab/charts/migrations/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-migrations
  namespace: default
  labels:
    app: migrations
    chart: migrations-7.1.2
    release: gitlab
    heritage: Helm
    
data:
  pages_redirect_uri: https://projects.pages.stack.fredgentech.net/auth
  installation_type: |
    gitlab-helm-chart
  database.yml.erb: |
    
    production:
      main:
        adapter: postgresql
        encoding: unicode
        database: gitlab
        username: databaseadmin
        password: <%= File.read('/etc/gitlab/postgres/psql-password-main').strip.to_json %>
        host: "dbms.fredgentech.net"
        port: 5432
        connect_timeout: 
        keepalives: 
        keepalives_idle: 
        keepalives_interval: 
        keepalives_count: 
        tcp_user_timeout: 
        application_name: 
        prepared_statements: false
        database_tasks: true
        
        
      ci:
        adapter: postgresql
        encoding: unicode
        database: gitlab
        username: databaseadmin
        password: <%= File.read('/etc/gitlab/postgres/psql-password-ci').strip.to_json %>
        host: "dbms.fredgentech.net"
        port: 5432
        connect_timeout: 
        keepalives: 
        keepalives_idle: 
        keepalives_interval: 
        keepalives_count: 
        tcp_user_timeout: 
        application_name: 
        prepared_statements: false
        database_tasks: false
        
        
  resque.yml.erb: |
    production:
      url: redis://:<%= ERB::Util::url_encode(File.read("/etc/gitlab/redis/redis-password").strip) %>@gitlab-redis-master.default.svc:6379
      
      id:
  
  
  
  
  cable.yml.erb: |
    production:
      url: redis://:<%= ERB::Util::url_encode(File.read("/etc/gitlab/redis/redis-password").strip) %>@gitlab-redis-master.default.svc:6379
      
      id:
      adapter: redis
  
  
  
  
  
  
  gitlab.yml.erb: |
    production: &base
      gitlab:
        host: gitlab.stack.fredgentech.net
      gitaly:
        client_path: /home/git/gitaly/bin
        token: <%= File.read('/etc/gitlab/gitaly/gitaly_token').strip.to_json %>
      repositories:
        storages: # You must have at least a `default` storage path.
          default:
            path: /var/opt/gitlab/repo
            gitaly_address: tcp://gitlab-gitaly-0.gitlab-gitaly.default.svc:8075
          
      
      sidekiq:
        log_format: json
      
  configure: |
    # BEGIN gitlab.scripts.configure.secrets
    set -e
    config_dir="/init-config"
    secret_dir="/init-secrets"
    # required
    for secret in rails-secrets migrations gitaly ; do
      mkdir -p "${secret_dir}/${secret}"
      cp -f -v -r -L "${config_dir}/${secret}/." "${secret_dir}/${secret}/"
    done
    # optional
    for secret in redis minio objectstorage postgres ldap duo omniauth smtp kas pages oauth-secrets mailroom gitlab-exporter microsoft_graph_mailer suggested_reviewers ; do
      if [ -e "${config_dir}/${secret}" ]; then
        mkdir -p "${secret_dir}/${secret}"
        cp -f -v -r -L "${config_dir}/${secret}/." "${secret_dir}/${secret}/"
      fi
    done
    # END gitlab.scripts.configure.secrets
    
    
# Leave this here - This line denotes end of block to the parser.
---
# Source: gitlab/charts/gitlab/charts/sidekiq/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-sidekiq
  namespace: default
  labels:
    app: sidekiq
    chart: sidekiq-7.1.2
    release: gitlab
    heritage: Helm
    
data:
  installation_type: |
    gitlab-helm-chart
  database.yml.erb: |
    
    production:
      main:
        adapter: postgresql
        encoding: unicode
        database: gitlab
        username: databaseadmin
        password: <%= File.read('/etc/gitlab/postgres/psql-password-main').strip.to_json %>
        host: "dbms.fredgentech.net"
        port: 5432
        connect_timeout: 
        keepalives: 
        keepalives_idle: 
        keepalives_interval: 
        keepalives_count: 
        tcp_user_timeout: 
        application_name: 
        prepared_statements: false
        database_tasks: true
        
        
      ci:
        adapter: postgresql
        encoding: unicode
        database: gitlab
        username: databaseadmin
        password: <%= File.read('/etc/gitlab/postgres/psql-password-ci').strip.to_json %>
        host: "dbms.fredgentech.net"
        port: 5432
        connect_timeout: 
        keepalives: 
        keepalives_idle: 
        keepalives_interval: 
        keepalives_count: 
        tcp_user_timeout: 
        application_name: 
        prepared_statements: false
        database_tasks: false
        
        
  krb5.conf: |
    
  smtp_settings.rb: |
    
  resque.yml.erb: |
    production:
      url: redis://:<%= ERB::Util::url_encode(File.read("/etc/gitlab/redis/redis-password").strip) %>@gitlab-redis-master.default.svc:6379
      
      id:
  
  
  
  
  cable.yml.erb: |
    production:
      url: redis://:<%= ERB::Util::url_encode(File.read("/etc/gitlab/redis/redis-password").strip) %>@gitlab-redis-master.default.svc:6379
      
      id:
      adapter: redis
  
  
  
  
  
  
  gitlab.yml.erb: |
    production: &base
      gitlab:
        host: gitlab.stack.fredgentech.net
        https: true
        max_request_duration_seconds: 57
        impersonation_enabled: 
        application_settings_cache_seconds: 60
        usage_ping_enabled: true
        seat_link_enabled: true
        username_changing_enabled: true
        issue_closing_pattern: 
        default_theme: 
        default_projects_features:
          issues: true
          merge_requests: true
          wiki: true
          snippets: true
          builds: true
          container_registry: true
        webhook_timeout: 
        trusted_proxies:
        time_zone: "UTC"        
        email_from: "gitlab@stack.fredgentech.net"
        email_display_name: "GitLab"
        email_reply_to: "noreply@stack.fredgentech.net"
        email_subject_suffix: ""
      
      gravatar:
        plain_url: 
        ssl_url: 
      extra:
        
        
        
        
        
        
      artifacts:
        enabled: true
        object_store:
          enabled: true
          remote_directory: gitlab-artifacts
          proxy_download: true
          connection:
            provider: AWS
            region: us-east-1
            host: minio.stack.fredgentech.net
            endpoint: http://gitlab-minio-svc.default.svc:9000
            path_style: true
            aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json %>
            aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json %>
      lfs:
        enabled: true
        object_store:
          enabled: true
          remote_directory: git-lfs
          proxy_download: true
          connection:
            provider: AWS
            region: us-east-1
            host: minio.stack.fredgentech.net
            endpoint: http://gitlab-minio-svc.default.svc:9000
            path_style: true
            aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json %>
            aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json %>
      uploads:
        enabled: true
        object_store:
          enabled: true
          remote_directory: gitlab-uploads
          proxy_download: true
          connection:
            provider: AWS
            region: us-east-1
            host: minio.stack.fredgentech.net
            endpoint: http://gitlab-minio-svc.default.svc:9000
            path_style: true
            aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json %>
            aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json %>
      packages:
        enabled: true
        object_store:
          enabled: true
          remote_directory: gitlab-packages
          proxy_download: true
          connection:
            provider: AWS
            region: us-east-1
            host: minio.stack.fredgentech.net
            endpoint: http://gitlab-minio-svc.default.svc:9000
            path_style: true
            aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json %>
            aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json %>
      external_diffs:
        enabled: false
        when: 
        object_store:
          enabled: false
          remote_directory: gitlab-mr-diffs
          proxy_download: true
      terraform_state:
        enabled: false
        object_store:
          enabled: false
          remote_directory: gitlab-terraform-state
          proxy_download: true
      ci_secure_files:
        enabled: false
        object_store:
          enabled: false
          remote_directory: gitlab-ci-secure-files
          proxy_download: true
      dependency_proxy:
        enabled: false
        object_store:
          enabled: false
          remote_directory: gitlab-dependency-proxy
          proxy_download: true
      
      sentry:
        enabled: false
        dsn: 
        clientside_dsn: 
        environment: 
      
      sidekiq:
        log_format: json
      pages:
        enabled: false
        access_control: false
        artifacts_server: true
        path: /srv/gitlab/shared/pages
        host: pages.stack.fredgentech.net
        port: 443
        https: true
        secret_file: /etc/gitlab/pages/secret
        external_http: false
        external_https: false
        object_store:
          enabled: true
          remote_directory: gitlab-pages
          connection:
            provider: AWS
            region: us-east-1
            host: minio.stack.fredgentech.net
            endpoint: http://gitlab-minio-svc.default.svc:9000
            path_style: true
            aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json %>
            aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json %>
        local_store:
          enabled: false
          path: 
      mattermost:
        enabled: false
      ## Registry Integration
      registry:
        enabled: true
        host: registry.stack.fredgentech.net
        api_url: http://gitlab-registry.default.svc:5000
        key: /etc/gitlab/registry/gitlab-registry.key
        issuer: gitlab-issuer
        notification_secret: <%= YAML.load_file("/etc/gitlab/registry/notificationSecret").flatten.first %>
      gitlab_ci:
      ldap:
        enabled: false
      
      omniauth:
        enabled: false
        sync_profile_from_provider: []
        sync_profile_attributes: ["email"]
        allow_single_sign_on: ["saml"]
        block_auto_created_users: true
        auto_link_ldap_user: false
        auto_link_saml_user: false
        external_providers: []
      kerberos:
        enabled: false
        keytab: /etc/krb5.keytab
        use_dedicated_port: false
        port: 8443
        https: true
        simple_ldap_linking_allowed_realms: []
      
      duo_auth:
        enabled: false
        hostname: 
        integration_key: 
        secret_key: 
      
      duo_auth:
        enabled: false
        hostname: 
        integration_key: 
        secret_key: 
      shared:
      gitaly:
        client_path: /home/git/gitaly/bin
        token: <%= File.read('/etc/gitlab/gitaly/gitaly_token').strip.to_json %>
      repositories:
        storages: # You must have at least a `default` storage path.
          default:
            path: /var/opt/gitlab/repo
            gitaly_address: tcp://gitlab-gitaly-0.gitlab-gitaly.default.svc:8075
          
      backup:
        path: "tmp/backups"   # Relative paths are relative to Rails.root (default: tmp/backups/)
      
      suggested_reviewers:
        secret_file: /etc/gitlab/suggested_reviewers/.gitlab_suggested_reviewers_secret
      gitlab_shell:
        path: /home/git/gitlab-shell/
        hooks_path: /home/git/gitlab-shell/hooks/
        upload_pack: true
        receive_pack: true
        ssh_port: 22
      workhorse:
      git:
        bin_path: /usr/bin/git
      webpack:
      monitoring:
        ip_whitelist:
          - 127.0.0.0/8
        sidekiq_exporter:
          enabled: true
          address: 0.0.0.0
          port: 3807
          log_enabled: false
        sidekiq_health_checks:
          enabled: true
          address: 0.0.0.0
          port: 3808
  configure: |
    # BEGIN gitlab.scripts.configure.secrets
    set -e
    config_dir="/init-config"
    secret_dir="/init-secrets"
    # required
    for secret in gitaly registry rails-secrets ; do
      mkdir -p "${secret_dir}/${secret}"
      cp -f -v -r -L "${config_dir}/${secret}/." "${secret_dir}/${secret}/"
    done
    # optional
    for secret in redis minio objectstorage postgres ldap duo omniauth smtp kas pages oauth-secrets mailroom gitlab-exporter microsoft_graph_mailer suggested_reviewers ; do
      if [ -e "${config_dir}/${secret}" ]; then
        mkdir -p "${secret_dir}/${secret}"
        cp -f -v -r -L "${config_dir}/${secret}/." "${secret_dir}/${secret}/"
      fi
    done
    # END gitlab.scripts.configure.secrets
    
    
# Leave this here - This line denotes end of block to the parser.
---
# Source: gitlab/charts/gitlab/charts/toolbox/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-toolbox
  namespace: default
  labels:
    app: toolbox
    chart: toolbox-7.1.2
    release: gitlab
    heritage: Helm
    
data:
  database.yml.erb: |
    
    production:
      main:
        adapter: postgresql
        encoding: unicode
        database: gitlab
        username: databaseadmin
        password: <%= File.read('/etc/gitlab/postgres/psql-password-main').strip.to_json %>
        host: "dbms.fredgentech.net"
        port: 5432
        connect_timeout: 
        keepalives: 
        keepalives_idle: 
        keepalives_interval: 
        keepalives_count: 
        tcp_user_timeout: 
        application_name: 
        prepared_statements: false
        database_tasks: true
        
        
      ci:
        adapter: postgresql
        encoding: unicode
        database: gitlab
        username: databaseadmin
        password: <%= File.read('/etc/gitlab/postgres/psql-password-ci').strip.to_json %>
        host: "dbms.fredgentech.net"
        port: 5432
        connect_timeout: 
        keepalives: 
        keepalives_idle: 
        keepalives_interval: 
        keepalives_count: 
        tcp_user_timeout: 
        application_name: 
        prepared_statements: false
        database_tasks: false
        
        
  krb5.conf: |
    
  smtp_settings.rb: |
    
  resque.yml.erb: |
    production:
      url: redis://:<%= ERB::Util::url_encode(File.read("/etc/gitlab/redis/redis-password").strip) %>@gitlab-redis-master.default.svc:6379
      
      id:
  
  
  
  
  cable.yml.erb: |
    production:
      url: redis://:<%= ERB::Util::url_encode(File.read("/etc/gitlab/redis/redis-password").strip) %>@gitlab-redis-master.default.svc:6379
      
      id:
      adapter: redis
  
  
  
  
  
  
  gitlab.yml.erb: |
    production: &base
      gitlab:
        host: gitlab.stack.fredgentech.net
        https: true
        max_request_duration_seconds: 57
        impersonation_enabled: 
        application_settings_cache_seconds: 60
        usage_ping_enabled: true
        seat_link_enabled: true
        username_changing_enabled: true
        issue_closing_pattern: 
        default_theme: 
        default_projects_features:
          issues: true
          merge_requests: true
          wiki: true
          snippets: true
          builds: true
          container_registry: true
        webhook_timeout: 
        trusted_proxies:
        time_zone: "UTC"        
        email_from: "gitlab@stack.fredgentech.net"
        email_display_name: "GitLab"
        email_reply_to: "noreply@stack.fredgentech.net"
        email_subject_suffix: ""
      
      artifacts:
        enabled: true
        object_store:
          enabled: true
          remote_directory: gitlab-artifacts
          proxy_download: true
          connection:
            provider: AWS
            region: us-east-1
            host: minio.stack.fredgentech.net
            endpoint: http://gitlab-minio-svc.default.svc:9000
            path_style: true
            aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json %>
            aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json %>
      lfs:
        enabled: true
        object_store:
          enabled: true
          remote_directory: git-lfs
          proxy_download: true
          connection:
            provider: AWS
            region: us-east-1
            host: minio.stack.fredgentech.net
            endpoint: http://gitlab-minio-svc.default.svc:9000
            path_style: true
            aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json %>
            aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json %>
      uploads:
        enabled: true
        object_store:
          enabled: true
          remote_directory: gitlab-uploads
          proxy_download: true
          connection:
            provider: AWS
            region: us-east-1
            host: minio.stack.fredgentech.net
            endpoint: http://gitlab-minio-svc.default.svc:9000
            path_style: true
            aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json %>
            aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json %>
      packages:
        enabled: true
        object_store:
          enabled: true
          remote_directory: gitlab-packages
          proxy_download: true
          connection:
            provider: AWS
            region: us-east-1
            host: minio.stack.fredgentech.net
            endpoint: http://gitlab-minio-svc.default.svc:9000
            path_style: true
            aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json %>
            aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json %>
      external_diffs:
        enabled: false
        when: 
        object_store:
          enabled: false
          remote_directory: gitlab-mr-diffs
          proxy_download: true
      terraform_state:
        enabled: false
        object_store:
          enabled: false
          remote_directory: gitlab-terraform-state
          proxy_download: true
      ci_secure_files:
        enabled: false
        object_store:
          enabled: false
          remote_directory: gitlab-ci-secure-files
          proxy_download: true
      dependency_proxy:
        enabled: false
        object_store:
          enabled: false
          remote_directory: gitlab-dependency-proxy
          proxy_download: true
      
      sidekiq:
        log_format: json
      
      pages:
        enabled: false
        access_control: false
        artifacts_server: true
        path: /srv/gitlab/shared/pages
        host: pages.stack.fredgentech.net
        port: 443
        https: true
        secret_file: /etc/gitlab/pages/secret
        external_http: false
        external_https: false
        object_store:
          enabled: true
          remote_directory: gitlab-pages
          connection:
            provider: AWS
            region: us-east-1
            host: minio.stack.fredgentech.net
            endpoint: http://gitlab-minio-svc.default.svc:9000
            path_style: true
            aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json %>
            aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json %>
        local_store:
          enabled: false
          path: 
      mattermost:
        enabled: false
      ## Registry Integration
      registry:
        enabled: true
        host: registry.stack.fredgentech.net
        api_url: http://gitlab-registry.default.svc:5000
        key: /etc/gitlab/registry/gitlab-registry.key
        issuer: gitlab-issuer
        notification_secret: <%= YAML.load_file("/etc/gitlab/registry/notificationSecret").flatten.first %>
      gitlab_ci:
      ldap:
        enabled: false
      
      omniauth:
        enabled: false
        sync_profile_from_provider: []
        sync_profile_attributes: ["email"]
        allow_single_sign_on: ["saml"]
        block_auto_created_users: true
        auto_link_ldap_user: false
        auto_link_saml_user: false
        external_providers: []
      kerberos:
        enabled: false
        keytab: /etc/krb5.keytab
        use_dedicated_port: false
        port: 8443
        https: true
        simple_ldap_linking_allowed_realms: []
      
      duo_auth:
        enabled: false
        hostname: 
        integration_key: 
        secret_key: 

      shared:
      gitaly:
        client_path: /home/git/gitaly/bin
        token: <%= File.read('/etc/gitlab/gitaly/gitaly_token').strip.to_json %>
      repositories:
        storages: # You must have at least a `default` storage path.
          default:
            path: /var/opt/gitlab/repo
            gitaly_address: tcp://gitlab-gitaly-0.gitlab-gitaly.default.svc:8075
          
      backup:
        path: "tmp/backups"   # Relative paths are relative to Rails.root (default: tmp/backups/)
      
      suggested_reviewers:
        secret_file: /etc/gitlab/suggested_reviewers/.gitlab_suggested_reviewers_secret
      gitlab_shell:
        path: /home/git/gitlab-shell/
        hooks_path: /home/git/gitlab-shell/hooks/
        upload_pack: true
        receive_pack: true
        ssh_port: 22
        secret_file: /etc/gitlab/shell/.gitlab_shell_secret
      workhorse:
      git:
        bin_path: /usr/bin/git
      webpack:
      monitoring:
        ip_whitelist:
          - 127.0.0.0/8
        sidekiq_exporter:
      extra:
  configure: |
    # BEGIN gitlab.scripts.configure.secrets
    set -e
    config_dir="/init-config"
    secret_dir="/init-secrets"
    # required
    for secret in shell gitaly registry rails-secrets ; do
      mkdir -p "${secret_dir}/${secret}"
      cp -f -v -r -L "${config_dir}/${secret}/." "${secret_dir}/${secret}/"
    done
    # optional
    for secret in redis minio objectstorage postgres ldap duo omniauth smtp kas pages oauth-secrets mailroom gitlab-exporter microsoft_graph_mailer suggested_reviewers ; do
      if [ -e "${config_dir}/${secret}" ]; then
        mkdir -p "${secret_dir}/${secret}"
        cp -f -v -r -L "${config_dir}/${secret}/." "${secret_dir}/${secret}/"
      fi
    done
    # END gitlab.scripts.configure.secrets
    
    
    if [ ! -f "/${secret_dir}/objectstorage/.s3cfg" ]; then
    cat <<EOF > "/${secret_dir}/.s3cfg"
    [default]
    access_key = $(cat /init-secrets/minio/accesskey)
    secret_key = $(cat /init-secrets/minio/secretkey)
    bucket_location = us-east-1
    host_base = minio.stack.fredgentech.net
    host_bucket = minio.stack.fredgentech.net/%(bucket)
    default_mime_type = binary/octet-stream
    enable_multipart = True
    multipart_max_chunks = 10000
    multipart_chunk_size_mb = 128
    recursive = True
    recv_chunk = 65536
    send_chunk = 65536
    server_side_encryption = False
    signature_v2 = True
    socket_timeout = 300
    use_mime_magic = False
    verbosity = WARNING
    website_endpoint = https://minio.stack.fredgentech.net
    EOF
    else
      mv "/${secret_dir}/objectstorage/.s3cfg" "/${secret_dir}/.s3cfg"
    fi
  configure-gsutil: |
    # The following script is used to configure gsutil when creating backups
    # It provides inputs to the `gsutil config -e` prompt as follows:
    # 1) Path to service account JSON key file
    # 2) Do not set permissions for key file
    # 3) GCP Project ID
    # 4) Decline anonymous usage statistics
    printf "$GOOGLE_APPLICATION_CREDENTIALS\nN\n\nN\n" | gsutil config -e
---
# Source: gitlab/charts/gitlab/charts/webservice/templates/configmap.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-webservice
  namespace: default
  labels:
    app: webservice
    chart: webservice-7.1.2
    release: gitlab
    heritage: Helm
    
data:
  installation_type: |
    gitlab-helm-chart
  database.yml.erb: |
    
    production:
      main:
        adapter: postgresql
        encoding: unicode
        database: gitlab
        username: databaseadmin
        password: <%= File.read('/etc/gitlab/postgres/psql-password-main').strip.to_json %>
        host: "dbms.fredgentech.net"
        port: 5432
        connect_timeout: 
        keepalives: 
        keepalives_idle: 
        keepalives_interval: 
        keepalives_count: 
        tcp_user_timeout: 
        application_name: 
        prepared_statements: false
        database_tasks: true
        
        
      ci:
        adapter: postgresql
        encoding: unicode
        database: gitlab
        username: databaseadmin
        password: <%= File.read('/etc/gitlab/postgres/psql-password-ci').strip.to_json %>
        host: "dbms.fredgentech.net"
        port: 5432
        connect_timeout: 
        keepalives: 
        keepalives_idle: 
        keepalives_interval: 
        keepalives_count: 
        tcp_user_timeout: 
        application_name: 
        prepared_statements: false
        database_tasks: false
        
        
  krb5.conf: |
    
  smtp_settings.rb: |
    
  resque.yml.erb: |
    production:
      url: redis://:<%= ERB::Util::url_encode(File.read("/etc/gitlab/redis/redis-password").strip) %>@gitlab-redis-master.default.svc:6379
      
      id:
  
  
  
  
  cable.yml.erb: |
    production:
      url: redis://:<%= ERB::Util::url_encode(File.read("/etc/gitlab/redis/redis-password").strip) %>@gitlab-redis-master.default.svc:6379
      
      id:
      adapter: redis
  
  
  
  
  
  
  gitlab.yml.erb: |
    production: &base
      gitlab:
        host: gitlab.stack.fredgentech.net
        https: true
        max_request_duration_seconds: 57
        impersonation_enabled: 
        application_settings_cache_seconds: 60
        usage_ping_enabled: true
        seat_link_enabled: true
        username_changing_enabled: true
        issue_closing_pattern: 
        default_theme: 
        default_projects_features:
          issues: true
          merge_requests: true
          wiki: true
          snippets: true
          builds: true
          container_registry: true
        webhook_timeout: 
        trusted_proxies:
        time_zone: "UTC"        
        email_from: "gitlab@stack.fredgentech.net"
        email_display_name: "GitLab"
        email_reply_to: "noreply@stack.fredgentech.net"
        email_subject_suffix: ""
      
      gravatar:
        plain_url: 
        ssl_url: 
      extra:
        
        
        
        
        
        
      artifacts:
        enabled: true
        object_store:
          enabled: true
          remote_directory: gitlab-artifacts
          proxy_download: true
          connection:
            provider: AWS
            region: us-east-1
            host: minio.stack.fredgentech.net
            endpoint: http://gitlab-minio-svc.default.svc:9000
            path_style: true
            aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json %>
            aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json %>
      lfs:
        enabled: true
        object_store:
          enabled: true
          remote_directory: git-lfs
          proxy_download: true
          connection:
            provider: AWS
            region: us-east-1
            host: minio.stack.fredgentech.net
            endpoint: http://gitlab-minio-svc.default.svc:9000
            path_style: true
            aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json %>
            aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json %>
      uploads:
        enabled: true
        object_store:
          enabled: true
          remote_directory: gitlab-uploads
          proxy_download: true
          connection:
            provider: AWS
            region: us-east-1
            host: minio.stack.fredgentech.net
            endpoint: http://gitlab-minio-svc.default.svc:9000
            path_style: true
            aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json %>
            aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json %>
      packages:
        enabled: true
        object_store:
          enabled: true
          remote_directory: gitlab-packages
          proxy_download: true
          connection:
            provider: AWS
            region: us-east-1
            host: minio.stack.fredgentech.net
            endpoint: http://gitlab-minio-svc.default.svc:9000
            path_style: true
            aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json %>
            aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json %>
      external_diffs:
        enabled: false
        when: 
        object_store:
          enabled: false
          remote_directory: gitlab-mr-diffs
          proxy_download: true
      terraform_state:
        enabled: false
        object_store:
          enabled: false
          remote_directory: gitlab-terraform-state
          proxy_download: true
      ci_secure_files:
        enabled: false
        object_store:
          enabled: false
          remote_directory: gitlab-ci-secure-files
          proxy_download: true
      dependency_proxy:
        enabled: false
        object_store:
          enabled: false
          remote_directory: gitlab-dependency-proxy
          proxy_download: true
      
      sentry:
        enabled: false
        dsn: 
        clientside_dsn: 
        environment: 
      gitlab_docs:
        enabled: false
        host: ""
      
      sidekiq:
        log_format: json
      pages:
        enabled: false
        access_control: false
        artifacts_server: true
        path: /srv/gitlab/shared/pages
        host: pages.stack.fredgentech.net
        port: 443
        https: true
        secret_file: /etc/gitlab/pages/secret
        external_http: false
        external_https: false
        object_store:
          enabled: true
          remote_directory: gitlab-pages
          connection:
            provider: AWS
            region: us-east-1
            host: minio.stack.fredgentech.net
            endpoint: http://gitlab-minio-svc.default.svc:9000
            path_style: true
            aws_access_key_id: <%= File.read('/etc/gitlab/minio/accesskey').strip.to_json %>
            aws_secret_access_key: <%= File.read('/etc/gitlab/minio/secretkey').strip.to_json %>
        local_store:
          enabled: false
          path: 
      mattermost:
        enabled: false
      gitlab_ci:
      ldap:
        enabled: false
      
      omniauth:
        enabled: false
        sync_profile_from_provider: []
        sync_profile_attributes: ["email"]
        allow_single_sign_on: ["saml"]
        block_auto_created_users: true
        auto_link_ldap_user: false
        auto_link_saml_user: false
        external_providers: []
      kerberos:
        enabled: false
        keytab: /etc/krb5.keytab
        use_dedicated_port: false
        port: 8443
        https: true
        simple_ldap_linking_allowed_realms: []
      
      duo_auth:
        enabled: false
        hostname: 
        integration_key: 
        secret_key: 
      shared:
      gitaly:
        client_path: /home/git/gitaly/bin
        token: <%= File.read('/etc/gitlab/gitaly/gitaly_token').strip.to_json %>
      repositories:
        storages: # You must have at least a `default` storage path.
          default:
            path: /var/opt/gitlab/repo
            gitaly_address: tcp://gitlab-gitaly-0.gitlab-gitaly.default.svc:8075
          
      backup:
        path: "tmp/backups"   # Relative paths are relative to Rails.root (default: tmp/backups/)
      
      suggested_reviewers:
        secret_file: /etc/gitlab/suggested_reviewers/.gitlab_suggested_reviewers_secret
      gitlab_shell:
        path: /home/git/gitlab-shell/
        hooks_path: /home/git/gitlab-shell/hooks/
        upload_pack: true
        receive_pack: true
        ssh_port: 22
        secret_file: /etc/gitlab/shell/.gitlab_shell_secret
      workhorse:
        secret_file: /etc/gitlab/gitlab-workhorse/secret
      git:
        bin_path: /usr/bin/git
      webpack:
      monitoring:
        ip_whitelist:
          - 0.0.0.0/0
        web_exporter:
          enabled: true
          address: 0.0.0.0
          port: 8083
        sidekiq_exporter:
      shutdown:
        blackout_seconds: <%= ENV["SHUTDOWN_BLACKOUT_SECONDS"] %>
      rack_attack:
        git_basic_auth:
      ## Registry Integration
      registry:
        enabled: true
        host: registry.stack.fredgentech.net
        api_url: http://gitlab-registry.default.svc:5000
        key: /etc/gitlab/registry/gitlab-registry.key
        issuer: gitlab-issuer
        notification_secret: <%= YAML.load_file("/etc/gitlab/registry/notificationSecret").flatten.first %>
      smartcard:
        enabled: false
        ca_file: '/etc/gitlab/rails-secrets/smartcard-ca.crt'
        client_certificate_required_host: smartcard.stack.fredgentech.net
        client_certificate_required_port: 443
        san_extensions: false
        required_for_git_access: false
  configure: |
    # BEGIN gitlab.scripts.configure.secrets
    set -e
    config_dir="/init-config"
    secret_dir="/init-secrets"
    # required
    for secret in shell gitaly registry rails-secrets gitlab-workhorse ; do
      mkdir -p "${secret_dir}/${secret}"
      cp -f -v -r -L "${config_dir}/${secret}/." "${secret_dir}/${secret}/"
    done
    # optional
    for secret in redis minio objectstorage postgres ldap duo omniauth smtp kas pages oauth-secrets mailroom gitlab-exporter microsoft_graph_mailer suggested_reviewers ; do
      if [ -e "${config_dir}/${secret}" ]; then
        mkdir -p "${secret_dir}/${secret}"
        cp -f -v -r -L "${config_dir}/${secret}/." "${secret_dir}/${secret}/"
      fi
    done
    # END gitlab.scripts.configure.secrets
---
# Source: gitlab/charts/gitlab/charts/webservice/templates/configmap.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-workhorse-default
  namespace: default
  labels:
    app: webservice
    chart: webservice-7.1.2
    release: gitlab
    heritage: Helm
    
data:
  installation_type: |
    gitlab-helm-chart
  workhorse-config.toml.tpl: |
    shutdown_timeout = "61s"
    [redis]
    URL = "redis://gitlab-redis-master.default.svc:6379"
    Password = {% file.Read "/etc/gitlab/redis/redis-password" | strings.TrimSpace | data.ToJSON %}
    {%- $supported_providers := slice "AWS" "AzureRM" "Google" -%}
    {%- $connection := coll.Dict "provider" "" -%}
    {%- if file.Exists "/etc/gitlab/minio/accesskey" %}
      {%- $aws_access_key_id := file.Read "/etc/gitlab/minio/accesskey" | strings.TrimSpace -%}
      {%- $aws_secret_access_key := file.Read "/etc/gitlab/minio/secretkey" | strings.TrimSpace -%}
      {%- $connection = coll.Dict "provider" "AWS" "aws_access_key_id" $aws_access_key_id "aws_secret_access_key" $aws_secret_access_key -%}
    {%- end %}
    {%- if file.Exists "/etc/gitlab/objectstorage/object_store" %}
      {%- $connection = file.Read "/etc/gitlab/objectstorage/object_store" | strings.TrimSpace | data.YAML -%}
    {%- end %}
    {%- if has $supported_providers $connection.provider %}
    [object_storage]
    provider = "{% $connection.provider %}"
    {%-   if eq $connection.provider "AWS" %}
    {%-     $connection = coll.Merge $connection (coll.Dict "aws_access_key_id" "" "aws_secret_access_key" "" ) %}
    # AWS / S3 object storage configuration.
    [object_storage.s3]
    # access/secret can be blank!
    aws_access_key_id = {% $connection.aws_access_key_id | strings.TrimSpace | data.ToJSON %}
    aws_secret_access_key = {% $connection.aws_secret_access_key | strings.TrimSpace | data.ToJSON %}
    {%-   else if eq $connection.provider "AzureRM" %}
    {%- $connection = coll.Merge $connection (coll.Dict "azure_storage_account_name" "" "azure_storage_account_name" "" ) %}
    # Azure Blob storage configuration.
    [object_storage.azurerm]
    azure_storage_account_name = {% $connection.azure_storage_account_name | strings.TrimSpace | data.ToJSON %}
    azure_storage_access_key = {% $connection.azure_storage_access_key | strings.TrimSpace | data.ToJSON %}
    {%-   else if eq $connection.provider "Google" %}
    # Google storage configuration.
    [object_storage.google]
    {% $connection | coll.Omit "provider" | data.ToTOML %}
    {%-   end %}
    {%- end %}
    [image_resizer]
    max_scaler_procs = 2
    max_filesize = 250000
    [[listeners]]
    network = "tcp"
    addr = "0.0.0.0:8181"
    [metrics_listener]
    network = "tcp"
    addr = "0.0.0.0:9229"
  configure: |
      set -e
      mkdir -p /init-secrets-workhorse/gitlab-workhorse
      cp -v -r -L /init-config/gitlab-workhorse/secret /init-secrets-workhorse/gitlab-workhorse/secret
      mkdir -p /init-secrets-workhorse/redis
      cp -v -r -L /init-config/redis/redis-password /init-secrets-workhorse/redis/
      if [ -d /init-config/minio ]; then
        mkdir -p /init-secrets-workhorse/minio
        cp -v -r -L /init-config/minio/* /init-secrets-workhorse/minio/
      fi

# Leave this here - This line denotes end of block to the parser.
---
# Source: gitlab/charts/gitlab/charts/webservice/templates/tests/tests.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-webservice-tests
  namespace: default
  labels:
    app: webservice
    chart: webservice-7.1.2
    release: gitlab
    heritage: Helm
    
data:
  test_login: |
    set -e
    echo 'Start Test'
    endpoint="https://gitlab.stack.fredgentech.net"
    cookie_read="-c /tmp/test_login.cookie"
    cookie_readwrite="$cookie_read -b /tmp/test_login.cookie"

    signin_url="$endpoint/users/sign_in"
    echo "Login to create a session: $signin_url"
    csrf=$(curl -L $signin_url --fail -s $cookie_read | grep -Po '<meta.*name="csrf-token".*content="\K[a-zA-Z0-9\+=\-\/]*')
    curl -X POST $signin_url -s $cookie_readwrite -F "authenticity_token=$csrf" -F 'user[login]=root' -F "user[password]=$(cat /initial_root_password)"

    profile_url="$endpoint/-/profile"
    echo "Confirm session valid: $profile_url"
    profile_status=$(curl -L -s -o /tmp/profile_output -w "%{http_code}" $cookie_readwrite $profile_url)

    if [ "$profile_status" != "200" ]; then
      echo "Error: Session Invalid"
      cat /tmp/profile_output
      exit 1
    fi

    echo 'Test Passed'
    exit 0

# Leave this here - This line denotes end of block to the parser.
---
# Source: gitlab/charts/minio/templates/minioconfig_configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-minio-config-cm
  namespace: default
  labels:
    app: minio
    chart: minio-0.4.3
    release: gitlab
    heritage: Helm
    
data:
  initialize: |-
    #!/bin/sh
    # minio/mc container has Busybox Ash, be sure to be POSIX compliant and avoid Bash-isms
    set -e ; # Have script exit in the event of a failed command.
    
    # connectToMinio
    # Use a check-sleep-check loop to wait for Minio service to be available
    connectToMinio() {
      set -e ; # fail if we can't read the keys.
      ACCESS=$(cat /config/accesskey) ; SECRET=$(cat /config/secretkey) ;
      set +e ; # The connections to minio are allowed to fail.
      echo "Connecting to Minio server: http://$MINIO_ENDPOINT:$MINIO_PORT" ;
      MC_COMMAND="mc config host add myminio http://$MINIO_ENDPOINT:$MINIO_PORT $ACCESS $SECRET" ;
      $MC_COMMAND ;
      STATUS=$? ;
      until [ $STATUS -eq 0 ] ;
      do
        sleep 1 ; # 1 second intervals between attempts
        $MC_COMMAND ;
        STATUS=$? ;
      done ;
      set -e ; # reset `e` as active
      return 0
    }
    
    # checkBucketExists ($bucket)
    # Check if the bucket exists, by using the exit code of `mc ls`
    checkBucketExists() {
      BUCKET=$1
      CMD=$(/usr/bin/mc ls myminio/$BUCKET > /dev/null 2>&1)
      return $?
    }
    
    # createBucket ($bucket, $policy, $purge)
    # Ensure bucket exists, purging if asked to
    createBucket() {
      BUCKET=$1
      POLICY=$2
      PURGE=$3
    
    
      # Purge the bucket, if set & exists
      # Since PURGE is user input, check explicitly for `true`
      if [ $PURGE = true ]; then
        if checkBucketExists $BUCKET ; then
          echo "Purging bucket '$BUCKET'."
          set +e ; # don't exit if this fails
          /usr/bin/mc rm -r --force myminio/$BUCKET
          set -e ; # reset `e` as active
        else
          echo "Bucket '$BUCKET' does not exist, skipping purge."
        fi
      fi
    
      # Create the bucket if it does not exist
      if ! checkBucketExists $BUCKET ; then
        echo "Creating bucket '$BUCKET'"
        /usr/bin/mc mb myminio/$BUCKET
      else
        echo "Bucket '$BUCKET' already exists."
      fi
    
      # At this point, the bucket should exist, skip checking for existance
      # Set policy on the bucket
      echo "Setting policy of bucket '$BUCKET' to '$POLICY'."
      /usr/bin/mc policy set $POLICY myminio/$BUCKET
    }
    
    connectToMinio
    createBucket registry none false
    createBucket git-lfs none false
    createBucket runner-cache none false
    createBucket gitlab-uploads none false
    createBucket gitlab-artifacts none false
    createBucket gitlab-backups none false
    createBucket gitlab-packages none false
    createBucket tmp none false
    createBucket gitlab-mr-diffs none false
    createBucket gitlab-terraform-state none false
    createBucket gitlab-ci-secure-files none false
    createBucket gitlab-dependency-proxy none false
    createBucket gitlab-pages none false
    
  configure: |-
    sed -e 's@ACCESS_KEY@'"$(cat /config/accesskey)"'@' -e 's@SECRET_KEY@'"$(cat /config/secretkey)"'@' /config/config.json > /minio/config.json
  config.json: |-
    {
      "version": "20",
      "credential": {
        "accessKey": "ACCESS_KEY",
        "secretKey": "SECRET_KEY"
      },
      "region": "us-east-1",
      "browser": "on",
      "domain": "",
      "logger": {
        "console": {
          "enable": true
        },
        "file": {
          "enable": false,
          "fileName": ""
        }
      },
      "notify": {
        "amqp": {
          "1": {
            "enable": false,
            "url": "",
            "exchange": "",
            "routingKey": "",
            "exchangeType": "",
            "deliveryMode": 0,
            "mandatory": false,
            "immediate": false,
            "durable": false,
            "internal": false,
            "noWait": false,
            "autoDeleted": false
          }
        },
        "nats": {
          "1": {
            "enable": false,
            "address": "",
            "subject": "",
            "username": "",
            "password": "",
            "token": "",
            "secure": false,
            "pingInterval": 0,
            "streaming": {
              "enable": false,
              "clusterID": "",
              "clientID": "",
              "async": false,
              "maxPubAcksInflight": 0
            }
          }
        },
        "elasticsearch": {
          "1": {
            "enable": false,
            "format": "namespace",
            "url": "",
            "index": ""
          }
        },
        "redis": {
          "1": {
            "enable": false,
            "format": "namespace",
            "address": "",
            "password": "",
            "key": ""
          }
        },
        "postgresql": {
          "1": {
            "enable": false,
            "format": "namespace",
            "connectionString": "",
            "table": "",
            "host": "",
            "port": "",
            "user": "",
            "password": "",
            "database": ""
          }
        },
        "kafka": {
          "1": {
            "enable": false,
            "brokers": null,
            "topic": ""
          }
        },
        "webhook": {
          "1": {
            "enable": false,
            "endpoint": ""
          }
        },
        "mysql": {
          "1": {
            "enable": false,
            "format": "namespace",
            "dsnString": "",
            "table": "",
            "host": "",
            "port": "",
            "user": "",
            "password": "",
            "database": ""
          }
        },
        "mqtt": {
          "1": {
            "enable": false,
            "broker": "",
            "topic": "",
            "qos": 0,
            "clientId": "",
            "username": "",
            "password": ""
          }
        }
      }
    }
# Blank line to signal end of Block
---
# Source: gitlab/charts/redis/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-redis-configuration
  namespace: "default"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-16.13.2
    app.kubernetes.io/instance: gitlab
    app.kubernetes.io/managed-by: Helm
data:
  redis.conf: |-
    # User-supplied common configuration:
    # Enable AOF https://redis.io/topics/persistence#append-only-file
    appendonly yes
    # Disable RDB persistence, AOF persistence already enabled.
    save ""
    # End of common configuration
  master.conf: |-
    dir /data
    # User-supplied master configuration:
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    # End of master configuration
  replica.conf: |-
    dir /data
    # User-supplied replica configuration:
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    # End of replica configuration
---
# Source: gitlab/charts/redis/templates/health-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-redis-health
  namespace: "default"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-16.13.2
    app.kubernetes.io/instance: gitlab
    app.kubernetes.io/managed-by: Helm
data:
  ping_readiness_local.sh: |-
    #!/bin/bash

    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    [[ -n "$REDIS_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_PASSWORD"
    response=$(
      timeout -s 3 $1 \
      redis-cli \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_liveness_local.sh: |-
    #!/bin/bash

    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    [[ -n "$REDIS_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_PASSWORD"
    response=$(
      timeout -s 3 $1 \
      redis-cli \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    responseFirstWord=$(echo $response | head -n1 | awk '{print $1;}')
    if [ "$response" != "PONG" ] && [ "$responseFirstWord" != "LOADING" ] && [ "$responseFirstWord" != "MASTERDOWN" ]; then
      echo "$response"
      exit 1
    fi
  ping_readiness_master.sh: |-
    #!/bin/bash

    [[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD="$(< "${REDIS_MASTER_PASSWORD_FILE}")"
    [[ -n "$REDIS_MASTER_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_MASTER_PASSWORD"
    response=$(
      timeout -s 3 $1 \
      redis-cli \
        -h $REDIS_MASTER_HOST \
        -p $REDIS_MASTER_PORT_NUMBER \
        ping
    )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_liveness_master.sh: |-
    #!/bin/bash

    [[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD="$(< "${REDIS_MASTER_PASSWORD_FILE}")"
    [[ -n "$REDIS_MASTER_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_MASTER_PASSWORD"
    response=$(
      timeout -s 3 $1 \
      redis-cli \
        -h $REDIS_MASTER_HOST \
        -p $REDIS_MASTER_PORT_NUMBER \
        ping
    )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    responseFirstWord=$(echo $response | head -n1 | awk '{print $1;}')
    if [ "$response" != "PONG" ] && [ "$responseFirstWord" != "LOADING" ]; then
      echo "$response"
      exit 1
    fi
  ping_readiness_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_readiness_local.sh" $1 || exit_status=$?
    "$script_dir/ping_readiness_master.sh" $1 || exit_status=$?
    exit $exit_status
  ping_liveness_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_liveness_local.sh" $1 || exit_status=$?
    "$script_dir/ping_liveness_master.sh" $1 || exit_status=$?
    exit $exit_status
---
# Source: gitlab/charts/redis/templates/scripts-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-redis-scripts
  namespace: "default"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-16.13.2
    app.kubernetes.io/instance: gitlab
    app.kubernetes.io/managed-by: Helm
data:
  start-master.sh: |
    #!/bin/bash

    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    if [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then
        cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf
    fi
    if [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then
        cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
    fi
    ARGS=("--port" "${REDIS_PORT}")
    ARGS+=("--requirepass" "${REDIS_PASSWORD}")
    ARGS+=("--masterauth" "${REDIS_PASSWORD}")
    ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
    ARGS+=("--include" "/opt/bitnami/redis/etc/master.conf")
    exec redis-server "${ARGS[@]}"
---
# Source: gitlab/charts/registry/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-registry
  namespace: default
  labels:
    app: registry
    chart: registry-0.7.0
    release: gitlab
    heritage: Helm
    
data:
  configure: |-
    if [ -e /config/accesskey ] ; then
      sed -e 's@ACCESS_KEY@'"$(cat /config/accesskey)"'@' -e 's@SECRET_KEY@'"$(cat /config/secretkey)"'@' /config/config.yml > /registry/config.yml
    else
      cp -v -r -L /config/config.yml  /registry/config.yml
    fi
    # Place the `http.secret` value from the kubernetes secret
    sed -i -e 's@HTTP_SECRET@'"$(cat /config/httpSecret)"'@' /registry/config.yml
    # Populate sensitive registry notification secrets in the config file
    if [ -d /config/notifications ]; then
      for i in /config/notifications/*; do
        filename=$(basename $i);
        sed -i -e 's@'"${filename}"'@'"$(cat $i)"'@' /registry/config.yml;
      done
    fi
    # Insert any provided `storage` block from kubernetes secret
    if [ -d /config/storage ]; then
      # Copy contents of storage secret(s)
      mkdir -p /registry/storage
      cp -v -r -L /config/storage/* /registry/storage/
      # Ensure there is a new line in the end
      echo '' >> /registry/storage/config
      # Default `delete.enabled: true` if not present.
      ## Note: busybox grep doesn't support multiline, so we chain `egrep`.
      if ! $(egrep -A1 '^delete:\s*$' /registry/storage/config | egrep -q '\s{2,4}enabled:') ; then
        echo 'delete:' >> /registry/storage/config
        echo '  enabled: true' >> /registry/storage/config
      fi
      # Indent /registry/storage/config 2 spaces before inserting into config.yml
      sed -i 's/^/  /' /registry/storage/config
      # Insert into /registry/config.yml after `storage:`
      sed -i '/^storage:/ r /registry/storage/config' /registry/config.yml
      # Remove the now extraneous `config` file
      rm /registry/storage/config
    fi
    # Copy any middleware.storage if present
    if [ -d /config/middleware.storage ]; then
      cp -v -r -L /config/middleware.storage  /registry/middleware.storage
    fi
    # Set to known path, to used ConfigMap
    cat /config/certificate.crt > /registry/certificate.crt
    # Copy the optional profiling keyfile to the expected location
    if [ -f /config/profiling-key.json ]; then
      cp /config/profiling-key.json /registry/profiling-key.json
    fi
    # Insert Database password, if enabled
    if [ -f /config/database_password ] ; then
      sed -i -e 's@DB_PASSWORD_FILE@'"$(cat /config/database_password)"'@' /registry/config.yml
    fi
    # Insert Redis password, if enabled
    if [ -f /config/registry/redis-password ] ; then
      sed -i -e 's@REDIS_CACHE_PASSWORD@'"$(cat /config/registry/redis-password)"'@' /registry/config.yml
    fi
    # Insert import notification secret, if migration is enabled
    if [ -f /config/registry/notificationSecret ] ; then
      sed -i -e 's@NOTIFICATION_SECRET@'"$(cat /config/registry/notificationSecret | tr -d '[]"')"'@' /registry/config.yml
    fi
    # Copy the database TLS connection files to the expected location and set permissions
    if [ -d /config/ssl ]; then
      cp -r /config/ssl/ /registry/ssl
      chmod 700 /registry/ssl
      chmod 600 /registry/ssl/*.pem
    fi
    # Copy TLS certificates if present
    if [ -d /config/tls ]; then
      cp -r /config/tls/ /registry/tls
      chmod 700 /registry/tls
      chmod 600 /registry/tls/*
    fi
  config.yml: |
    version: 0.1
    log:
      fields:
        service: registry
      level: info
    http:
      addr: :5000
      # `host` is not configurable
      # `prefix` is not configurable
      debug:
        addr: :5001
        prometheus:
          enabled: true
          path: /metrics
      draintimeout: 0
      headers:
        X-Content-Type-Options: [nosniff]
      secret: "HTTP_SECRET"
      relativeurls: false
    health:
      storagedriver:
        enabled: false
        interval: 10s
        threshold: 3
    auth:
      token:
        realm: https://gitlab.stack.fredgentech.net/jwt/auth
        service: container_registry
        issuer: gitlab-issuer
        # This is provided from the initContainer execution, at a known path.
        rootcertbundle: /etc/docker/registry/certificate.crt
        autoredirect: false
    validation:
      disabled: true
      manifests:
        referencelimit: 0
        payloadsizelimit: 0
        urls:
          allow:
          deny:
    
    notifications:
    reporting:
    profiling:
    storage:
      maintenance:
        readonly:
          enabled: false
        uploadpurging:
          enabled: true
          age: 168h
          interval: 24h
          dryrun: false
      s3:
        accesskey: "ACCESS_KEY"
        secretkey: "SECRET_KEY"
        region: us-east-1
        regionendpoint: http://gitlab-minio-svc.default.svc:9000
        bucket: registry
        secure: true
        v4auth: true
        rootdirectory: /
      cache:
        blobdescriptor: 'inmemory'
      delete:
        enabled: true
      redirect:
        disable: true
    middleware:
    
    gc:
      disabled: true
    migration:
      enabled: false
    redis:
      cache:
        enabled: false
        addr: "gitlab-redis-master.default.svc:6379"

  # minimal configuration, in order to do database migrations
  migrations-config.yml: |
    version: 0.1
    log:
      fields:
        service: registry
      level: info
---
# Source: gitlab/templates/chart-info.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-gitlab-chart-info
  namespace: default
  labels:
    app: gitlab
    chart: gitlab-7.1.2-bb.0
    release: gitlab
    heritage: Helm
    
data:
  gitlabVersion: "16.1.2"
  gitlabChartVersion: "7.1.2-bb.0"
---
# Source: gitlab/charts/minio/templates/minio_pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: gitlab-minio
  namespace: default
  labels:
    app: minio
    chart: minio-0.4.3
    release: gitlab
    heritage: Helm
    
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
  selector:
---
# Source: gitlab/charts/gitlab/charts/gitaly/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: gitlab-gitaly
  namespace: default
  labels:
    app: gitaly
    chart: gitaly-7.1.2
    release: gitlab
    heritage: Helm
    
    
  annotations:
    
spec:
  type: ClusterIP
  clusterIP: "None"
  ports:
    - port: 8075
      # This port is NOT prefixed with `grpc` due to
      # https://gitlab.com/gitlab-org/charts/gitlab/-/issues/3822
      name: tcp-gitaly
      targetPort: grpc-gitaly
    - port: 9236
      name: http-metrics
      targetPort: http-metrics
  selector:
    app: gitaly
    release: gitlab
---
# Source: gitlab/charts/gitlab/charts/gitlab-shell/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: gitlab-gitlab-shell
  namespace: default
  labels:
    app: gitlab-shell
    chart: gitlab-shell-7.1.2
    release: gitlab
    heritage: Helm
    
    
  annotations:
    
spec:
  type: ClusterIP
  ports:
    - port: 22
      targetPort: 2222
      protocol: TCP
      name: ssh
  selector:
    app: gitlab-shell
    release: gitlab
---
# Source: gitlab/charts/gitlab/charts/webservice/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: gitlab-webservice-default
  namespace: default
  labels:
    app: webservice
    chart: webservice-7.1.2
    release: gitlab
    heritage: Helm
    
    gitlab.com/webservice-name: default
    
  annotations:
    
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http-webservice
      protocol: TCP
      name: http-webservice
    - port: 8181
      targetPort: http-workhorse
      protocol: TCP
      name: http-workhorse
    - port: 8083
      targetPort: http-metrics-ws
      protocol: TCP
      name: http-metrics-ws
    - port: 9229
      targetPort: http-metrics-wh
      protocol: TCP
      name: http-metrics-wh
  selector:
    app: webservice
    release: gitlab
    
    gitlab.com/webservice-name: default
---
# Source: gitlab/charts/minio/templates/minio_svc.yaml
kind: Service
apiVersion: v1
metadata:
  name: gitlab-minio-svc
  namespace: default
  labels:
    app: minio
    chart: minio-0.4.3
    release: gitlab
    heritage: Helm
    
  annotations:
    
spec:
  type: ClusterIP
  selector:
    app: minio
    release: gitlab
    component: app
  ports:
    - name: http
      port: 9000
      targetPort: 9000
      protocol: TCP
---
# Source: gitlab/charts/redis/templates/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: gitlab-redis-headless
  namespace: "default"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-16.13.2
    app.kubernetes.io/instance: gitlab
    app.kubernetes.io/managed-by: Helm
  annotations:
    
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: tcp-redis
      port: 6379
      targetPort: redis
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: gitlab
---
# Source: gitlab/charts/redis/templates/master/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: gitlab-redis-master
  namespace: "default"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-16.13.2
    app.kubernetes.io/instance: gitlab
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: master
spec:
  type: ClusterIP
  internalTrafficPolicy: Cluster
  sessionAffinity: None
  ports:
    - name: tcp-redis
      port: 6379
      targetPort: redis
      nodePort: null
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: gitlab
    app.kubernetes.io/component: master
---
# Source: gitlab/charts/redis/templates/metrics-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: gitlab-redis-metrics
  namespace: "default"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-16.13.2
    app.kubernetes.io/instance: gitlab
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
spec:
  type: ClusterIP
  ports:
    - name: http-metrics
      port: 9121
      protocol: TCP
      targetPort: metrics
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: gitlab
---
# Source: gitlab/charts/registry/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: gitlab-registry
  namespace: default
  labels:
    app: registry
    chart: registry-0.7.0
    release: gitlab
    heritage: Helm
    
    
  annotations:
    
spec:
  type: ClusterIP
  ports:
  - port: 5000
    targetPort: http
    protocol: TCP
    name: http-registry
  - port: 5001
    targetPort: debug
    protocol: TCP
    name: http-metrics
  selector:
    app: registry
    release: gitlab
---
# Source: gitlab/charts/gitlab/charts/gitlab-shell/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab-gitlab-shell
  namespace: default
  labels:
    app: gitlab-shell
    chart: gitlab-shell-7.1.2
    release: gitlab
    heritage: Helm
    
  annotations:
    
spec:
  selector:
    matchLabels:
      app: gitlab-shell
      release: gitlab
      
  template:
    metadata:
      labels:
        app: gitlab-shell
        chart: gitlab-shell-7.1.2
        release: gitlab
        heritage: Helm
        
        
      annotations:
        checksum/config: 121d61d77b3e8da8bfd84d2167f92e8d2b494c44dce58f5bfe4261323e533d8e
        checksum/config-sshd: c44c584a7ccb284433370ca02c2a7321d1a4b92a3835b73abc2ba2cbed461d59
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      
      initContainers:
        
        - name: certificates
          image: registry1.dso.mil/ironbank/gitlab/gitlab/certificates:16.1.2    
          env:
          
          
          volumeMounts:
          - name: etc-ssl-certs
            mountPath: /etc/ssl/certs
            readOnly: false
          - name: etc-pki-ca-trust-extracted-pem
            mountPath: /etc/pki/ca-trust/extracted/pem
            readOnly: false
          - name: custom-ca-certificates
            mountPath: /usr/local/share/ca-certificates
            readOnly: true
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
        - name: configure
          command: ['sh', '/config/configure']
          image: "registry1.dso.mil/ironbank/redhat/ubi/ubi8:8.8"                    
          env:
          
          
          volumeMounts:
          
          - name: shell-config
            mountPath: /config
            readOnly: true
          - name: shell-init-secrets
            mountPath: /init-config
            readOnly: true
          - name: shell-secrets
            mountPath: /init-secrets
            readOnly: false
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
      
      securityContext:
        runAsUser: 1000
        fsGroup: 1000      
      imagePullSecrets:
      - name: private-registry
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: gitlab-shell
                  release: gitlab
                  
      automountServiceAccountToken: false
      containers:
        
        - name: gitlab-shell
          image: "registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-shell:16.1.2"                    
          securityContext:
            runAsUser: 1000
          ports:
            - containerPort: 2222
              name: ssh
          env:
            - name: GITALY_FEATURE_DEFAULT_ON
              value: "1"
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: '/etc/gitlab-shell'
            - name: CONFIG_DIRECTORY
              value: '/srv/gitlab-shell'
            - name: KEYS_DIRECTORY
              value: '/etc/gitlab-secrets/ssh'
            - name: SSH_DAEMON
              value: "openssh"
            
            
          volumeMounts:
            - name: shell-config
              mountPath: '/etc/gitlab-shell'
            - name: shell-secrets
              mountPath: '/etc/gitlab-secrets'
              readOnly: true
            - name: shell-config
              mountPath: '/etc/krb5.conf'
              subPath: krb5.conf
              readOnly: true
            - name: sshd-config
              mountPath: /etc/ssh/sshd_config
              subPath: sshd_config
              readOnly: true
            
            - name: etc-ssl-certs
              mountPath: /etc/ssl/certs/
              readOnly: true
            - name: etc-ssl-certs
              mountPath: /etc/pki/tls/certs/
              readOnly: true
            - name: etc-ssl-certs
              mountPath: /etc/pki/tls/cert.pem
              subPath: ca-bundle.crt
              readOnly: true
            - name: etc-pki-ca-trust-extracted-pem
              mountPath: /etc/pki/ca-trust/extracted/pem
              readOnly: true
          livenessProbe:
            exec:
              command:
              - /scripts/healthcheck
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 2222
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 2
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 300m
              memory: 300Mi
      terminationGracePeriodSeconds: 30
      volumes:
      
      - name: shell-config
        configMap:
          name: gitlab-gitlab-shell
      - name: sshd-config
        configMap:
          name: gitlab-gitlab-shell-sshd
      - name: shell-init-secrets
        projected:
          defaultMode: 0440
          sources:
            - secret:
                name: "gitlab-gitlab-shell-host-keys"
            - secret:
                name: "gitlab-gitlab-shell-secret"
                items:
                  - key: "secret"
                    path: shell/.gitlab_shell_secret
      # Actual config dirs that will be used in the container
      - name: shell-secrets
        emptyDir:
          medium: "Memory"
      
      - name: etc-ssl-certs
        emptyDir:
          medium: "Memory"
      - name: etc-pki-ca-trust-extracted-pem
        emptyDir:
          medium: "Memory"
      - name: custom-ca-certificates
        projected:
          defaultMode: 0440
          sources:
          - secret:
              name: ca-certs-australian-defence-organisation-cross-cert-chain
          - secret:
              name: ca-certs-australian-defence-organisation-direct-trust-chain
          - secret:
              name: ca-certs-boeing
          - secret:
              name: ca-certs-carillon-federal-services-trust-chain-1
          - secret:
              name: ca-certs-carillon-federal-services-trust-chain-2
          - secret:
              name: ca-certs-department-of-state-trust-chain-1
          - secret:
              name: ca-certs-department-of-state-trust-chain-2
          - secret:
              name: ca-certs-digicert-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-digicert-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-digicert-nfi-trust-chain-1
          - secret:
              name: ca-certs-digicert-nfi-trust-chain-2
          - secret:
              name: ca-certs-entrust-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-entrust-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-entrust-managed-service-nfi
          - secret:
              name: ca-certs-exostar-llc
          - secret:
              name: ca-certs-identrust-nfi
          - secret:
              name: ca-certs-lockheed-martin
          - secret:
              name: ca-certs-netherlands-ministry-of-defence
          - secret:
              name: ca-certs-northrop-grumman
          - secret:
              name: ca-certs-raytheon-trust-chain-1
          - secret:
              name: ca-certs-raytheon-trust-chain-2
          - secret:
              name: ca-certs-us-treasury-ssp-trust-chain-1
          - secret:
              name: ca-certs-us-treasury-ssp-trust-chain-2
          - secret:
              name: ca-certs-verizon-cybertrust-federal-ssp
          - secret:
              name: ca-certs-widepoint-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-widepoint-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-widepoint-nfi
          - secret:
              name: ca-certs-dod-intermediate-and-issuing-ca-certs
          - secret:
              name: ca-certs-dod-trust-anchors-self-signed
          - secret:
              name: ca-certs-eca
          - secret:
              name: gitlab-wildcard-tls-ca
---
# Source: gitlab/charts/gitlab/charts/sidekiq/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab-sidekiq-all-in-1-v2
  namespace: default
  labels:
    app: sidekiq
    chart: sidekiq-7.1.2
    release: gitlab
    heritage: Helm
    
    queue-pod-name: all-in-1
  annotations:
    
spec:
  selector:
    matchLabels:
      app: sidekiq
      release: gitlab
      
      queue-pod-name: all-in-1
  template:
    metadata:
      labels:
        app: sidekiq
        chart: sidekiq-7.1.2
        release: gitlab
        heritage: Helm
        
        
        queue-pod-name: all-in-1
      annotations:
        checksum/configmap: 1061df008eee0590ff0de18137d7f9f84837120a5fd59e427a8f100c7a625e54
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        gitlab.com/prometheus_scrape: "true"
        gitlab.com/prometheus_port: "3807"
        gitlab.com/prometheus_path: /metrics
        prometheus.io/scrape: "true"
        prometheus.io/port: "3807"
        prometheus.io/path: /metrics
    spec:
      
      
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: sidekiq
                  release: gitlab
                  
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 30
      initContainers:
        
        - name: certificates
          image: registry1.dso.mil/ironbank/gitlab/gitlab/certificates:16.1.2    
          env:
          
          
          volumeMounts:
          - name: etc-ssl-certs
            mountPath: /etc/ssl/certs
            readOnly: false
          - name: etc-pki-ca-trust-extracted-pem
            mountPath: /etc/pki/ca-trust/extracted/pem
            readOnly: false
          - name: custom-ca-certificates
            mountPath: /usr/local/share/ca-certificates
            readOnly: true
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
        - name: configure
          command: ['sh', '/config/configure']
          image: "registry1.dso.mil/ironbank/redhat/ubi/ubi8:8.8"                    
          env:
          
          
          volumeMounts:
          
          
          
          
          - name: sidekiq-config
            mountPath: /config
            readOnly: true
          - name: init-sidekiq-secrets
            mountPath: /init-config
            readOnly: true
          - name: sidekiq-secrets
            mountPath: /init-secrets
            readOnly: false
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
        - name: dependencies
          image: "registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-sidekiq:16.1.2"                    
          args:
            - /scripts/wait-for-deps
          env:
            - name: GITALY_FEATURE_DEFAULT_ON
              value: "1"
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: '/var/opt/gitlab/templates'
            - name: CONFIG_DIRECTORY
              value: '/srv/gitlab/config'
            - name: SIDEKIQ_CONCURRENCY
              value: "20"
            - name: SIDEKIQ_TIMEOUT
              value: "25"
            - name: ENABLE_BOOTSNAP
              value: "1"
            
            
          volumeMounts:
          
          
          - name: etc-ssl-certs
            mountPath: /etc/ssl/certs/
            readOnly: true
          - name: etc-ssl-certs
            mountPath: /etc/pki/tls/certs/
            readOnly: true
          - name: etc-ssl-certs
            mountPath: /etc/pki/tls/cert.pem
            subPath: ca-bundle.crt
            readOnly: true
          - name: etc-pki-ca-trust-extracted-pem
            mountPath: /etc/pki/ca-trust/extracted/pem
            readOnly: true
          - name: sidekiq-config
            mountPath: '/var/opt/gitlab/templates'
            readOnly: true
          - name: sidekiq-secrets
            mountPath: '/etc/gitlab'
            readOnly: true
          - name: sidekiq-secrets
            mountPath: /srv/gitlab/config/secrets.yml
            subPath: rails-secrets/secrets.yml
            readOnly: true
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi      
      imagePullSecrets:
      - name: private-registry
      containers:
        
        - name: sidekiq
          image: "registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-sidekiq:16.1.2"                    
          securityContext:
            runAsUser: 1000
          env:
            - name: prometheus_multiproc_dir
              value: /metrics
            - name: GITALY_FEATURE_DEFAULT_ON
              value: "1"
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: '/var/opt/gitlab/templates'
            - name: CONFIG_DIRECTORY
              value: '/srv/gitlab/config'
            - name: SIDEKIQ_QUEUE_SELECTOR
              value: ""
            - name: SIDEKIQ_CONCURRENCY
              value: "20"
            - name: SIDEKIQ_TIMEOUT
              value: "25"
            - name: SIDEKIQ_QUEUES
              value: 
            - name: SIDEKIQ_NEGATE_QUEUES
              value: 
            - name: SIDEKIQ_DAEMON_MEMORY_KILLER
              value: "1"
            - name: SIDEKIQ_MEMORY_KILLER_CHECK_INTERVAL
              value: "3"
            - name: SIDEKIQ_MEMORY_KILLER_MAX_RSS
              value: "2000000"
            - name: SIDEKIQ_MEMORY_KILLER_GRACE_TIME
              value: "900"
            - name: SIDEKIQ_MEMORY_KILLER_SHUTDOWN_WAIT
              value: "30"
            - name: ENABLE_BOOTSNAP
              value: "1"
            
            
            
          ports:
          - containerPort: 3807
            name: http-metrics
          volumeMounts:
          
          
          - name: sidekiq-metrics
            mountPath: '/metrics'
          - name: sidekiq-config
            mountPath: '/var/opt/gitlab/templates'
            readOnly: true
          - name: sidekiq-secrets
            mountPath: '/etc/gitlab'
            readOnly: true
          - name: sidekiq-secrets
            mountPath: /srv/gitlab/config/secrets.yml
            subPath: rails-secrets/secrets.yml
          - name: sidekiq-config
            mountPath: '/etc/krb5.conf'
            subPath: krb5.conf
          
          - name: sidekiq-config
            mountPath: '/srv/gitlab/config/initializers/smtp_settings.rb'
            subPath: smtp_settings.rb
          - name: sidekiq-config
            mountPath: '/srv/gitlab/INSTALLATION_TYPE'
            subPath: installation_type
          - name: etc-ssl-certs
            mountPath: /etc/ssl/certs/
            readOnly: true
          - name: etc-ssl-certs
            mountPath: /etc/pki/tls/certs/
            readOnly: true
          - name: etc-ssl-certs
            mountPath: /etc/pki/tls/cert.pem
            subPath: ca-bundle.crt
            readOnly: true
          - name: etc-pki-ca-trust-extracted-pem
            mountPath: /etc/pki/ca-trust/extracted/pem
            readOnly: true
          livenessProbe:
            httpGet:
              path: /liveness
              port: 3808
            initialDelaySeconds: 20
            periodSeconds: 60
            timeoutSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /readiness
              port: 3808
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "-c", "pkill -f 'sidekiq'"]
          resources:
            limits:
              cpu: 1500m
              memory: 3G
            requests:
              cpu: 1500m
              memory: 3G
      volumes:
      
      
      
      
      
      - name: sidekiq-metrics
        emptyDir:
          medium: "Memory"
      - name: sidekiq-config
        projected:
          sources:
            - configMap:
                name: gitlab-sidekiq
      - name: init-sidekiq-secrets
        projected:
          defaultMode: 0400
          sources:
          - secret:
              name: "gitlab-rails-secret"
              items:
                - key: secrets.yml
                  path: rails-secrets/secrets.yml
          - secret:
              name: "gitlab-gitaly-secret"
              items:
                - key: "token"
                  path: gitaly/gitaly_token
          
          
          - secret:
              name: "gitlab-redis-secret"
              items:
                - key: "secret"
                  path: redis/redis-password
          - secret:
              name: "gitlab-database"
              items:
                - key: "password"
                  path: postgres/psql-password-ci
          - secret:
              name: "gitlab-database"
              items:
                - key: "password"
                  path: postgres/psql-password-main
          - secret:
              name: "gitlab-registry-secret"
              items:
                - key: registry-auth.key
                  path: registry/gitlab-registry.key
          - secret:
              name: "gitlab-registry-notification"
              items:
                - key: "secret"
                  path: registry/notificationSecret
          
          
          # mount secret for suggested reviewers
          - secret:
              name: "gitlab-gitlab-suggested-reviewers"
              items:
                - key: "suggested_reviewers_secret"
                  path: suggested_reviewers/.gitlab_suggested_reviewers_secret
          # mount secret for minio
          - secret:
              name: "gitlab-minio-secret"
              items:
                - key: accesskey
                  path: minio/accesskey
                - key: secretkey
                  path: minio/secretkey
          # mount secret for object_store
          # mount secret for lfs
          # mount secret for artifacts
          # mount secret for uploads
          # mount secret for packages
          # mount secret for external_diffs
          # mount secret for terraform_state
          # mount secret for ci_secure_files
          # mount secret for dependency_proxy
          # mount secret for pages
          # mount secrets for LDAP
          
          
          # mount secrets for microsoftGraphMailer
      - name: sidekiq-secrets
        emptyDir:
          medium: "Memory"
      
      - name: etc-ssl-certs
        emptyDir:
          medium: "Memory"
      - name: etc-pki-ca-trust-extracted-pem
        emptyDir:
          medium: "Memory"
      - name: custom-ca-certificates
        projected:
          defaultMode: 0440
          sources:
          - secret:
              name: ca-certs-australian-defence-organisation-cross-cert-chain
          - secret:
              name: ca-certs-australian-defence-organisation-direct-trust-chain
          - secret:
              name: ca-certs-boeing
          - secret:
              name: ca-certs-carillon-federal-services-trust-chain-1
          - secret:
              name: ca-certs-carillon-federal-services-trust-chain-2
          - secret:
              name: ca-certs-department-of-state-trust-chain-1
          - secret:
              name: ca-certs-department-of-state-trust-chain-2
          - secret:
              name: ca-certs-digicert-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-digicert-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-digicert-nfi-trust-chain-1
          - secret:
              name: ca-certs-digicert-nfi-trust-chain-2
          - secret:
              name: ca-certs-entrust-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-entrust-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-entrust-managed-service-nfi
          - secret:
              name: ca-certs-exostar-llc
          - secret:
              name: ca-certs-identrust-nfi
          - secret:
              name: ca-certs-lockheed-martin
          - secret:
              name: ca-certs-netherlands-ministry-of-defence
          - secret:
              name: ca-certs-northrop-grumman
          - secret:
              name: ca-certs-raytheon-trust-chain-1
          - secret:
              name: ca-certs-raytheon-trust-chain-2
          - secret:
              name: ca-certs-us-treasury-ssp-trust-chain-1
          - secret:
              name: ca-certs-us-treasury-ssp-trust-chain-2
          - secret:
              name: ca-certs-verizon-cybertrust-federal-ssp
          - secret:
              name: ca-certs-widepoint-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-widepoint-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-widepoint-nfi
          - secret:
              name: ca-certs-dod-intermediate-and-issuing-ca-certs
          - secret:
              name: ca-certs-dod-trust-anchors-self-signed
          - secret:
              name: ca-certs-eca
          - secret:
              name: gitlab-wildcard-tls-ca
---
# Source: gitlab/charts/gitlab/charts/toolbox/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab-toolbox
  namespace: default
  labels:
    app: toolbox
    chart: toolbox-7.1.2
    release: gitlab
    heritage: Helm
    
  annotations:
    
spec:
  replicas: 1
  selector:
    matchLabels:
      app: toolbox
      release: gitlab
      
  strategy: 
    type: Recreate
  template:
    metadata:
      labels:
        app: toolbox
        chart: toolbox-7.1.2
        release: gitlab
        heritage: Helm
        
        
      annotations:
        checksum/config: 328f8f1d04636ca347732f837cb5ef192edf5a21422d45e1a5fb390760326739
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        sidecar.istio.io/proxyMemory: "512Mi"
        sidecar.istio.io/proxyMemoryLimit: "512Mi"
    spec:
      
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      automountServiceAccountToken: false
      
      initContainers:
        
        - name: certificates
          image: registry1.dso.mil/ironbank/gitlab/gitlab/certificates:16.1.2    
          env:
          
          
          volumeMounts:
          - name: etc-ssl-certs
            mountPath: /etc/ssl/certs
            readOnly: false
          - name: etc-pki-ca-trust-extracted-pem
            mountPath: /etc/pki/ca-trust/extracted/pem
            readOnly: false
          - name: custom-ca-certificates
            mountPath: /usr/local/share/ca-certificates
            readOnly: true
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
        - name: configure
          command: ['sh', '/config/configure']
          image: "registry1.dso.mil/ironbank/redhat/ubi/ubi8:8.8"                    
          env:
          
          
          volumeMounts:
          
          
          
          - name: toolbox-config
            mountPath: /config
            readOnly: true
          - name: init-toolbox-secrets
            mountPath: /init-config
            readOnly: true
          - name: toolbox-secrets
            mountPath: /init-secrets
            readOnly: false
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi      
      imagePullSecrets:
      - name: private-registry
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: gitaly
                  release: gitlab
      containers:
        
        - name: toolbox
          args:
            - /bin/bash
            - -c
            - cp -v -r -L /etc/gitlab/.s3cfg $HOME/.s3cfg && while sleep 3600; do :; done # alpine sleep has no infinity
          image: "registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-toolbox:16.1.2"                    
          securityContext:
            runAsUser: 1000
          env:
            - name: ARTIFACTS_BUCKET_NAME
              value: gitlab-artifacts
            - name: REGISTRY_BUCKET_NAME
              value: registry
            - name: LFS_BUCKET_NAME
              value: git-lfs
            - name: UPLOADS_BUCKET_NAME
              value: gitlab-uploads
            - name: PACKAGES_BUCKET_NAME
              value: gitlab-packages
            - name: EXTERNAL_DIFFS_BUCKET_NAME
              value: gitlab-mr-diffs
            - name: TERRAFORM_STATE_BUCKET_NAME
              value: gitlab-terraform-state
            - name: CI_SECURE_FILES_BUCKET_NAME
              value: gitlab-ci-secure-files
            - name: BACKUP_BUCKET_NAME
              value: gitlab-backups
            - name: BACKUP_BACKEND
              value: s3
            - name: TMP_BUCKET_NAME
              value: tmp
            - name: PAGES_BUCKET_NAME
              value: gitlab-pages
            - name: GITALY_FEATURE_DEFAULT_ON
              value: "1"
            - name: ENABLE_BOOTSNAP
              value: "1"
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: '/var/opt/gitlab/templates'
            - name: CONFIG_DIRECTORY
              value: '/srv/gitlab/config'
            
            
          volumeMounts:
            
            - name: toolbox-config
              mountPath: '/var/opt/gitlab/templates'
            - name: toolbox-config
              mountPath: '/etc/krb5.conf'
              subPath: krb5.conf
            
            - name: toolbox-config
              mountPath: '/srv/gitlab/config/initializers/smtp_settings.rb'
              subPath: smtp_settings.rb
            - name: toolbox-secrets
              mountPath: '/etc/gitlab'
              readOnly: true
            - name: toolbox-secrets
              mountPath: /srv/gitlab/config/secrets.yml
              subPath: rails-secrets/secrets.yml
            - name: toolbox-tmp
              mountPath: '/srv/gitlab/tmp'
              readOnly: false
            - name: etc-ssl-certs
              mountPath: /etc/ssl/certs/
              readOnly: true
            - name: etc-ssl-certs
              mountPath: /etc/pki/tls/certs/
              readOnly: true
            - name: etc-ssl-certs
              mountPath: /etc/pki/tls/cert.pem
              subPath: ca-bundle.crt
              readOnly: true
            - name: etc-pki-ca-trust-extracted-pem
              mountPath: /etc/pki/ca-trust/extracted/pem
              readOnly: true
          resources:
            limits:
              cpu: 2
              memory: 3.5Gi
            requests:
              cpu: 2
              memory: 3.5Gi
      volumes:
      
      
      
      
      - name: toolbox-config
        projected:
          sources:
            - configMap:
                name: gitlab-toolbox
      - name: toolbox-tmp
        emptyDir: {}
      - name: init-toolbox-secrets
        projected:
          defaultMode: 0400
          sources:
          - secret:
              name: "gitlab-rails-secret"
              items:
                - key: secrets.yml
                  path: rails-secrets/secrets.yml
          - secret:
              name: "gitlab-gitlab-shell-secret"
              items:
                - key: "secret"
                  path: shell/.gitlab_shell_secret
          - secret:
              name: "gitlab-gitaly-secret"
              items:
                - key: "token"
                  path: gitaly/gitaly_token
          
          
          - secret:
              name: "gitlab-redis-secret"
              items:
                - key: "secret"
                  path: redis/redis-password
          - secret:
              name: "gitlab-database"
              items:
                - key: "password"
                  path: postgres/psql-password-ci
          - secret:
              name: "gitlab-database"
              items:
                - key: "password"
                  path: postgres/psql-password-main
          - secret:
              name: "gitlab-registry-secret"
              items:
                - key: registry-auth.key
                  path: registry/gitlab-registry.key
          - secret:
              name: "gitlab-registry-notification"
              items:
                - key: "secret"
                  path: registry/notificationSecret
          
          
          # mount secret for suggested reviewers
          - secret:
              name: "gitlab-gitlab-suggested-reviewers"
              items:
                - key: "suggested_reviewers_secret"
                  path: suggested_reviewers/.gitlab_suggested_reviewers_secret
          # mount secret for minio
          - secret:
              name: "gitlab-minio-secret"
              items:
                - key: accesskey
                  path: minio/accesskey
                - key: secretkey
                  path: minio/secretkey
          # mount secret for object_store
          # mount secret for artifacts
          # mount secret for lfs
          # mount secret for uploads
          # mount secret for packages
          # mount secret for external_diffs
          # mount secret for terraform_state
          # mount secret for ci_secure_files
          # mount secret for dependency_proxy
          # mount secret for pages
          # mount secrets for LDAP
          
          
          # mount secrets for microsoftGraphMailer
      - name: toolbox-secrets
        emptyDir:
          medium: "Memory"
      
      - name: etc-ssl-certs
        emptyDir:
          medium: "Memory"
      - name: etc-pki-ca-trust-extracted-pem
        emptyDir:
          medium: "Memory"
      - name: custom-ca-certificates
        projected:
          defaultMode: 0440
          sources:
          - secret:
              name: ca-certs-australian-defence-organisation-cross-cert-chain
          - secret:
              name: ca-certs-australian-defence-organisation-direct-trust-chain
          - secret:
              name: ca-certs-boeing
          - secret:
              name: ca-certs-carillon-federal-services-trust-chain-1
          - secret:
              name: ca-certs-carillon-federal-services-trust-chain-2
          - secret:
              name: ca-certs-department-of-state-trust-chain-1
          - secret:
              name: ca-certs-department-of-state-trust-chain-2
          - secret:
              name: ca-certs-digicert-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-digicert-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-digicert-nfi-trust-chain-1
          - secret:
              name: ca-certs-digicert-nfi-trust-chain-2
          - secret:
              name: ca-certs-entrust-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-entrust-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-entrust-managed-service-nfi
          - secret:
              name: ca-certs-exostar-llc
          - secret:
              name: ca-certs-identrust-nfi
          - secret:
              name: ca-certs-lockheed-martin
          - secret:
              name: ca-certs-netherlands-ministry-of-defence
          - secret:
              name: ca-certs-northrop-grumman
          - secret:
              name: ca-certs-raytheon-trust-chain-1
          - secret:
              name: ca-certs-raytheon-trust-chain-2
          - secret:
              name: ca-certs-us-treasury-ssp-trust-chain-1
          - secret:
              name: ca-certs-us-treasury-ssp-trust-chain-2
          - secret:
              name: ca-certs-verizon-cybertrust-federal-ssp
          - secret:
              name: ca-certs-widepoint-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-widepoint-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-widepoint-nfi
          - secret:
              name: ca-certs-dod-intermediate-and-issuing-ca-certs
          - secret:
              name: ca-certs-dod-trust-anchors-self-signed
          - secret:
              name: ca-certs-eca
          - secret:
              name: gitlab-wildcard-tls-ca
---
# Source: gitlab/charts/gitlab/charts/webservice/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab-webservice-default
  namespace: default
  labels:
    app: webservice
    chart: webservice-7.1.2
    release: gitlab
    heritage: Helm
    gitlab.com/webservice-name: default
    
  annotations:
    
spec:
  # Don't provide replicas when HPA are present
  # replicas: 2
  selector:
    matchLabels:
      app: webservice
      release: gitlab
      
      
      gitlab.com/webservice-name: default
  template:
    metadata:
      labels:
        app: webservice
        chart: webservice-7.1.2
        release: gitlab
        heritage: Helm
        gitlab.com/webservice-name: default
        
        
        
      annotations:
        checksum/config: e291c814d428616cb4f4b7a78a524d6c4aa5cc2287497274d1227328967cd27b
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      
      
      
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: webservice
                  release: gitlab
                  
                  gitlab.com/webservice-name: default
      automountServiceAccountToken: false
      initContainers:
        
        - name: certificates
          image: registry1.dso.mil/ironbank/gitlab/gitlab/certificates:16.1.2    
          env:
          
          
          volumeMounts:
          - name: etc-ssl-certs
            mountPath: /etc/ssl/certs
            readOnly: false
          - name: etc-pki-ca-trust-extracted-pem
            mountPath: /etc/pki/ca-trust/extracted/pem
            readOnly: false
          - name: custom-ca-certificates
            mountPath: /usr/local/share/ca-certificates
            readOnly: true
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
        - name: configure
          command: ['sh']
          args: [ '-c', 'sh -x /config-webservice/configure ; sh -x /config-workhorse/configure ; mkdir -p -m 3770 /tmp/gitlab']
          image: "registry1.dso.mil/ironbank/redhat/ubi/ubi8:8.8"                    
          env:
            
            
          volumeMounts:
          
          
          
          - name: webservice-config
            mountPath: /config-webservice
            readOnly: true
          - name: workhorse-config
            mountPath: /config-workhorse
            readOnly: true
          - name: init-webservice-secrets
            mountPath: /init-config
            readOnly: true
          - name: webservice-secrets
            mountPath: /init-secrets
            readOnly: false
          - name: workhorse-secrets
            mountPath: /init-secrets-workhorse
            readOnly: false
          - name: shared-tmp
            mountPath: /tmp
            readOnly: false
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
        - name: dependencies
          image: registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-webservice:16.1.2                    
          args:
            - /scripts/wait-for-deps
          env:
            - name: GITALY_FEATURE_DEFAULT_ON
              value: "1"
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: '/var/opt/gitlab/templates'
            - name: CONFIG_DIRECTORY
              value: '/srv/gitlab/config'
            - name: WORKHORSE_ARCHIVE_CACHE_DISABLED
              value: "1"
            - name: ENABLE_BOOTSNAP
              value: "1"
            
            
          volumeMounts:
            
            - name: etc-ssl-certs
              mountPath: /etc/ssl/certs/
              readOnly: true
            - name: etc-ssl-certs
              mountPath: /etc/pki/tls/certs/
              readOnly: true
            - name: etc-ssl-certs
              mountPath: /etc/pki/tls/cert.pem
              subPath: ca-bundle.crt
              readOnly: true
            - name: etc-pki-ca-trust-extracted-pem
              mountPath: /etc/pki/ca-trust/extracted/pem
              readOnly: true
            - name: webservice-config
              mountPath: '/var/opt/gitlab/templates'
            - name: webservice-secrets
              mountPath: '/etc/gitlab'
              readOnly: true
            - name: webservice-secrets
              mountPath: /srv/gitlab/config/secrets.yml
              subPath: rails-secrets/secrets.yml
              readOnly: true
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi      
      imagePullSecrets:
      - name: private-registry
      containers:
        
        - name: webservice
          image: registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-webservice:16.1.2                    
          securityContext:
            runAsUser: 1000
          ports:
            - containerPort: 8080
              name: http-webservice
            - containerPort: 8083
              name: http-metrics-ws
          env:
            - name: GITLAB_WEBSERVER
              value: puma
            - name: TMPDIR
              value: "/tmp/gitlab"
            - name: GITALY_FEATURE_DEFAULT_ON
              value: "1"
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: '/var/opt/gitlab/templates'
            - name: CONFIG_DIRECTORY
              value: '/srv/gitlab/config'
            - name: prometheus_multiproc_dir
              value: /metrics
            - name: ENABLE_BOOTSNAP
              value: "1"
            - name: WORKER_PROCESSES
              value: "2"
            - name: WORKER_TIMEOUT
              value: "60"
            - name: INTERNAL_PORT
              value: "8080"
            - name: PUMA_THREADS_MIN
              value: "4"
            - name: PUMA_THREADS_MAX
              value: "4"
            - name: PUMA_WORKER_MAX_MEMORY
              value: ""
            - name: DISABLE_PUMA_WORKER_KILLER
              value: "true"
            - name: SHUTDOWN_BLACKOUT_SECONDS
              value: "10"
            
            - name: WORKHORSE_ARCHIVE_CACHE_DISABLED
              value: "true"
            
            
          volumeMounts:
            - name: webservice-metrics
              mountPath: '/metrics'
            - name: webservice-config
              mountPath: '/var/opt/gitlab/templates'
            - name: webservice-secrets
              mountPath: '/etc/gitlab'
              readOnly: true
            - name: webservice-secrets
              mountPath: /srv/gitlab/config/secrets.yml
              subPath: rails-secrets/secrets.yml
            - name: webservice-config
              mountPath: '/etc/krb5.conf'
              subPath: krb5.conf
            
            - name: webservice-config
              mountPath: '/srv/gitlab/config/initializers/smtp_settings.rb'
              subPath: smtp_settings.rb
            - name: webservice-config
              mountPath: '/srv/gitlab/INSTALLATION_TYPE'
              subPath: installation_type
            - name: shared-upload-directory
              mountPath: /srv/gitlab/public/uploads/tmp
              readOnly: false
            - name: shared-tmp
              mountPath: '/tmp'
              readOnly: false
            - name: etc-ssl-certs
              mountPath: /etc/ssl/certs/
              readOnly: true
            - name: etc-ssl-certs
              mountPath: /etc/pki/tls/certs/
              readOnly: true
            - name: etc-ssl-certs
              mountPath: /etc/pki/tls/cert.pem
              subPath: ca-bundle.crt
              readOnly: true
            - name: etc-pki-ca-trust-extracted-pem
              mountPath: /etc/pki/ca-trust/extracted/pem
              readOnly: true
            
          livenessProbe:
            httpGet:
              path: /-/liveness
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 60
            timeoutSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /-/readiness
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 2
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "-c", "pkill -SIGINT -o ruby"]
          resources:
            limits:
              cpu: 600m
              memory: 2.5G
            requests:
              cpu: 600m
              memory: 2.5G
        - name: gitlab-workhorse
          image: "registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-workhorse:16.1.2"          
          ports:
            - containerPort: 8181
              name: http-workhorse
            - containerPort: 9229
              name: http-metrics-wh
          env:
            - name: TMPDIR
              value: "/tmp/gitlab"
            - name: GITLAB_WORKHORSE_AUTH_BACKEND
              value: "http://localhost:8080"
            - name: GITLAB_WORKHORSE_EXTRA_ARGS
              value: ""
            - name: GITLAB_WORKHORSE_LISTEN_PORT
              value: "8181"
            - name: GITLAB_WORKHORSE_LOG_FORMAT
              value: "json"
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: '/var/opt/gitlab/templates'
            - name: CONFIG_DIRECTORY
              value: '/srv/gitlab/config'
            - name: SHUTDOWN_BLACKOUT_SECONDS
              value: "10"
            
            
            
          volumeMounts:
            - name: workhorse-config
              mountPath: '/var/opt/gitlab/templates'
            - name: workhorse-secrets
              mountPath: '/etc/gitlab'
              readOnly: true
            - name: shared-upload-directory
              mountPath: /srv/gitlab/public/uploads/tmp
              readOnly: false
            - name: shared-tmp
              mountPath: '/tmp'
              readOnly: false
            - name: etc-ssl-certs
              mountPath: /etc/ssl/certs/
              readOnly: true
            - name: etc-ssl-certs
              mountPath: /etc/pki/tls/certs/
              readOnly: true
            - name: etc-ssl-certs
              mountPath: /etc/pki/tls/cert.pem
              subPath: ca-bundle.crt
              readOnly: true
            - name: etc-pki-ca-trust-extracted-pem
              mountPath: /etc/pki/ca-trust/extracted/pem
              readOnly: true
            
            
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/bash
                - -c
                - sleep $SHUTDOWN_BLACKOUT_SECONDS
          livenessProbe:
            exec:
              command:
              - /scripts/healthcheck
            initialDelaySeconds: 20
            periodSeconds: 60
            timeoutSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
              - /scripts/healthcheck
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 600m
              memory: 2.5G
            requests:
              cpu: 600m
              memory: 2.5G
      volumes:
      
      
      
      
      - name: shared-tmp
        emptyDir: {}
      - name: webservice-metrics
        emptyDir:
          medium: "Memory"
      - name: webservice-config
        configMap:
          name: gitlab-webservice
      - name: workhorse-config
        configMap:
            name: gitlab-workhorse-default
      - name: init-webservice-secrets
        projected:
          defaultMode: 0400
          sources:
          - secret:
              name: "gitlab-rails-secret"
              items:
                - key: secrets.yml
                  path: rails-secrets/secrets.yml
          - secret:
              name: "gitlab-gitlab-shell-secret"
              items:
                - key: "secret"
                  path: shell/.gitlab_shell_secret
          # mount secrets for microsoftGraphMailer
          # mount secrets for incomingEmail
          # mount secrets for serviceDeskEmail
          - secret:
              name: "gitlab-gitaly-secret"
              items:
                - key: "token"
                  path: gitaly/gitaly_token
          
          
          - secret:
              name: "gitlab-redis-secret"
              items:
                - key: "secret"
                  path: redis/redis-password
          - secret:
              name: "gitlab-database"
              items:
                - key: "password"
                  path: postgres/psql-password-ci
          - secret:
              name: "gitlab-database"
              items:
                - key: "password"
                  path: postgres/psql-password-main
          - secret:
              name: "gitlab-registry-secret"
              items:
                - key: registry-auth.key
                  path: registry/gitlab-registry.key
          - secret:
              name: "gitlab-registry-notification"
              items:
                - key: "secret"
                  path: registry/notificationSecret
          - secret:
              name: "gitlab-gitlab-workhorse-secret"
              items:
                - key: "shared_secret"
                  path: gitlab-workhorse/secret
          
          
          # mount secret for suggested reviewers
          - secret:
              name: "gitlab-gitlab-suggested-reviewers"
              items:
                - key: "suggested_reviewers_secret"
                  path: suggested_reviewers/.gitlab_suggested_reviewers_secret
          # mount secret for minio
          - secret:
              name: "gitlab-minio-secret"
              items:
                - key: accesskey
                  path: minio/accesskey
                - key: secretkey
                  path: minio/secretkey
          # mount secret for object_store
          # mount secret for artifacts
          # mount secret for lfs
          # mount secret for uploads
          # mount secret for packages
          # mount secret for external_diffs
          # mount secret for terraform_state
          # mount secret for ci_secure_files
          # mount secret for dependency_proxy
          # mount secret for pages
          # mount secrets for LDAP
          
          
      - name: webservice-secrets
        emptyDir:
          medium: "Memory"
      - name: workhorse-secrets
        emptyDir:
          medium: "Memory"
      - name: shared-upload-directory
        emptyDir: {}
      
      - name: etc-ssl-certs
        emptyDir:
          medium: "Memory"
      - name: etc-pki-ca-trust-extracted-pem
        emptyDir:
          medium: "Memory"
      - name: custom-ca-certificates
        projected:
          defaultMode: 0440
          sources:
          - secret:
              name: ca-certs-australian-defence-organisation-cross-cert-chain
          - secret:
              name: ca-certs-australian-defence-organisation-direct-trust-chain
          - secret:
              name: ca-certs-boeing
          - secret:
              name: ca-certs-carillon-federal-services-trust-chain-1
          - secret:
              name: ca-certs-carillon-federal-services-trust-chain-2
          - secret:
              name: ca-certs-department-of-state-trust-chain-1
          - secret:
              name: ca-certs-department-of-state-trust-chain-2
          - secret:
              name: ca-certs-digicert-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-digicert-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-digicert-nfi-trust-chain-1
          - secret:
              name: ca-certs-digicert-nfi-trust-chain-2
          - secret:
              name: ca-certs-entrust-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-entrust-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-entrust-managed-service-nfi
          - secret:
              name: ca-certs-exostar-llc
          - secret:
              name: ca-certs-identrust-nfi
          - secret:
              name: ca-certs-lockheed-martin
          - secret:
              name: ca-certs-netherlands-ministry-of-defence
          - secret:
              name: ca-certs-northrop-grumman
          - secret:
              name: ca-certs-raytheon-trust-chain-1
          - secret:
              name: ca-certs-raytheon-trust-chain-2
          - secret:
              name: ca-certs-us-treasury-ssp-trust-chain-1
          - secret:
              name: ca-certs-us-treasury-ssp-trust-chain-2
          - secret:
              name: ca-certs-verizon-cybertrust-federal-ssp
          - secret:
              name: ca-certs-widepoint-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-widepoint-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-widepoint-nfi
          - secret:
              name: ca-certs-dod-intermediate-and-issuing-ca-certs
          - secret:
              name: ca-certs-dod-trust-anchors-self-signed
          - secret:
              name: ca-certs-eca
          - secret:
              name: gitlab-wildcard-tls-ca
---
# Source: gitlab/charts/minio/templates/minio_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab-minio
  namespace: default
  labels:
    app: minio
    chart: minio-0.4.3
    release: gitlab
    heritage: Helm
    
  annotations:
    
spec:
  selector:
    matchLabels:
      app: minio
      release: "gitlab"
      component: app
  strategy: 
    type: Recreate
  template:
    metadata:
      name: gitlab-minio
      labels:
        component: app
        app: minio
        chart: minio-0.4.3
        release: gitlab
        heritage: Helm
        
        
      annotations:
    spec:
      automountServiceAccountToken: false
      
      
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      
      volumes:
        - name: podinfo
          downwardAPI:
            items:
              - path: "labels"
                fieldRef:
                  fieldPath: metadata.labels
        - name: export
          persistentVolumeClaim:
            claimName: gitlab-minio
        - name: minio-configuration
          projected:
            sources:
            - configMap:
                name: gitlab-minio-config-cm
            - secret:
                name: "gitlab-minio-secret"
        - name: minio-server-config
          emptyDir:
            medium: "Memory"
      initContainers:
        - name: configure
          image: "registry1.dso.mil/ironbank/redhat/ubi/ubi8:8.8"          
          command: ["sh", "/config/configure"]
          volumeMounts:
            - name: minio-configuration
              mountPath: /config
            - name: minio-server-config
              mountPath: /minio
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi      
      imagePullSecrets:
      - name: private-registry
      containers:
        - name: minio
          image: registry1.dso.mil/ironbank/opensource/minio/minio:RELEASE.2022-12-12T19-27-27Z          
          args: ["-C", "/tmp/.minio", "--quiet", "server", "/export"]
          volumeMounts:
            - name: export
              mountPath: /export
            - name: minio-server-config
              # this path altered from upstream, for use with `securityContext`/UID 1000
              mountPath: "/tmp/.minio"
            - name: podinfo
              mountPath: /podinfo
              readOnly: false
          ports:
            - name: service
              containerPort: 9000
          livenessProbe:
            tcpSocket:
              port: 9000
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 300Mi
---
# Source: gitlab/charts/registry/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab-registry
  namespace: default
  labels:
    app: registry
    chart: registry-0.7.0
    release: gitlab
    heritage: Helm
    
  annotations:
    
spec:
  # Don't provide replicas when HPA are present
  # replicas: 2
  selector:
    matchLabels:
      app: registry
      release: gitlab
  template:
    metadata:
      labels:
        app: registry
        chart: registry-0.7.0
        release: gitlab
        heritage: Helm
        
        
      annotations:
        checksum/configmap: 7a04c91f90e6b8178fc198c01ac16a3b13a8bb073de09495801bed7ad61c00ce
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      
      
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: registry
                  release: gitlab
      automountServiceAccountToken: false
      
      initContainers:
        - name: certificates
          image: registry1.dso.mil/ironbank/gitlab/gitlab/certificates:16.1.2    
          env:
          
          
          volumeMounts:
          - name: etc-ssl-certs
            mountPath: /etc/ssl/certs
            readOnly: false
          - name: etc-pki-ca-trust-extracted-pem
            mountPath: /etc/pki/ca-trust/extracted/pem
            readOnly: false
          - name: custom-ca-certificates
            mountPath: /usr/local/share/ca-certificates
            readOnly: true
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
        - name: configure
          image: "registry1.dso.mil/ironbank/redhat/ubi/ubi8:8.8"                    
          command: ["sh", "/config/configure"]
          volumeMounts:
            - name: registry-secrets
              mountPath: /config
            - name: registry-server-config
              mountPath: /registry
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
          env:
          
                
      imagePullSecrets:
      - name: private-registry
      containers:
        - name: registry
          image: "registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-container-registry:16.1.2"                    
          securityContext:
            runAsUser: 1000
          env:
          
          
          volumeMounts:
          - name: registry-server-config
            mountPath: /etc/docker/registry/
            readOnly: true
          - name: etc-ssl-certs
            mountPath: /etc/ssl/certs/
            readOnly: true
          - name: etc-ssl-certs
            mountPath: /etc/pki/tls/certs/
            readOnly: true
          - name: etc-ssl-certs
            mountPath: /etc/pki/tls/cert.pem
            subPath: ca-bundle.crt
            readOnly: true
          - name: etc-pki-ca-trust-extracted-pem
            mountPath: /etc/pki/ca-trust/extracted/pem
            readOnly: true
          ports:
            - containerPort: 5000
              name: http
            - containerPort: 5001
              name: debug
          livenessProbe:
            httpGet:
              path: /debug/health
              port: debug
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /debug/health
              port: debug
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 200m
              memory: 1024Mi
            requests:
              cpu: 200m
              memory: 1024Mi
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "-c", "sleep 5"]
      terminationGracePeriodSeconds: 30
      volumes:
      - name: registry-server-config
        emptyDir:
          medium: "Memory"
      - name: registry-secrets
        projected:
          sources:
          - configMap:
              name: gitlab-registry
          - secret:
              name: "gitlab-registry-secret"
              items:
                  - key: registry-auth.crt
                    path: certificate.crt
          - secret:
              name: "gitlab-registry-httpsecret"
              items:
                - key: "secret"
                  path: httpSecret
          - secret:
              name: "gitlab-minio-secret"
          
          
      
      - name: etc-ssl-certs
        emptyDir:
          medium: "Memory"
      - name: etc-pki-ca-trust-extracted-pem
        emptyDir:
          medium: "Memory"
      - name: custom-ca-certificates
        projected:
          defaultMode: 0440
          sources:
          - secret:
              name: ca-certs-australian-defence-organisation-cross-cert-chain
          - secret:
              name: ca-certs-australian-defence-organisation-direct-trust-chain
          - secret:
              name: ca-certs-boeing
          - secret:
              name: ca-certs-carillon-federal-services-trust-chain-1
          - secret:
              name: ca-certs-carillon-federal-services-trust-chain-2
          - secret:
              name: ca-certs-department-of-state-trust-chain-1
          - secret:
              name: ca-certs-department-of-state-trust-chain-2
          - secret:
              name: ca-certs-digicert-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-digicert-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-digicert-nfi-trust-chain-1
          - secret:
              name: ca-certs-digicert-nfi-trust-chain-2
          - secret:
              name: ca-certs-entrust-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-entrust-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-entrust-managed-service-nfi
          - secret:
              name: ca-certs-exostar-llc
          - secret:
              name: ca-certs-identrust-nfi
          - secret:
              name: ca-certs-lockheed-martin
          - secret:
              name: ca-certs-netherlands-ministry-of-defence
          - secret:
              name: ca-certs-northrop-grumman
          - secret:
              name: ca-certs-raytheon-trust-chain-1
          - secret:
              name: ca-certs-raytheon-trust-chain-2
          - secret:
              name: ca-certs-us-treasury-ssp-trust-chain-1
          - secret:
              name: ca-certs-us-treasury-ssp-trust-chain-2
          - secret:
              name: ca-certs-verizon-cybertrust-federal-ssp
          - secret:
              name: ca-certs-widepoint-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-widepoint-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-widepoint-nfi
          - secret:
              name: ca-certs-dod-intermediate-and-issuing-ca-certs
          - secret:
              name: ca-certs-dod-trust-anchors-self-signed
          - secret:
              name: ca-certs-eca
          - secret:
              name: gitlab-wildcard-tls-ca
---
# Source: gitlab/charts/gitlab/charts/gitlab-shell/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gitlab-gitlab-shell
  namespace: default
  labels:
    app: gitlab-shell
    chart: gitlab-shell-7.1.2
    release: gitlab
    heritage: Helm
    
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gitlab-gitlab-shell
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
---
# Source: gitlab/charts/gitlab/charts/sidekiq/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gitlab-sidekiq-all-in-1-v2
  namespace: default
  labels:
    app: sidekiq
    chart: sidekiq-7.1.2
    release: gitlab
    heritage: Helm
    
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gitlab-sidekiq-all-in-1-v2
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 350m
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
---
# Source: gitlab/charts/gitlab/charts/webservice/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gitlab-webservice-default
  namespace: default
  labels:
    app: webservice
    chart: webservice-7.1.2
    release: gitlab
    heritage: Helm
    gitlab.com/webservice-name: default
    
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gitlab-webservice-default
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 1
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
---
# Source: gitlab/charts/registry/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gitlab-registry
  namespace: default
  labels:
    app: registry
    chart: registry-0.7.0
    release: gitlab
    heritage: Helm
    
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gitlab-registry
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 75
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
---
# Source: gitlab/charts/gitlab/charts/gitaly/templates/statefulset.yml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: gitlab-gitaly
  namespace: default
  labels:
    app: gitaly
    chart: gitaly-7.1.2
    release: gitlab
    heritage: Helm
    
spec:
  selector:
    matchLabels:
      app: gitaly
      release: gitlab
      
  serviceName: gitlab-gitaly
  replicas: 1
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: gitaly
        chart: gitaly-7.1.2
        release: gitlab
        heritage: Helm
        
        
      annotations:
        checksum/config: 37c40009b6017bc303c732e7ecc1904f16b0dd136da7f3f23fd49eddca2315f9
    spec:
      
      terminationGracePeriodSeconds: 30
      initContainers:
        
        - name: certificates
          image: registry1.dso.mil/ironbank/gitlab/gitlab/certificates:16.1.2    
          env:
          
          
          volumeMounts:
          - name: etc-ssl-certs
            mountPath: /etc/ssl/certs
            readOnly: false
          - name: etc-pki-ca-trust-extracted-pem
            mountPath: /etc/pki/ca-trust/extracted/pem
            readOnly: false
          - name: custom-ca-certificates
            mountPath: /usr/local/share/ca-certificates
            readOnly: true
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
        - name: configure
          command: ['sh', '/config/configure']
          image: "registry1.dso.mil/ironbank/redhat/ubi/ubi8:8.8"                    
          env:
          
          
          volumeMounts:
          
          - name: gitaly-config
            mountPath: /config
            readOnly: true
          - name: init-gitaly-secrets
            mountPath: /init-config
            readOnly: true
          - name: gitaly-secrets
            mountPath: /init-secrets
            readOnly: false
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
      
      securityContext:
        runAsUser: 1000
        fsGroup: 1000      
      imagePullSecrets:
      - name: private-registry
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: gitaly
                  release: gitlab
                  
      automountServiceAccountToken: false
      containers:
        
        - name: gitaly
          image: "registry1.dso.mil/ironbank/gitlab/gitlab/gitaly:16.1.2"                    
          securityContext:
            runAsUser: 1000
          ports:
            - containerPort: 8075
              name: grpc-gitaly
            - containerPort: 9236
              name: http-metrics
          env:
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: '/etc/gitaly/templates'
            - name: CONFIG_DIRECTORY
              value: '/etc/gitaly'
            - name: GITALY_CONFIG_FILE
              value: '/etc/gitaly/config.toml'
            - name: SSL_CERT_DIR
              value: '/etc/ssl/certs'
            
            
            
          volumeMounts:
            
            - name: etc-ssl-certs
              mountPath: /etc/ssl/certs/
              readOnly: true
            - name: etc-ssl-certs
              mountPath: /etc/pki/tls/certs/
              readOnly: true
            - name: etc-ssl-certs
              mountPath: /etc/pki/tls/cert.pem
              subPath: ca-bundle.crt
              readOnly: true
            - name: etc-pki-ca-trust-extracted-pem
              mountPath: /etc/pki/ca-trust/extracted/pem
              readOnly: true
            - name: gitaly-config
              mountPath: '/etc/gitaly/templates'
            - name: gitaly-secrets
              mountPath: '/etc/gitlab-secrets'
              readOnly: true
            - name: repo-data
              mountPath: '/home/git/repositories'
          livenessProbe:
            exec:
              command:
              - /scripts/healthcheck
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
              - /scripts/healthcheck
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 400m
              memory: 600Mi
            requests:
              cpu: 400m
              memory: 600Mi
      volumes:
      
      - name: gitaly-config
        configMap:
          name: gitlab-gitaly
      - name: gitaly-secrets
        emptyDir:
          medium: "Memory"
      - name: init-gitaly-secrets
        projected:
          defaultMode: 0440
          sources:
          - secret:
              name: "gitlab-gitaly-secret"
              items:
                - key: "token"
                  path: "gitaly_token"
          - secret:
              name: "gitlab-gitlab-shell-secret"
              items:
                - key: "secret"
                  path: ".gitlab_shell_secret"
      
      - name: etc-ssl-certs
        emptyDir:
          medium: "Memory"
      - name: etc-pki-ca-trust-extracted-pem
        emptyDir:
          medium: "Memory"
      - name: custom-ca-certificates
        projected:
          defaultMode: 0440
          sources:
          - secret:
              name: ca-certs-australian-defence-organisation-cross-cert-chain
          - secret:
              name: ca-certs-australian-defence-organisation-direct-trust-chain
          - secret:
              name: ca-certs-boeing
          - secret:
              name: ca-certs-carillon-federal-services-trust-chain-1
          - secret:
              name: ca-certs-carillon-federal-services-trust-chain-2
          - secret:
              name: ca-certs-department-of-state-trust-chain-1
          - secret:
              name: ca-certs-department-of-state-trust-chain-2
          - secret:
              name: ca-certs-digicert-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-digicert-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-digicert-nfi-trust-chain-1
          - secret:
              name: ca-certs-digicert-nfi-trust-chain-2
          - secret:
              name: ca-certs-entrust-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-entrust-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-entrust-managed-service-nfi
          - secret:
              name: ca-certs-exostar-llc
          - secret:
              name: ca-certs-identrust-nfi
          - secret:
              name: ca-certs-lockheed-martin
          - secret:
              name: ca-certs-netherlands-ministry-of-defence
          - secret:
              name: ca-certs-northrop-grumman
          - secret:
              name: ca-certs-raytheon-trust-chain-1
          - secret:
              name: ca-certs-raytheon-trust-chain-2
          - secret:
              name: ca-certs-us-treasury-ssp-trust-chain-1
          - secret:
              name: ca-certs-us-treasury-ssp-trust-chain-2
          - secret:
              name: ca-certs-verizon-cybertrust-federal-ssp
          - secret:
              name: ca-certs-widepoint-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-widepoint-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-widepoint-nfi
          - secret:
              name: ca-certs-dod-intermediate-and-issuing-ca-certs
          - secret:
              name: ca-certs-dod-trust-anchors-self-signed
          - secret:
              name: ca-certs-eca
          - secret:
              name: gitlab-wildcard-tls-ca
      

  
  volumeClaimTemplates:
    - metadata:
        name: repo-data
        labels:
          app: gitaly
          release: gitlab
        annotations:
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "50Gi"
        selector:
---
# Source: gitlab/charts/redis/templates/master/application.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: gitlab-redis-master
  namespace: "default"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-16.13.2
    app.kubernetes.io/instance: gitlab
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: master
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: gitlab
      app.kubernetes.io/component: master
  serviceName: gitlab-redis-headless
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        helm.sh/chart: redis-16.13.2
        app.kubernetes.io/instance: gitlab
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: master
      annotations:
        checksum/configmap: c925fc8226b0ec6264876aa9ddc91300d287c99cb9e3cea96bf7aab35a377c6e
        checksum/health: e6f317a4de1a6e275eb2183e1c4953e7e9056cce0f9be2face3e366d8dfd50cc
        checksum/scripts: eecc15ab01d78dc716e5e2fa08c907f0c7637cdb74db0c35d13255bb1b214f7f
        checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        prometheus.io/port: "9121"
        prometheus.io/scrape: "true"
    spec:
      
      imagePullSecrets:
        - name: private-registry
      securityContext:
        fsGroup: 1001
      serviceAccountName: gitlab-redis
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: redis
                    app.kubernetes.io/instance: gitlab
                    app.kubernetes.io/component: master
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      terminationGracePeriodSeconds: 30
      containers:
        - name: redis
          image: registry1.dso.mil/ironbank/bitnami/redis:7.0.0-debian-10-r3
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          command:
            - /bin/bash
          args:
            - -c
            - /opt/bitnami/scripts/start-scripts/start-master.sh
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: REDIS_REPLICATION_MODE
              value: master
            - name: ALLOW_EMPTY_PASSWORD
              value: "no"
            - name: REDIS_PASSWORD_FILE
              value: "/opt/bitnami/redis/secrets/redis-password"
            - name: REDIS_TLS_ENABLED
              value: "no"
            - name: REDIS_PORT
              value: "6379"
          ports:
            - name: redis
              containerPort: 6379
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            # One second longer than command timeout should prevent generation of zombie processes.
            timeoutSeconds: 6
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /health/ping_liveness_local.sh 5
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /health/ping_readiness_local.sh 1
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: start-scripts
              mountPath: /opt/bitnami/scripts/start-scripts
            - name: health
              mountPath: /health
            - name: redis-password
              mountPath: /opt/bitnami/redis/secrets/
            - name: redis-data
              mountPath: /data
              subPath: 
            - name: config
              mountPath: /opt/bitnami/redis/mounted-etc
            - name: redis-tmp-conf
              mountPath: /opt/bitnami/redis/etc/
            - name: tmp
              mountPath: /tmp
        - name: metrics
          image: registry1.dso.mil/ironbank/bitnami/analytics/redis-exporter:v1.51.0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          command:
            - /bin/bash
            - -c
            - |
              if [[ -f '/secrets/redis-password' ]]; then
              export REDIS_PASSWORD=$(cat /secrets/redis-password)
              fi
              redis_exporter
          env:
            - name: REDIS_ALIAS
              value: gitlab-redis
            - name: REDIS_USER
              value: default
          ports:
            - name: metrics
              containerPort: 9121
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: redis-password
              mountPath: /secrets/
      volumes:
        - name: start-scripts
          configMap:
            name: gitlab-redis-scripts
            defaultMode: 0755
        - name: health
          configMap:
            name: gitlab-redis-health
            defaultMode: 0755
        - name: redis-password
          secret:
            secretName: "gitlab-redis-secret"
            items:
            - key: "secret"
              path: redis-password
        - name: config
          configMap:
            name: gitlab-redis-configuration
        - name: redis-tmp-conf
          emptyDir: {}
        - name: tmp
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          app.kubernetes.io/name: redis
          app.kubernetes.io/instance: gitlab
          app.kubernetes.io/component: master
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: gitlab/charts/gitlab/charts/migrations/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: gitlab-migrations-1
  namespace: default
  labels:
    app: migrations
    chart: migrations-7.1.2
    release: gitlab
    heritage: Helm
    
  annotations:
    sidecar.istio.io/inject: "false"
spec:
  activeDeadlineSeconds: 3600
  backoffLimit: 6
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: migrations
        chart: migrations-7.1.2
        release: gitlab
        heritage: Helm
        
        
    spec:
      
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      automountServiceAccountToken: false
      
      initContainers:
        
        - name: certificates
          image: registry1.dso.mil/ironbank/gitlab/gitlab/certificates:16.1.2    
          env:
          
          
          volumeMounts:
          - name: etc-ssl-certs
            mountPath: /etc/ssl/certs
            readOnly: false
          - name: etc-pki-ca-trust-extracted-pem
            mountPath: /etc/pki/ca-trust/extracted/pem
            readOnly: false
          - name: custom-ca-certificates
            mountPath: /usr/local/share/ca-certificates
            readOnly: true
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
        - name: configure
          command: ['sh', '/config/configure']
          image: "registry1.dso.mil/ironbank/redhat/ubi/ubi8:8.8"                    
          env:
          
          
          volumeMounts:
          
          
          
          - name: migrations-config
            mountPath: /config
            readOnly: true
          - name: init-migrations-secrets
            mountPath: /init-config
            readOnly: true
          - name: migrations-secrets
            mountPath: /init-secrets
            readOnly: false
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
      restartPolicy: OnFailure      
      imagePullSecrets:
      - name: private-registry
      containers:
        
        - name: migrations
          image: "registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-toolbox:16.1.2"
          args:
            - /scripts/wait-for-deps
            - /scripts/db-migrate                    
          securityContext:
            runAsUser: 1000
          env:
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: '/var/opt/gitlab/templates'
            - name: CONFIG_DIRECTORY
              value: '/srv/gitlab/config'
            - name: BYPASS_SCHEMA_VERSION
              value: 'true'
            - name: ENABLE_BOOTSNAP
              value: '1'
            
            
          volumeMounts:
            - name: migrations-config
              mountPath: '/var/opt/gitlab/templates'
            - name: migrations-secrets
              mountPath: '/etc/gitlab'
              readOnly: true
            - name: migrations-secrets
              mountPath: /srv/gitlab/config/secrets.yml
              subPath: rails-secrets/secrets.yml
            - name: migrations-secrets
              mountPath: /srv/gitlab/config/initial_root_password
              subPath: migrations/initial_root_password
            - name: migrations-secrets
              mountPath: /srv/gitlab/config/gitlab_shared_runners_registration_token
              subPath: migrations/gitlab_shared_runners_registration_token
            
            - name: etc-ssl-certs
              mountPath: /etc/ssl/certs/
              readOnly: true
            - name: etc-ssl-certs
              mountPath: /etc/pki/tls/certs/
              readOnly: true
            - name: etc-ssl-certs
              mountPath: /etc/pki/tls/cert.pem
              subPath: ca-bundle.crt
              readOnly: true
            - name: etc-pki-ca-trust-extracted-pem
              mountPath: /etc/pki/ca-trust/extracted/pem
              readOnly: true
          resources:
            limits:
              cpu: 500m
              memory: 1G
            requests:
              cpu: 500m
              memory: 1G
      volumes:
      
      
      
      - name: migrations-config
        configMap:
          name: gitlab-migrations
      - name: init-migrations-secrets
        projected:
          defaultMode: 0400
          sources:
          
          - secret:
              name: "gitlab-rails-secret"
              items:
                - key: secrets.yml
                  path: rails-secrets/secrets.yml
          - secret:
              name: "gitlab-gitaly-secret"
              items:
                - key: "token"
                  path: gitaly/gitaly_token
          
          
          - secret:
              name: "gitlab-redis-secret"
              items:
                - key: "secret"
                  path: redis/redis-password
          - secret:
              name: "gitlab-database"
              items:
                - key: "password"
                  path: postgres/psql-password-ci
          - secret:
              name: "gitlab-database"
              items:
                - key: "password"
                  path: postgres/psql-password-main
          - secret:
              name: "gitlab-gitlab-initial-root-password"
              items:
                - key: "password"
                  path: migrations/initial_root_password
          - secret:
              name: "gitlab-gitlab-runner-secret"
              items:
                - key: runner-registration-token
                  path: migrations/gitlab_shared_runners_registration_token
      - name: migrations-secrets
        emptyDir:
          medium: "Memory"
      
      - name: etc-ssl-certs
        emptyDir:
          medium: "Memory"
      - name: etc-pki-ca-trust-extracted-pem
        emptyDir:
          medium: "Memory"
      - name: custom-ca-certificates
        projected:
          defaultMode: 0440
          sources:
          - secret:
              name: ca-certs-australian-defence-organisation-cross-cert-chain
          - secret:
              name: ca-certs-australian-defence-organisation-direct-trust-chain
          - secret:
              name: ca-certs-boeing
          - secret:
              name: ca-certs-carillon-federal-services-trust-chain-1
          - secret:
              name: ca-certs-carillon-federal-services-trust-chain-2
          - secret:
              name: ca-certs-department-of-state-trust-chain-1
          - secret:
              name: ca-certs-department-of-state-trust-chain-2
          - secret:
              name: ca-certs-digicert-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-digicert-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-digicert-nfi-trust-chain-1
          - secret:
              name: ca-certs-digicert-nfi-trust-chain-2
          - secret:
              name: ca-certs-entrust-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-entrust-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-entrust-managed-service-nfi
          - secret:
              name: ca-certs-exostar-llc
          - secret:
              name: ca-certs-identrust-nfi
          - secret:
              name: ca-certs-lockheed-martin
          - secret:
              name: ca-certs-netherlands-ministry-of-defence
          - secret:
              name: ca-certs-northrop-grumman
          - secret:
              name: ca-certs-raytheon-trust-chain-1
          - secret:
              name: ca-certs-raytheon-trust-chain-2
          - secret:
              name: ca-certs-us-treasury-ssp-trust-chain-1
          - secret:
              name: ca-certs-us-treasury-ssp-trust-chain-2
          - secret:
              name: ca-certs-verizon-cybertrust-federal-ssp
          - secret:
              name: ca-certs-widepoint-federal-ssp-trust-chain-1
          - secret:
              name: ca-certs-widepoint-federal-ssp-trust-chain-2
          - secret:
              name: ca-certs-widepoint-nfi
          - secret:
              name: ca-certs-dod-intermediate-and-issuing-ca-certs
          - secret:
              name: ca-certs-dod-trust-anchors-self-signed
          - secret:
              name: ca-certs-eca
          - secret:
              name: gitlab-wildcard-tls-ca
---
# Source: gitlab/charts/minio/templates/create-buckets-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: gitlab-minio-create-buckets-1
  namespace: default
  labels:
    app: minio
    chart: minio-0.4.3
    release: gitlab
    heritage: Helm
    
spec:
  activeDeadlineSeconds: 600
  template:
    metadata:
      labels:
        component: create-buckets
        app: minio
        chart: minio-0.4.3
        release: gitlab
        heritage: Helm
        
        
      annotations:
        sidecar.istio.io/inject: "false"

    spec:
      automountServiceAccountToken: false
      restartPolicy: OnFailure
      
      
      volumes:
        - name: minio-configuration
          projected:
            sources:
            - configMap:
                name: gitlab-minio-config-cm
            - secret:
                name: "gitlab-minio-secret"      
      imagePullSecrets:
      - name: private-registry
      containers:
      - name: minio-mc
        image: registry1.dso.mil/ironbank/opensource/minio/mc:RELEASE.2022-12-24T15-21-38Z        
        command: ["/bin/sh", "/config/initialize"]
        env:
          - name: MINIO_ENDPOINT
            value: gitlab-minio-svc.default.svc
          - name: MINIO_PORT
            value: "9000"
        volumeMounts:
          - name: minio-configuration
            mountPath: /config
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 200m
            memory: 200Mi
---
# Source: gitlab/templates/bigbang/peerauthentications/metrics-exception.yaml
# metrics for gitlab but only when gitlab runner is enabled
---
# Source: gitlab/templates/shared-secrets/rbac-config.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab-shared-secrets
  namespace: default
  labels:
    app: gitlab
    chart: gitlab-7.1.2-bb.0
    release: gitlab
    heritage: Helm
    
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
---
# Source: gitlab/templates/shared-secrets/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-shared-secrets
  namespace: default
  labels:
    app: gitlab
    chart: gitlab-7.1.2-bb.0
    release: gitlab
    heritage: Helm
    
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-3"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
data:
  generate-secrets: |
    # vim: set filetype=sh:
    
    namespace=default
    release=gitlab
    env=production
    
    pushd $(mktemp -d)
    
    # Args pattern, length
    function gen_random(){
      head -c 4096 /dev/urandom | LC_CTYPE=C tr -cd $1 | head -c $2
    }
    
    # Args: yaml file, search path
    function fetch_rails_value(){
      local value=$(yq ".${2}" $1)
    
      # Don't return null values
      if [ "${value}" != "null" ]; then echo "${value}"; fi
    }
    
    # Args: secretname
    function label_secret(){
      local secret_name=$1
    # Remove application labels if they exist
      kubectl --namespace=$namespace label \
        secret $secret_name $(echo 'app.kubernetes.io/name=gitlab' | sed -E 's/=[^ ]*/-/g')
    
      kubectl --namespace=$namespace label \
        --overwrite \
        secret $secret_name app=gitlab chart=gitlab-7.1.2-bb.0 release=gitlab heritage=Helm 
    }
    
    # Args: secretname, args
    function generate_secret_if_needed(){
      local secret_args=( "${@:2}")
      local secret_name=$1
    
      if ! $(kubectl --namespace=$namespace get secret $secret_name > /dev/null 2>&1); then
        kubectl --namespace=$namespace create secret generic $secret_name ${secret_args[@]}
      else
        echo "secret \"$secret_name\" already exists."
    
        for arg in "${secret_args[@]}"; do
          local from=$(echo -n ${arg} | cut -d '=' -f1)
    
          if [ -z "${from##*literal*}" ]; then
            local key=$(echo -n ${arg} | cut -d '=' -f2)
            local desiredValue=$(echo -n ${arg} | cut -d '=' -f3-)
            local flags="--namespace=$namespace --allow-missing-template-keys=false"
    
            if ! $(kubectl $flags get secret $secret_name -ojsonpath="{.data.${key}}" > /dev/null 2>&1); then
              echo "key \"${key}\" does not exist. patching it in."
    
              if [ "${desiredValue}" != "" ]; then
                desiredValue=$(echo -n "${desiredValue}" | base64 -w 0)
              fi
    
              kubectl --namespace=$namespace patch secret ${secret_name} -p "{\"data\":{\"$key\":\"${desiredValue}\"}}"
            fi
          fi
        done
      fi
    
      label_secret $secret_name
    }
    
    # Initial root password
    generate_secret_if_needed "gitlab-gitlab-initial-root-password" --from-literal="password"=$(gen_random 'a-zA-Z0-9' 64)
    
    
    # Redis password
    generate_secret_if_needed "gitlab-redis-secret" --from-literal="secret"=$(gen_random 'a-zA-Z0-9' 64)
    
    
    
    
    # Gitlab shell
    generate_secret_if_needed "gitlab-gitlab-shell-secret" --from-literal="secret"=$(gen_random 'a-zA-Z0-9' 64)
    
    # Gitaly secret
    generate_secret_if_needed "gitlab-gitaly-secret" --from-literal="token"=$(gen_random 'a-zA-Z0-9' 64)
    
    # Minio secret
    generate_secret_if_needed "gitlab-minio-secret" --from-literal=accesskey=$(gen_random 'a-zA-Z0-9' 64) --from-literal=secretkey=$(gen_random 'a-zA-Z0-9' 64)
    
    
    # Gitlab runner secret
    generate_secret_if_needed "gitlab-gitlab-runner-secret" --from-literal=runner-registration-token=$(gen_random 'a-zA-Z0-9' 64) --from-literal=runner-token=""
    
    # GitLab Pages API secret
    
    
    # GitLab Pages auth secret for hashing cookie store when using access control
    
    
    # GitLab Pages OAuth secret
    
    
    
    
    # Gitlab-suggested-reviewers secret
    generate_secret_if_needed "gitlab-gitlab-suggested-reviewers" --from-literal="suggested_reviewers_secret"=$(gen_random 'a-zA-Z0-9' 32 | base64)
    
    
    
    
    
    # Registry certificates
    mkdir -p certs
    openssl req -new -newkey rsa:4096 -subj "/CN=gitlab-issuer" -nodes -x509 -keyout certs/registry-example-com.key -out certs/registry-example-com.crt -days 3650
    generate_secret_if_needed "gitlab-registry-secret" --from-file=registry-auth.key=certs/registry-example-com.key --from-file=registry-auth.crt=certs/registry-example-com.crt
    
    # config/secrets.yaml
    if [ -n "$env" ]; then
      rails_secret="gitlab-rails-secret"
    
      # Fetch the values from the existing secret if it exists
      if $(kubectl --namespace=$namespace get secret $rails_secret > /dev/null 2>&1); then
        kubectl --namespace=$namespace get secret $rails_secret -o jsonpath="{.data.secrets\.yml}" | base64 --decode > secrets.yml
        secret_key_base=$(fetch_rails_value secrets.yml "${env}.secret_key_base")
        otp_key_base=$(fetch_rails_value secrets.yml "${env}.otp_key_base")
        db_key_base=$(fetch_rails_value secrets.yml "${env}.db_key_base")
        openid_connect_signing_key=$(fetch_rails_value secrets.yml "${env}.openid_connect_signing_key")
        ci_jwt_signing_key=$(fetch_rails_value secrets.yml "${env}.ci_jwt_signing_key")
        encrypted_settings_key_base=$(fetch_rails_value secrets.yml "${env}.encrypted_settings_key_base")
      fi;
    
      # Generate defaults for any unset secrets
      secret_key_base="${secret_key_base:-$(gen_random 'a-f0-9' 128)}" # equavilent to secureRandom.hex(64)
      otp_key_base="${otp_key_base:-$(gen_random 'a-f0-9' 128)}" # equavilent to secureRandom.hex(64)
      db_key_base="${db_key_base:-$(gen_random 'a-f0-9' 128)}" # equavilent to secureRandom.hex(64)
      openid_connect_signing_key="${openid_connect_signing_key:-$(openssl genrsa 2048)}"
      ci_jwt_signing_key="${ci_jwt_signing_key:-$(openssl genrsa 2048)}"
      encrypted_settings_key_base="${encrypted_settings_key_base:-$(gen_random 'a-f0-9' 128)}" # equavilent to secureRandom.hex(64)
    
      # Update the existing secret
      cat << EOF > rails-secrets.yml
    apiVersion: v1
    kind: Secret
    metadata:
      name: $rails_secret
    type: Opaque
    stringData:
      secrets.yml: |-
        $env:
          secret_key_base: $secret_key_base
          otp_key_base: $otp_key_base
          db_key_base: $db_key_base
          encrypted_settings_key_base: $encrypted_settings_key_base
          openid_connect_signing_key: |
    $(echo "${openid_connect_signing_key}" | awk '{print "        " $0}')
          ci_jwt_signing_key: |
    $(echo "${ci_jwt_signing_key}" | awk '{print "        " $0}')
    EOF
      kubectl --validate=false --namespace=$namespace apply -f rails-secrets.yml
      label_secret $rails_secret
    fi
    
    # Shell ssh host keys
    ssh-keygen -A
    mkdir -p host_keys
    cp /etc/ssh/ssh_host_* host_keys/
    generate_secret_if_needed "gitlab-gitlab-shell-host-keys" --from-file host_keys
    
    # Gitlab-workhorse secret
    generate_secret_if_needed "gitlab-gitlab-workhorse-secret" --from-literal="shared_secret"=$(gen_random 'a-zA-Z0-9' 32 | base64)
    
    # Registry http.secret secret
    generate_secret_if_needed "gitlab-registry-httpsecret" --from-literal="secret"=$(gen_random 'a-z0-9' 128 | base64 -w 0)
    
    # Container Registry notification_secret
    generate_secret_if_needed "gitlab-registry-notification" --from-literal="secret"=[\"$(gen_random 'a-zA-Z0-9' 32)\"]
---
# Source: gitlab/templates/upgrade_check_hook.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-gitlab-upgrade-check
  namespace: default
  labels:
    app: gitlab
    chart: gitlab-7.1.2-bb.0
    release: gitlab
    heritage: Helm
    
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "-11"
    "helm.sh/hook-delete-policy": before-hook-creation
data:
  runcheck: |
    #!/bin/sh
    
    set -e
    
    notify() {
      echo "$1"
      echo -n "$1 " >> /dev/termination-log
    }
    
    greater_version()
    {
      test "$(printf '%s\n' "$@" | sort -V | tail -n 1)" = "$1";
    }
    
    # For the PostgreSQL upgrade, you either need both secrets, or no secrets.
    # If there are no secrets, we will create them for you.
    # If the secrets aren't in either of these states, we assume you are upgrading from an older version
    # This is running ahead of version checks to ensure this always runs. This is to account for
    # installations outside of the official helm repo.
    secrets_dir="/etc/secrets/postgresql"
    if [ -d "${secrets_dir}" ]; then
      if [ ! "$(ls -A ${secrets_dir}/..data/)" = "" ]; then
        if [ ! -f "${secrets_dir}/postgresql-postgres-password" ] || [ ! -f "${secrets_dir}/password" ]; then
          notify "You seem to be upgrading from a previous version of GitLab using the bundled PostgreSQL chart"
          notify "There are some manual steps which need to be performed in order to upgrade the database"
          notify "Please see the upgrade documentation for instructions on how to proceed:"
          notify "https://docs.gitlab.com/charts/installation/upgrade.html"
          exit 1
        fi
      fi
    fi
    MIN_VERSION=15.11
    CHART_MIN_VERSION=6.11
    
    # Only run check for semver releases
    if ! awk 'BEGIN{exit(!(ARGV[1] ~ /^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/))}' "$GITLAB_VERSION"; then
      exit 0
    fi
    
    NEW_MAJOR_VERSION=$(echo $GITLAB_VERSION | awk -F "." '{print $1}')
    NEW_MINOR_VERSION=$(echo $GITLAB_VERSION | awk -F "." '{print $1"."$2}')
    
    NEW_CHART_MAJOR_VERSION=$(echo $CHART_VERSION | awk -F "." '{print $1}')
    NEW_CHART_MINOR_VERSION=$(echo $CHART_VERSION | awk -F "." '{print $1"."$2}')
    
    if [ ! -f /chart-info/gitlabVersion ]; then
      notify "It seems you are attempting an unsupported upgrade path."
      notify "Please follow the upgrade documentation at https://docs.gitlab.com/ee/update/#upgrade-paths"
      exit 1
    fi
    
    OLD_VERSION_STRING=$(cat /chart-info/gitlabVersion)
    OLD_CHART_VERSION_STRING=$(cat /chart-info/gitlabChartVersion)
    
    # Skip check if old version wasn't semver
    if ! awk 'BEGIN{exit(!(ARGV[1] ~ /^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/))}' "$OLD_VERSION_STRING"; then
      exit 0
    fi
    
    OLD_MAJOR_VERSION=$(echo $OLD_VERSION_STRING | awk -F "." '{print $1}')
    OLD_MINOR_VERSION=$(echo $OLD_VERSION_STRING | awk -F "." '{print $1"."$2}')
    OLD_CHART_MAJOR_VERSION=$(echo $OLD_CHART_VERSION_STRING | awk -F "." '{print $1}')
    OLD_CHART_MINOR_VERSION=$(echo $OLD_CHART_VERSION_STRING | awk -F "." '{print $1"."$2}')
    
    # Checking Version
    # (i) if it is a major version jump
    # (ii) if existing version is less than required minimum version
    if [ ${OLD_MAJOR_VERSION} -lt ${NEW_MAJOR_VERSION} ] || [ ${OLD_CHART_MAJOR_VERSION} -lt ${NEW_CHART_MAJOR_VERSION} ]; then
      if ( ! greater_version $OLD_MINOR_VERSION $MIN_VERSION ) || ( ! greater_version $OLD_CHART_MINOR_VERSION $CHART_MIN_VERSION ); then
        notify "It seems you are upgrading the GitLab Helm Chart from ${OLD_CHART_VERSION_STRING} (GitLab ${OLD_VERSION_STRING}) to ${CHART_VERSION} (GitLab ${GITLAB_VERSION})."
        notify "It is required to upgrade to the latest ${CHART_MIN_VERSION}.x version first before proceeding."
        notify "Please follow the upgrade documentation at https://docs.gitlab.com/charts/releases/7_0.html"
        notify "and upgrade to GitLab Helm Chart version ${CHART_MIN_VERSION}.x before upgrading to ${CHART_VERSION}."
        exit 1
      fi
    fi
---
# Source: gitlab/templates/shared-secrets/rbac-config.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gitlab-shared-secrets
  namespace: default
  labels:
    app: shared-secrets
    chart: shared-secrets-7.1.2-bb.0
    release: gitlab
    heritage: Helm
    
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "create", "patch"]
---
# Source: gitlab/templates/shared-secrets/rbac-config.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gitlab-shared-secrets
  namespace: default
  labels:
    app: shared-secrets
    chart: shared-secrets-7.1.2-bb.0
    release: gitlab
    heritage: Helm
    
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gitlab-shared-secrets
subjects:
  - kind: ServiceAccount
    name: gitlab-shared-secrets
    namespace: default
---
# Source: gitlab/charts/gitlab/charts/webservice/templates/tests/test-runner.yaml
apiVersion: v1
kind: Pod
metadata:
  name: gitlab-webservice-test-runner-ee0mz
  namespace: default
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed,before-hook-creation
  labels:
    app: webservice
    chart: webservice-7.1.2
    release: gitlab
    heritage: Helm
    
spec:
  containers:
  - name: test-runner
    image: registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-webservice:16.1.2
    command: ['sh', '/tests/test_login']
    volumeMounts:
      - name: tests
        mountPath: '/tests'
      - name: root-password
        readOnly: true
        mountPath: /initial_root_password
        subPath: initial_root_password
  volumes:
  - name: tests
    configMap:
      name: gitlab-webservice-tests
  - name: root-password
    secret:
      secretName: "gitlab-gitlab-initial-root-password"
      items:
        - key: "password"
          path: initial_root_password
  restartPolicy: Never
---
# Source: gitlab/templates/shared-secrets/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: gitlab-shared-secrets-1-xx9
  namespace: default
  labels:
    app: gitlab
    chart: gitlab-7.1.2-bb.0
    release: gitlab
    heritage: Helm
    
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: gitlab
        chart: gitlab-7.1.2-bb.0
        release: gitlab
        heritage: Helm
        
        
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      
      securityContext:
        runAsUser: 65534
        fsGroup: 65534
      serviceAccountName: gitlab-shared-secrets
      restartPolicy: Never
      
      imagePullSecrets:
      - name: private-registry
      containers:
        - name: gitlab
          image: registry1.dso.mil/ironbank/gitlab/gitlab/kubectl:16.1.2          
          command: ['/bin/bash', '/scripts/generate-secrets']
          volumeMounts:
            - name: scripts
              mountPath: /scripts
            - name: ssh
              mountPath: /etc/ssh
          resources:
            limits:
              cpu: 300m
              memory: 200Mi
            requests:
              cpu: 300m
              memory: 200Mi
      volumes:
      - name: scripts
        configMap:
          name: gitlab-shared-secrets
      - name: ssh
        emptyDir: {}
---
# Source: gitlab/templates/shared-secrets/self-signed-cert-job.yml
apiVersion: batch/v1
kind: Job
metadata:
  name: gitlab-shared-secrets-1-evc-selfsign
  namespace: default
  labels:
    app: gitlab
    chart: gitlab-7.1.2-bb.0
    release: gitlab
    heritage: Helm
    
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: gitlab
        release: gitlab
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      
      securityContext:
        runAsUser: 65534
        fsGroup: 65534
      serviceAccountName: gitlab-shared-secrets
      restartPolicy: Never
      
      imagePullSecrets:
      - name: private-registry
      - name: private-registry
      initContainers:
      - name: cfssl-self-sign
        image: registry1.dso.mil/ironbank/gitlab/gitlab/cfssl-self-sign:1.6.1        
        env:
        - name: CA_SUBJECT
          value: "GitLab Helm Chart" # defaults to GitLab in container
        - name: CA_ORG
          value: "default" # defaults to GitLab in container
        - name: CA_ORG_UNIT
          value: "gitlab" # defaults to Cloud Native in container
        - name: CERT_SUBJECT
          value: "stack.fredgentech.net" # defaults to GitLab in container
        - name: CERT_DOMAIN
          value: "stack.fredgentech.net" # defaults to example.com in container
        - name: EXPIRY
          value: "3650d" # defaults to 8076h in container
        - name: ALGORITHM
          value: "rsa" # defaults to ecdsa in container
        - name: KEY_SIZE
          value: "4096" # defaults to 256 inside container
        volumeMounts:
        - name: certs-path
          mountPath: /output
        resources:
          limits:
            cpu: 300m
            memory: 200Mi
          requests:
            cpu: 300m
            memory: 200Mi
      containers:
      - name: kubectl
        image: registry1.dso.mil/ironbank/gitlab/gitlab/kubectl:16.1.2        
        command:
        - /bin/bash
        - -exc
        - |
          certname=gitlab-wildcard-tls
          # create wildcard certificate secret
          kubectl create secret tls $certname \
            --cert=/output/wildcard.pem --key=/output/wildcard-key.pem || true
          kubectl --namespace=$namespace label \
            secret $certname  $(echo 'app.kubernetes.io/name=gitlab' | sed -E 's/=[^ ]*/-/g')
          kubectl --namespace=$namespace label --overwrite \
            secret $certname app=gitlab chart=gitlab-7.1.2-bb.0 release=gitlab heritage=Helm 
          # create CA certificate secret
          kubectl create secret generic ${certname}-ca \
            --from-file=cfssl_ca=/output/ca.pem || true
          kubectl --namespace=$namespace label \
            secret ${certname}-ca  $(echo 'app.kubernetes.io/name=gitlab' | sed -E 's/=[^ ]*/-/g')
          kubectl --namespace=$namespace label --overwrite \
            secret ${certname}-ca app=gitlab chart=gitlab-7.1.2-bb.0 release=gitlab heritage=Helm 
          # create certificate chain for GitLab Runner
          cat /output/ca.pem /output/wildcard.pem > /tmp/gitlab.stack.fredgentech.net.crt
          kubectl create secret generic ${certname}-chain \
            --from-file=/tmp/gitlab.stack.fredgentech.net.crt || true
          kubectl --namespace=$namespace label \
            secret ${certname}-chain  $(echo 'app.kubernetes.io/name=gitlab' | sed -E 's/=[^ ]*/-/g')
          kubectl --namespace=$namespace label --overwrite \
            secret ${certname}-chain app=gitlab chart=gitlab-7.1.2-bb.0 release=gitlab heritage=Helm 
        volumeMounts:
        - name: certs-path
          mountPath: /output
        resources:
          limits:
            cpu: 300m
            memory: 200Mi
          requests:
            cpu: 300m
            memory: 200Mi
      volumes:
      - name: certs-path
        emptyDir: {}
---
# Source: gitlab/templates/upgrade_check_hook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: gitlab-gitlab-upgrade-check
  namespace: default
  labels:
    app: gitlab
    chart: gitlab-7.1.2-bb.0
    release: gitlab
    heritage: Helm
    
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  backoffLimit: 2
  template:
    metadata:
      labels:
        app: gitlab
        release: gitlab
      annotations:
        sidecar.istio.io/inject: "false"

    spec:
      
      securityContext:
        runAsUser: 65534
        fsGroup: 65534
      restartPolicy: Never
      
      imagePullSecrets:
      - name: private-registry
      containers:
        - name: run-check
          image: "registry1.dso.mil/ironbank/redhat/ubi/ubi8:8.8"
          command: ['/bin/sh', '/scripts/runcheck']          
          env:
            - name: GITLAB_VERSION
              value: '16.1.2'
            - name: CHART_VERSION
              value: '7.1.2-bb.0'
          volumeMounts:
            - name: chart-info
              mountPath: /chart-info
            - name: scripts
              mountPath: /scripts
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 500m
              memory: 500Mi
      volumes:
      - name: chart-info
        configMap:
          name: gitlab-gitlab-chart-info
          optional: true
      - name: scripts
        configMap:
          name: gitlab-gitlab-upgrade-check
