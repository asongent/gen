apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: disallow-nodeport-loadbalancer-services
  annotations:
    policies.kyverno.io/title: Disallow NodePort
    policies.kyverno.io/category: Best Practices
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Service
    policies.kyverno.io/description: >-
      A Kubernetes Service of type NodePort uses a host port to receive traffic from
      any source. A NetworkPolicy cannot be used to control traffic to host ports.
      Although NodePort Services can be useful, their use must be limited to Services
      with additional upstream security checks. This policy validates that any new Services
      do not use the `NodePort` type.      
spec:
  validationFailureAction:  Enforce
  background: true
  rules:
  - name: disallow-nodeport-loadbalancer-services
    match:
      any:
      - resources:
          kinds:
          - Service
    validate:
      message: "NodePort and LoadBalancer services are not allowed."
      pattern:
        spec:
          =(type): "!NodePort"

---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: no-loadbalancer-service
  annotations:
    policies.kyverno.io/title: Disallow Service Type LoadBalancer
    policies.kyverno.io/category: Sample
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Service
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/description: >-
      Especially in cloud provider environments, a Service having type LoadBalancer will cause the
      provider to respond by creating a load balancer somewhere in the customer account. This adds
      cost and complexity to a deployment. Without restricting this ability, users may easily
      overrun established budgets and security practices set by the organization. This policy restricts
      use of the Service type LoadBalancer.      
spec:
  validationFailureAction: Enforce
  background: true
  rules:
  - name: no-LoadBalancer
    match:
      any:
      - resources:
          kinds:
          - Service
    exclude:
        resources:
          namespaces:
            - istio-system
    validate:
      message: "Service of type LoadBalancer is not allowed."
      pattern:
        spec:
          type: "!LoadBalancer"
