
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kyverno-istio-mutate
  namespace: istio-system
rules:
  - apiGroups: ["apps"]
    resources: ["Deployments"]
    verbs: ["get", "patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kyverno-istio-mutate-binding
  namespace: istio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kyverno-istio-mutate
subjects:
  - kind: ServiceAccount
    name: kyverno-background-controller
    namespace: kyverno

--- 
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: restart-deployment-on-secret-change
  annotations:
    policies.kyverno.io/title: Restart Deployment On Secret Change
    policies.kyverno.io/category: Other
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Deployment
    kyverno.io/kyverno-version: 1.7.0
    policies.kyverno.io/minversion: 1.7.0
    kyverno.io/kubernetes-version: "1.23"
    policies.kyverno.io/description: >-
      If Secrets are mounted in ways which do not naturally allow updates to
      be live refreshed it may be necessary to modify a Deployment. This policy
      watches a Secret and if it changes will write an annotation
      to one or more target Deployments thus triggering a new rollout and thereby
      refreshing the referred Secret. It may be necessary to grant additional privileges
      to the Kyverno ServiceAccount, via one of the existing ClusterRoleBindings or a new
      one, so it can modify Deployments.
spec:
  mutateExistingOnPolicyUpdate: false
  rules:
  - name: update-secret
    match:
      any:
      - resources:
          kinds:
          - Secret
          names:
          - gateway-certs 
          namespaces:
          - istio-system
    preconditions:
      all:
      - key: "{{request.operation || 'BACKGROUND'}}"
        operator: Equals
        value: UPDATE
    context:
      - name: stsList
        apiCall:
          urlPath: "/apis/apps/v1/namespaces/istio-system/Deployments"
          jmesPath: "items[?metadata.labels.\"app.kubernetes.io/instance\"=='ingressgateway']"
    mutate:
      targets:
        - apiVersion: apps/v1
          kind: Deployment
          name: keycloak
          namespace: keycloak
      patchStrategicMerge:
        spec:
          template:
            metadata:
              annotations:
                ops.corp.com/triggerrestart: "{{request.object.metadata.resourceVersion}}"