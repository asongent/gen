apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  labels:
  name: grafana-server
  namespace: monitoring
spec:
  gateways:
  - istio-system/general-gateway
  hosts:
  - 'grafana.fredgentech.net'
  http:
  - retries:
      attempts: 3
      perTryTimeout: 2s
    match:
    - uri:
        prefix: /
    route:
    - destination:
        host: prometheus-grafana.monitoring.svc.cluster.local
        port:
          number: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  labels:
  name: prometheus
  namespace: monitoring
spec:
  gateways:
  - istio-system/general-gateway
  hosts:
  - 'prom.fredgentech.net'
  http:
  - retries:
      attempts: 3
      perTryTimeout: 2s
    match:
    - uri:
        prefix: /
    route:
    - destination:
        host: prometheus-kube-prometheus-prometheus.monitoring.svc.cluster.local
        port:
          number: 9090
# ####This configuration below works when - --insecure flag is added to commands section of argocd-server deployment
      # - command:
      #   - argocd-server
      #   - --insecure #add this line
      #   - --staticassets
      #   - /shared/app
      #   - --redis
--- 

apiVersion: networking.istio.io/v1alpha3 #networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: argocd
  namespace: argocd
spec:
  gateways:
    - istio-system/general-gateway
  hosts:
    - argocd.fredgentech.net
  http:
    - route:
      - destination:
          host: argocd-server
          port:
            number: 80

#####
## ARGO VS SECOND OPTION. This WORKS WELL. (:

--- 
# apiVersion: networking.istio.io/v1alpha3
# kind: VirtualService
# metadata:
#   name: argocd-server
#   namespace: argocd
# spec:
#   gateways:
#   - istio-system/general-gateway
#   hosts:
#   - 'gitops.fredgentech.net'
#   http:
#       - route:
#         - destination:
#             host: argocd-server
#             port:
#               number: 80

--- 
##This config is for user management 
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  labels:
  name: keycloak-server
  namespace: user-management
spec:
  gateways:
  - istio-system/general-gateway
  hosts:
  - 'keycloak.fredgentech.net'
  http:
  - retries:
      attempts: 3
      perTryTimeout: 2s
    match:
    - uri:
        prefix: /
    route:
    - destination:
        host: keycloak
        port:
          number: 80

---
### This is for new kc
##This config is for user management 
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  labels:
  name: keycloak-server-new
  namespace: keycloak
spec:
  gateways:
  - istio-system/general-gateway
  hosts:
  - 'keycloak-new.fredgentech.net'
  http:
  - retries:
      attempts: 3
      perTryTimeout: 2s
    match:
    - uri:
        prefix: /
    route:
    - destination:
        host: keycloak-new-http
        port:
          number: 80


## Gitlab config

# apiVersion: networking.istio.io/v1alpha3
# kind: VirtualService
# metadata:
#   labels:
#   name: minio-vs
#   namespace: gitlab
# spec:
#   gateways:
#   - istio-system/general-gateway
#   hosts:
#   - 'minio.fredgentech.com'
#   http:
#   - retries:
#       attempts: 3
#       perTryTimeout: 2s
#     match:
#     - uri:
#         prefix: /
#     route:
#     - destination:
#         host: release-name-minio-svc.gitlab.svc.cluster.local
#         port:
#           number:  9000


# --- 
# apiVersion: networking.istio.io/v1beta1
# kind: VirtualService
# metadata:
#   name: argocd
#   namespace: gitlab
# spec:
#   gateways:
#     - istio-system/general-gateway
#   hosts:
#     - argocd.fredgentech.net
#   http:
#     - route:
#       - destination:
#           host: release-name-minio-svc
#           port:
#             number: 9000
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  labels:
  name: jaeger
  namespace: tracing
spec:
  gateways:
  - istio-system/general-gateway
  hosts:
  - 'jaegar.fredgentech.net'
  http:
  - retries:
      attempts: 3
      perTryTimeout: 2s
    match:
    - uri:
        prefix: /
    route:
    - destination:
        host: jaeger-query.tracing.svc.cluster.local
        port:
          number: 80