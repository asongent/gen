# Default values for stig-manager.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository:  registry1.dso.mil/ironbank/opensource/stig-manager  #ghcr.io/asongent/stig-manager:1.0.0
  name: stig-manager
  pullPolicy: IfNotPresent
  tag: "1.5.10"

imagePullSecrets:
- name: iron-bank-secret
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  token: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "stig-manager-sa"

## Anything data added to env  in the form of 
##  - name: STIGMAN_CLASSIFICATION
##    value: Uxxxxxxxxxxxxxnot 
## must not carry sensitive data
env: 
  - name:  STIGMAN_CLIENT_KEYCLOAK_CLIENTID
    value: stig-manager

  # - name: STIGMAN_DB_TLS_CA_FILE
  #   value: "/home/node/tls/mysql/ca.pem"

  # - name: STIGMAN_DB_CERT_FILE
  #   value: "/home/node/tls/mysql/tls.pem"

  # - name: STIGMAN_DB_TLS_KEY_FILE
  #   value: "/home/node/tls/mysql/key.pem"

#   - name: STIGMAN_CLIENT_OIDC_PROVIDER
#     value: https://localhost/kc/realms/stigman
#   - name: STIGMAN_OIDC_PROVIDER
#     value: http://keycloak:8080/realms/stigman

#   - name: STIGMAN_DB_HOST
#     value: mysql
#   - name: STIGMAN_DB_PASSWORD
#     value: stigmanpw
#   - name: STIGMAN_DB_USER
#     value: stigman


## I this context, the secret name must be "mysql-auth-secret". key may change, but must be updated in the entries
## below to match what was used when you created the secret. Example
# ##----
# apiVersion: v1
# kind: Secret
# metadata:
#   name: mysql-auth-secret
# data:
#   db_host: bXlzcWwuY29t
#   db_password: bXlzcS1wYXNz
#   db_user: bXlzcWwtdXNlcg==
#   odic_host: aHR0cDovL2tleWNsb2FrOjgwODAvcmVhbG1zL3N0aWdtYW4=
#   oidcclientproviderkey: aHR0cDovL2tleWNsb2FrOjgwODAvcmVhbG1zL3N0aWdtYW4=

secrets:
  - name: stigman-auth-secret
    dbusernameKey: db_user
    dbpasswordKey: db_password
    dbhostkey: host_url
    oidchostKey: oidc_host
    oidcclientproviderkey: oidc_client_provider
    classification: class

## In similar manner above create a secret called "oidc-provider-auth-secret" if extra envs such as 
## STIGMAN_OIDC_CLIENT_ID and STIGMAN_OIDC_CLIENT_SECRET are needed.
##----
## apiVersion: v1
## kind: Secret
## metadata:
#   name: oidc-provider-auth-secret
## data:
##   client_id: bXlzcWwuY29trtdsc
##   client_secret: rtfdeeebXlzcS1wYXNz

extralEnv: {}
  # secrets:
  # - name: oidc-provider-auth-secret
  #   oidcclientidKey: client_id
  #   oidcclientSecret: client_secret
  


podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: false
  # runAsNonRoot: false
  # runAsUser: 1000

### Turn enabled to tue if you would like to create networkk policy.
networkPolicy:
  enabled: false
containerPorts:
  - containerPort: 54000
    protocol: TCP
service:
  type: ClusterIP

  ports: 
  - name: https
    protocol: TCP
    port: 443
    targetPort: 52000

istio:
  create: true
  host: stigman.stack.fredgentech.net
  namespace: istio-system
  gatewayName: general-gateway
  servicePort:  54000

ingress:
  enabled:  false
  annotations: {}
  className: "nginx"
  pathType: ImplementationSpecific
  host: stigman.stack.fredgentech.net
  service:
    port: 52000
  tls: 
    secretName: tls-secret

  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
volumes: {}
# - name: stig-manager-volume
volumeMounts: {} 
# - name: stig-manager-volume
#   mountPath: /xxury/

extraVolumes: {}
# - name: msql-certificate-file
#   secret: 
#     secretName: msql-cert-secret

extraVolumeMounts: {}
# - name:  mysql-certificate-file
#   mountPath: /home/node/tls/mysql
#   readOnly: true
data: {}
  # persistenceVolumeClaim:
  # storageClassName: ""
  # accessMode: ReadWriteOnce
  # storage: 1Gi
  # claimTemaplate:
  #   name: stig-manager-volume
   
 
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: |
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            {{- include "keycloak.selectorLabels" . | nindent 10 }}
          matchExpressions:
            - key: app.kubernetes.io/component
              operator: NotIn
              values:
                - test
        topologyKey: kubernetes.io/hostname
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchLabels:
              {{- include "keycloak.selectorLabels" . | nindent 12 }}
            matchExpressions:
              - key: app.kubernetes.io/component
                operator: NotIn
                values:
                  - test
          topologyKey: topology.kubernetes.io/zone

database: 
  enabled: false
  image: mysql
  tag: 8.0
  storage: 20Gi
  auth: 
  - name: mysql-secret
    dbusername: db_user
    dbpassword: db_password
    rootpass: rootpass
  initiaDatabase: stigman
  replicaCount: 2